
DE10_NANO_ADC.elf:     file format elf32-littlenios2
DE10_NANO_ADC.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000401b4

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x00010630 memsz 0x00010630 flags r-x
    LOAD off    0x00011650 vaddr 0x00050650 paddr 0x00052228 align 2**12
         filesz 0x00001bd8 memsz 0x00001bd8 flags rw-
    LOAD off    0x00000e00 vaddr 0x00053e00 paddr 0x00053e00 align 2**12
         filesz 0x00000000 memsz 0x00000158 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000194  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fe0c  000401b4  000401b4  000011b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000690  0004ffc0  0004ffc0  00010fc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bd8  00050650  00052228  00011650  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000158  00053e00  00053e00  00013e00  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2 00000000  00053f58  00053f58  00013228  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  00013228  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000010c8  00000000  00000000  00013258  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   0002d656  00000000  00000000  00014320  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000c06a  00000000  00000000  00041976  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   0001129b  00000000  00000000  0004d9e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  0000241c  00000000  00000000  0005ec7c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    00002323  00000000  00000000  00061098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_alt_sim_info 00000060  00000000  00000000  000633bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000070  00000000  00000000  00063420  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line_str 00002039  00000000  00000000  00063490  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_loclists 000153e4  00000000  00000000  000654c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_rnglists 00001811  00000000  00000000  0007a8ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .thread_model 00000003  00000000  00000000  0007f476  2**0
                  CONTENTS, READONLY
 20 .cpu          0000000a  00000000  00000000  0007f479  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  0007f483  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  0007f484  2**0
                  CONTENTS, READONLY
 23 .sysid_hash   00000004  00000000  00000000  0007f485  2**0
                  CONTENTS, READONLY
 24 .sysid_base   00000004  00000000  00000000  0007f489  2**0
                  CONTENTS, READONLY
 25 .sysid_time   00000004  00000000  00000000  0007f48d  2**0
                  CONTENTS, READONLY
 26 .stderr_dev   00000009  00000000  00000000  0007f491  2**0
                  CONTENTS, READONLY
 27 .stdin_dev    00000009  00000000  00000000  0007f49a  2**0
                  CONTENTS, READONLY
 28 .stdout_dev   00000009  00000000  00000000  0007f4a3  2**0
                  CONTENTS, READONLY
 29 .sopc_system_name 0000000e  00000000  00000000  0007f4ac  2**0
                  CONTENTS, READONLY
 30 .quartus_project_dir 00000034  00000000  00000000  0007f4ba  2**0
                  CONTENTS, READONLY
 31 .jdi          00005267  00000000  00000000  0007f4ee  2**0
                  CONTENTS, READONLY
 32 .sopcinfo     00058822  00000000  00000000  00084755  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
000401b4 l    d  .text	00000000 .text
0004ffc0 l    d  .rodata	00000000 .rodata
00050650 l    d  .rwdata	00000000 .rwdata
00053e00 l    d  .bss	00000000 .bss
00053f58 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 crt0.o
000401fc l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00040094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00050150 l     O .rodata	00000010 zeroes.0
00043570 l     F .text	000000c4 __sbprintf
00050160 l     O .rodata	00000010 blanks.1
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00043780 l     F .text	000001fc quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00045450 l     F .text	00000008 __fp_lock
00045464 l     F .text	00000008 __fp_unlock
0004546c l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00050650 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0005020c l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
000488ac l     F .text	000000f4 __sprint_r.part.0
00050330 l     O .rodata	00000010 zeroes.0
00049c44 l     F .text	000000c4 __sbprintf
00050340 l     O .rodata	00000010 blanks.1
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0004d6b4 l     F .text	00000048 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004d7cc l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004d834 l     F .text	00000048 alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0004d94c l     F .text	00000048 alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0004da38 l     F .text	00000048 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004db70 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004dc5c l     F .text	00000048 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004de3c l     F .text	00000048 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00052218 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0004e0c0 l     F .text	00000048 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004e200 l     F .text	00000038 alt_dev_reg
00051190 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004e4e8 l     F .text	00000214 altera_avalon_jtag_uart_irq
0004e6fc l     F .text	000000ac altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0004f060 l     F .text	00000048 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0004f4fc l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0004f628 l     F .text	00000048 alt_get_errno
0004f670 l     F .text	000000bc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00047fd4 g     F .text	00000070 _mprec_log10
000480c0 g     F .text	00000060 __any_on
0004a34c g     F .text	00000058 _isatty_r
00050218 g     O .rodata	00000028 __mprec_tinytens
0004dd78 g     F .text	0000007c alt_main
00041034 g     F .text	000000d0 _puts_r
00053e58 g     O .bss	00000100 alt_irq
0004a498 g     F .text	00000064 _lseek_r
00052228 g       *ABS*	00000000 __flash_rwdata_start
0004c19c g     F .text	00000094 .hidden __eqdf2
00053f58 g       *ABS*	00000000 __alt_heap_start
0004add4 g     F .text	00000060 _kill_r
00040ffc g     F .text	00000038 printf
0004a7cc g     F .text	0000006c _wcrtomb_r
0004a970 g     F .text	00000090 _signal_r
00048848 g     F .text	0000005c __sseek
00045784 g     F .text	00000010 __sinit
0004a66c g     F .text	00000148 __swbuf_r
0004a3a4 g     F .text	00000074 _setlocale_r
000455d4 g     F .text	00000068 __sfmoreglue
0004de18 g     F .text	00000024 __malloc_unlock
00046dac g     F .text	00000128 memmove
00045770 g     F .text	00000014 _cleanup
00046fcc g     F .text	000000a4 _Balloc
0004c230 g     F .text	000000fc .hidden __gtdf2
0004fa54 g     F .text	00000024 altera_nios2_gen2_irq_init
00049f80 g     F .text	0000000c __errno
00040000 g     F .entry	0000001c __reset
000461dc g     F .text	00000008 __localeconv_l
00040020 g       *ABS*	00000000 __flash_exceptions_start
0004a2ec g     F .text	00000060 _fstat_r
00053e0c g     O .bss	00000004 errno
000487c0 g     F .text	00000008 __seofread
00053e18 g     O .bss	00000004 alt_argv
0005a1f0 g       *ABS*	00000000 _gp
0004e090 g     F .text	00000030 usleep
0004d92c g     F .text	00000020 getpid
00051010 g     O .rwdata	00000180 alt_fd_list
0004fa78 g     F .text	00000090 alt_find_dev
00046cac g     F .text	00000100 memcpy
00045458 g     F .text	0000000c _cleanup_r
0004d56c g     F .text	000000b8 .hidden __floatsidf
0004f5ac g     F .text	0000007c alt_io_redirect
0004c32c g     F .text	000000f8 .hidden __ltdf2
0004ffc0 g       *ABS*	00000000 __DTOR_END__
00041104 g     F .text	00000010 puts
00047f2c g     F .text	000000a8 __ratio
00049c28 g     F .text	0000001c __vfiprintf_internal
0004e904 g     F .text	00000220 altera_avalon_jtag_uart_read
00040fcc g     F .text	00000030 _printf_r
00040f0c g     F .text	00000064 .hidden __udivsi3
0004d994 g     F .text	000000a4 isatty
0004aa00 g     F .text	000000b0 _raise_r
00049dc4 g     F .text	00000064 __assert_func
00050268 g     O .rodata	000000c8 __mprec_tens
0004fcc0 g     F .text	00000090 alt_icache_flush
00053e08 g     O .bss	00000004 __malloc_top_pad
0004ae34 g     F .text	00000004 _getpid_r
000461e4 g     F .text	0000000c _localeconv_r
00047420 g     F .text	000000b0 __i2b
00045bf8 g     F .text	000004a4 __sfvwrite_r
0004aab0 g     F .text	000000bc __sigtramp_r
00048714 g     F .text	00000058 _sbrk_r
0004a54c g     F .text	00000064 _read_r
00052210 g     O .rwdata	00000004 alt_max_fd
00049f8c g     F .text	000000f8 _fclose_r
000453cc g     F .text	00000084 fflush
00053e04 g     O .bss	00000004 __malloc_max_sbrked_mem
00040ccc g     F .text	000000fc .hidden __extendsfdf2
0004b898 g     F .text	00000904 .hidden __adddf3
00047cd4 g     F .text	00000100 __b2d
0004b388 g     F .text	00000510 .hidden __umoddi3
0004dca4 g     F .text	000000d4 lseek
000521f0 g     O .rwdata	00000004 _global_impure_ptr
00048120 g     F .text	000005f4 _realloc_r
00053f58 g       *ABS*	00000000 __bss_end
0004f414 g     F .text	000000e8 alt_iic_isr_register
0004f928 g     F .text	0000012c alt_tick
0004ae38 g     F .text	00000550 .hidden __udivdi3
0004a250 g     F .text	00000024 _fputwc_r
00050240 g     O .rodata	00000028 __mprec_bigtens
000471c4 g     F .text	00000138 __s2b
0004a8fc g     F .text	00000018 abort
0004d624 g     F .text	00000090 .hidden __floatunsidf
000479ec g     F .text	00000058 __mcmp
000457a4 g     F .text	00000014 __fp_lock_all
0004f3c8 g     F .text	0000004c alt_ic_irq_enabled
0004f884 g     F .text	000000a4 alt_alarm_stop
00053e20 g     O .bss	00000004 alt_irq_active
000400ec g     F .exceptions	000000c8 alt_irq_handler
00050fe8 g     O .rwdata	00000028 alt_dev_null
0004f014 g     F .text	0000004c alt_dcache_flush_all
000472fc g     F .text	00000074 __hi0bits
0004d4ec g     F .text	00000080 .hidden __fixdfsi
00052228 g       *ABS*	00000000 __ram_rwdata_end
00052208 g     O .rwdata	00000008 alt_dev_list
0004e108 g     F .text	000000f8 write
00050650 g       *ABS*	00000000 __ram_rodata_end
0004d87c g     F .text	000000b0 fstat
0004da80 g     F .text	000000f0 kill
0004c32c g     F .text	000000f8 .hidden __ledf2
00047724 g     F .text	00000140 __pow5mult
000489b8 g     F .text	00001270 ___vfiprintf_internal_r
00040f70 g     F .text	0000005c .hidden __umodsi3
00053f58 g       *ABS*	00000000 end
0004e424 g     F .text	000000c4 altera_avalon_jtag_uart_init
0004ffc0 g       *ABS*	00000000 __CTOR_LIST__
00067100 g       *ABS*	00000000 __alt_stack_pointer
00040dc8 g     F .text	00000050 .hidden __clzsi2
0004eb24 g     F .text	00000228 altera_avalon_jtag_uart_write
00045794 g     F .text	00000004 __sfp_lock_acquire
00046bdc g     F .text	000000d0 memchr
000411ac g     F .text	000023a8 ___vfprintf_internal_r
000458f0 g     F .text	00000308 _free_r
000504a4 g     O .rodata	00000180 _ctype_b
0004a418 g     F .text	0000000c __locale_mb_cur_max
0004fea0 g     F .text	00000120 __call_exitprocs
000521f8 g     O .rwdata	00000004 __malloc_sbrk_base
000401b4 g     F .text	0000004c _start
00053e24 g     O .bss	00000004 _alt_tick_rate
00047864 g     F .text	00000188 __lshift
00053e28 g     O .bss	00000008 _alt_nticks
0004ac20 g     F .text	00000098 signal
0004de84 g     F .text	000000fc read
0004e274 g     F .text	0000004c alt_sys_init
0004035c g     F .text	00000128 .hidden __floatsisf
0004fe10 g     F .text	00000090 __register_exitproc
000474d0 g     F .text	00000254 __multiply
0004e7a8 g     F .text	00000068 altera_avalon_jtag_uart_close
00050650 g       *ABS*	00000000 __ram_rwdata_start
0004ffc0 g       *ABS*	00000000 __ram_rodata_start
00053e30 g     O .bss	00000028 __malloc_current_mallinfo
00047dd4 g     F .text	00000158 __d2b
0004e2c0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0004fc18 g     F .text	000000a8 alt_get_fd
0004eebc g     F .text	00000158 alt_busy_sleep
00049d6c g     F .text	00000058 _close_r
0004fd98 g     F .text	00000078 memcmp
0004e380 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00053f58 g       *ABS*	00000000 __alt_stack_base
0004e3d0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00043634 g     F .text	0000014c __swsetup_r
00040484 g     F .text	00000848 .hidden __divdf3
0004563c g     F .text	00000134 __sfp
00048044 g     F .text	0000007c __copybits
00050a74 g     O .rwdata	00000408 __malloc_av_
000457a0 g     F .text	00000004 __sinit_lock_release
0004c424 g     F .text	000006d8 .hidden __muldf3
0004876c g     F .text	00000054 __sread
0004fb08 g     F .text	00000110 alt_find_file
0004f0a8 g     F .text	000000a8 alt_dev_llist_insert
0004ddf4 g     F .text	00000024 __malloc_lock
0004dfd8 g     F .text	000000b8 sbrk
0004536c g     F .text	00000060 _fflush_r
00049e3c g     F .text	00000144 _calloc_r
00053e00 g       *ABS*	00000000 __bss_start
00046ed4 g     F .text	000000f8 memset
00040200 g     F .text	0000015c main
00053e1c g     O .bss	00000004 alt_envp
00053e00 g     O .bss	00000004 __malloc_max_total_mem
0004e320 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004a7b4 g     F .text	00000018 __swbuf
000488a4 g     F .text	00000008 __sclose
00067100 g       *ABS*	00000000 __alt_heap_limit
0004a084 g     F .text	00000010 fclose
0004397c g     F .text	000017e8 _dtoa_r
00046428 g     F .text	000007b4 _malloc_r
0004a8cc g     F .text	00000030 __ascii_wctomb
00052214 g     O .rwdata	00000004 alt_errno
0004a094 g     F .text	00000020 _fiprintf_r
0004acb8 g     F .text	00000060 _init_signal
0004609c g     F .text	00000098 _fwalk
0004a4fc g     F .text	0000000c _mbtowc_r
00040e18 g     F .text	00000080 .hidden __divsi3
000457cc g     F .text	00000124 _malloc_trim_r
0004ffc0 g       *ABS*	00000000 __CTOR_END__
0004a5b0 g     F .text	000000b8 strcmp
0004ffc0 g       *ABS*	00000000 __flash_rodata_start
0004ffc0 g       *ABS*	00000000 __DTOR_LIST__
0004c19c g     F .text	00000094 .hidden __nedf2
0004e238 g     F .text	0000003c alt_irq_init
0004df80 g     F .text	00000058 alt_release_fd
00050008 g     O .rodata	00000100 .hidden __clz_tab
00053e10 g     O .bss	00000004 _PathLocale
0004fd50 g     F .text	00000014 atexit
00049d08 g     F .text	00000064 _write_r
0004a424 g     F .text	00000074 setlocale
000521f4 g     O .rwdata	00000004 _impure_ptr
00053e14 g     O .bss	00000004 alt_argc
00045164 g     F .text	00000208 __sflush_r
0004f1b4 g     F .text	00000064 _do_dtors
00040020 g       .exceptions	00000000 alt_irq_entry
0004a508 g     F .text	00000044 __ascii_mbtowc
00047c74 g     F .text	00000060 __ulp
000457b8 g     F .text	00000014 __fp_unlock_all
00052200 g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
000461f0 g     F .text	0000000c localeconv
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2
0004639c g     F .text	0000008c __swhatbuf_r
0004f24c g     F .text	00000050 alt_ic_isr_register
00052228 g       *ABS*	00000000 _edata
00053f58 g       *ABS*	00000000 _end
0004a0ec g     F .text	00000164 __fputwc
000401b4 g       *ABS*	00000000 __ram_exceptions_end
0004e810 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0004f330 g     F .text	00000098 alt_ic_irq_disable
000487c8 g     F .text	00000080 __swrite
000521fc g     O .rwdata	00000004 __malloc_trim_threshold
0004fd64 g     F .text	00000034 exit
0004a0b4 g     F .text	00000038 fiprintf
0004a668 g     F .text	00000004 _vfiprintf_r
00046134 g     F .text	000000a8 _fwalk_reent
00047a44 g     F .text	00000230 __mdiff
00040e98 g     F .text	00000074 .hidden __modsi3
00067100 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
00045798 g     F .text	00000004 __sfp_lock_release
000503a0 g     O .rodata	00000101 _ctype_
0004d498 g     F .text	00000054 .hidden __unorddf2
0004d7f8 g     F .text	0000003c _exit
0004ed4c g     F .text	00000170 alt_alarm_start
000461fc g     F .text	000001a0 __smakebuf_r
00041114 g     F .text	00000098 strlen
0004a914 g     F .text	0000005c _init_signal_r
0004f72c g     F .text	00000158 open
0004c230 g     F .text	000000fc .hidden __gedf2
00049e28 g     F .text	00000014 __assert
000489a0 g     F .text	00000018 __sprint_r
0004f218 g     F .text	00000034 alt_icache_flush_all
0005221c g     O .rwdata	00000004 alt_priority_mask
0004f29c g     F .text	00000094 alt_ic_irq_enable
00043554 g     F .text	0000001c __vfprintf_internal
0004a8c0 g     F .text	0000000c _wctomb_r
0004cafc g     F .text	0000099c .hidden __subdf3
00047370 g     F .text	000000b0 __lo0bits
00052220 g     O .rwdata	00000008 alt_alarm_list
0004f150 g     F .text	00000064 _do_ctors
0004ad18 g     F .text	000000bc __sigtramp
0004a838 g     F .text	00000088 wcrtomb
0004d6fc g     F .text	000000d0 close
00050e7c g     O .rwdata	0000016c __global_locale
0004dbd8 g     F .text	00000084 alt_load
0004a274 g     F .text	00000078 fputwc
0004ab6c g     F .text	000000b4 raise
0004579c g     F .text	00000004 __sinit_lock_acquire
00047094 g     F .text	00000130 __multadd
00047070 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08406d14 	ori	at,at,436
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__reset-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400ec0 	call	400ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000306 	br	40098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)

00040094 <alt_exception_unknown>:
   40094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   40098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   4009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400e8:	ef80083a 	eret

000400ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400ec:	defff904 	addi	sp,sp,-28
   400f0:	dfc00615 	stw	ra,24(sp)
   400f4:	df000515 	stw	fp,20(sp)
   400f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   400fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40100:	0005313a 	rdctl	r2,ipending
   40104:	e0bffc15 	stw	r2,-16(fp)

  return active;
   40108:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4010c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   40110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40114:	00800044 	movi	r2,1
   40118:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4011c:	e0ffff17 	ldw	r3,-4(fp)
   40120:	e0bffe17 	ldw	r2,-8(fp)
   40124:	1884703a 	and	r2,r3,r2
   40128:	10001126 	beq	r2,zero,40170 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4012c:	e0bffd17 	ldw	r2,-12(fp)
   40130:	100690fa 	slli	r3,r2,3
   40134:	00800174 	movhi	r2,5
   40138:	1885883a 	add	r2,r3,r2
   4013c:	10cf9617 	ldw	r3,15960(r2)
   40140:	e0bffd17 	ldw	r2,-12(fp)
   40144:	100890fa 	slli	r4,r2,3
   40148:	00800174 	movhi	r2,5
   4014c:	2085883a 	add	r2,r4,r2
   40150:	108f9717 	ldw	r2,15964(r2)
   40154:	1009883a 	mov	r4,r2
   40158:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   4015c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
   40160:	0005313a 	rdctl	r2,ipending
   40164:	e0bffb15 	stw	r2,-20(fp)
  return active;
   40168:	e0bffb17 	ldw	r2,-20(fp)
   4016c:	00000706 	br	4018c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
   40170:	e0bffe17 	ldw	r2,-8(fp)
   40174:	1085883a 	add	r2,r2,r2
   40178:	e0bffe15 	stw	r2,-8(fp)
      i++;
   4017c:	e0bffd17 	ldw	r2,-12(fp)
   40180:	10800044 	addi	r2,r2,1
   40184:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
   40188:	003fe406 	br	4011c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
   4018c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   40190:	e0bfff17 	ldw	r2,-4(fp)
   40194:	103fde1e 	bne	r2,zero,40110 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   40198:	0001883a 	nop
}
   4019c:	0001883a 	nop
   401a0:	e037883a 	mov	sp,fp
   401a4:	dfc00117 	ldw	ra,4(sp)
   401a8:	df000017 	ldw	fp,0(sp)
   401ac:	dec00204 	addi	sp,sp,8
   401b0:	f800283a 	ret

Disassembly of section .text:

000401b4 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   401b4:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   401b8:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   401bc:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   401c0:	00bffd16 	blt	zero,r2,401b8 <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   401c4:	06c001b4 	movhi	sp,6
    ori sp, sp, %lo(__alt_stack_pointer)
   401c8:	dedc4014 	ori	sp,sp,28928
    movhi gp, %hi(_gp)
   401cc:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   401d0:	d6a87c14 	ori	gp,gp,41456
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   401d4:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   401d8:	108f8014 	ori	r2,r2,15872

    movhi r3, %hi(__bss_end)
   401dc:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   401e0:	18cfd614 	ori	r3,r3,16216

    beq r2, r3, 1f
   401e4:	10c00326 	beq	r2,r3,401f4 <_start+0x40>

0:
    stw zero, (r2)
   401e8:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   401ec:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   401f0:	10fffd36 	bltu	r2,r3,401e8 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   401f4:	004dbd80 	call	4dbd8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   401f8:	004dd780 	call	4dd78 <alt_main>

000401fc <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   401fc:	003fff06 	br	401fc <alt_after_alt_main>

00040200 <main>:
#include <io.h>
#include <unistd.h>

#include "system.h"

void main(void){
   40200:	defff804 	addi	sp,sp,-32
   40204:	dfc00715 	stw	ra,28(sp)
   40208:	df000615 	stw	fp,24(sp)
   4020c:	df000604 	addi	fp,sp,24
	int ch = 0;
   40210:	e03ffd15 	stw	zero,-12(fp)
	const int nReadNum = 10; // max 1024
   40214:	00800284 	movi	r2,10
   40218:	e0bffc15 	stw	r2,-16(fp)
	int i, Value, nIndex=0;
   4021c:	e03ffe15 	stw	zero,-8(fp)

	printf("ADC Demo\r\n");
   40220:	01000174 	movhi	r4,5
   40224:	213ff004 	addi	r4,r4,-64
   40228:	00411040 	call	41104 <puts>
	while(1){
		ch = IORD(SW_BASE, 0x00) & 0x07;
   4022c:	00800037 	ldwio	r2,0(zero)
   40230:	108001cc 	andi	r2,r2,7
   40234:	e0bffd15 	stw	r2,-12(fp)

		printf("======================= %d, ch=%d\r\n", nIndex++, ch);
   40238:	e0bffe17 	ldw	r2,-8(fp)
   4023c:	10c00044 	addi	r3,r2,1
   40240:	e0fffe15 	stw	r3,-8(fp)
   40244:	e1bffd17 	ldw	r6,-12(fp)
   40248:	100b883a 	mov	r5,r2
   4024c:	01000174 	movhi	r4,5
   40250:	213ff304 	addi	r4,r4,-52
   40254:	0040ffc0 	call	40ffc <printf>
		// set measure number for ADC convert
		IOWR(ADC_LTC2308_BASE, 0x01, nReadNum);
   40258:	e0fffc17 	ldw	r3,-16(fp)
   4025c:	00800234 	movhi	r2,8
   40260:	10c40535 	stwio	r3,4116(r2)


		// start measure
		IOWR(ADC_LTC2308_BASE, 0x00, (ch << 1) | 0x00);
   40264:	e0bffd17 	ldw	r2,-12(fp)
   40268:	1085883a 	add	r2,r2,r2
   4026c:	1007883a 	mov	r3,r2
   40270:	00800234 	movhi	r2,8
   40274:	10c40435 	stwio	r3,4112(r2)
		IOWR(ADC_LTC2308_BASE, 0x00, (ch << 1) | 0x01);
   40278:	e0bffd17 	ldw	r2,-12(fp)
   4027c:	1085883a 	add	r2,r2,r2
   40280:	10c00054 	ori	r3,r2,1
   40284:	00800234 	movhi	r2,8
   40288:	10c40435 	stwio	r3,4112(r2)
		IOWR(ADC_LTC2308_BASE, 0x00, (ch << 1) | 0x00);
   4028c:	e0bffd17 	ldw	r2,-12(fp)
   40290:	1085883a 	add	r2,r2,r2
   40294:	1007883a 	mov	r3,r2
   40298:	00800234 	movhi	r2,8
   4029c:	10c40435 	stwio	r3,4112(r2)
		usleep(1);
   402a0:	01000044 	movi	r4,1
   402a4:	004e0900 	call	4e090 <usleep>

		// wait measure done
		while ((IORD(ADC_LTC2308_BASE,0x00) & 0x01) == 0x00);
   402a8:	0001883a 	nop
   402ac:	00800234 	movhi	r2,8
   402b0:	10840437 	ldwio	r2,4112(r2)
   402b4:	1080004c 	andi	r2,r2,1
   402b8:	103ffc26 	beq	r2,zero,402ac <main+0xac>

		// read adc value
		for(i=0;i<nReadNum;i++){
   402bc:	e03fff15 	stw	zero,-4(fp)
   402c0:	00001f06 	br	40340 <main+0x140>
			Value = IORD(ADC_LTC2308_BASE, 0x01);
   402c4:	00800234 	movhi	r2,8
   402c8:	10840537 	ldwio	r2,4116(r2)
   402cc:	e0bffb15 	stw	r2,-20(fp)
			printf("CH%d=%.3fV (0x%04x)\r\n", ch, (float)Value/1000.0, Value);
   402d0:	e13ffb17 	ldw	r4,-20(fp)
   402d4:	004035c0 	call	4035c <__floatsisf>
   402d8:	1007883a 	mov	r3,r2
   402dc:	1809883a 	mov	r4,r3
   402e0:	0040ccc0 	call	40ccc <__extendsfdf2>
   402e4:	1011883a 	mov	r8,r2
   402e8:	1813883a 	mov	r9,r3
   402ec:	000d883a 	mov	r6,zero
   402f0:	01d023f4 	movhi	r7,16527
   402f4:	39d00004 	addi	r7,r7,16384
   402f8:	4009883a 	mov	r4,r8
   402fc:	480b883a 	mov	r5,r9
   40300:	00404840 	call	40484 <__divdf3>
   40304:	1009883a 	mov	r4,r2
   40308:	180b883a 	mov	r5,r3
   4030c:	2005883a 	mov	r2,r4
   40310:	2807883a 	mov	r3,r5
   40314:	e13ffb17 	ldw	r4,-20(fp)
   40318:	d9000015 	stw	r4,0(sp)
   4031c:	100d883a 	mov	r6,r2
   40320:	180f883a 	mov	r7,r3
   40324:	e17ffd17 	ldw	r5,-12(fp)
   40328:	01000174 	movhi	r4,5
   4032c:	213ffc04 	addi	r4,r4,-16
   40330:	0040ffc0 	call	40ffc <printf>
		for(i=0;i<nReadNum;i++){
   40334:	e0bfff17 	ldw	r2,-4(fp)
   40338:	10800044 	addi	r2,r2,1
   4033c:	e0bfff15 	stw	r2,-4(fp)
   40340:	e0ffff17 	ldw	r3,-4(fp)
   40344:	e0bffc17 	ldw	r2,-16(fp)
   40348:	18bfde16 	blt	r3,r2,402c4 <main+0xc4>
		}

		usleep(200*1000);
   4034c:	010000f4 	movhi	r4,3
   40350:	21035004 	addi	r4,r4,3392
   40354:	004e0900 	call	4e090 <usleep>
		ch = IORD(SW_BASE, 0x00) & 0x07;
   40358:	003fb406 	br	4022c <main+0x2c>

0004035c <__floatsisf>:
   4035c:	defffd04 	addi	sp,sp,-12
   40360:	dfc00215 	stw	ra,8(sp)
   40364:	dc400115 	stw	r17,4(sp)
   40368:	dc000015 	stw	r16,0(sp)
   4036c:	20001226 	beq	r4,zero,403b8 <__floatsisf+0x5c>
   40370:	2022d7fa 	srli	r17,r4,31
   40374:	2021883a 	mov	r16,r4
   40378:	20003316 	blt	r4,zero,40448 <__floatsisf+0xec>
   4037c:	8009883a 	mov	r4,r16
   40380:	0040dc80 	call	40dc8 <__clzsi2>
   40384:	1009883a 	mov	r4,r2
   40388:	00802784 	movi	r2,158
   4038c:	1105c83a 	sub	r2,r2,r4
   40390:	10c025c8 	cmpgei	r3,r2,151
   40394:	1800151e 	bne	r3,zero,403ec <__floatsisf+0x90>
   40398:	20c00218 	cmpnei	r3,r4,8
   4039c:	18003426 	beq	r3,zero,40470 <__floatsisf+0x114>
   403a0:	20fffe04 	addi	r3,r4,-8
   403a4:	80c6983a 	sll	r3,r16,r3
   403a8:	01002034 	movhi	r4,128
   403ac:	213fffc4 	addi	r4,r4,-1
   403b0:	1906703a 	and	r3,r3,r4
   403b4:	00000306 	br	403c4 <__floatsisf+0x68>
   403b8:	0023883a 	mov	r17,zero
   403bc:	0005883a 	mov	r2,zero
   403c0:	0007883a 	mov	r3,zero
   403c4:	10803fcc 	andi	r2,r2,255
   403c8:	100495fa 	slli	r2,r2,23
   403cc:	880897fa 	slli	r4,r17,31
   403d0:	10c4b03a 	or	r2,r2,r3
   403d4:	1104b03a 	or	r2,r2,r4
   403d8:	dfc00217 	ldw	ra,8(sp)
   403dc:	dc400117 	ldw	r17,4(sp)
   403e0:	dc000017 	ldw	r16,0(sp)
   403e4:	dec00304 	addi	sp,sp,12
   403e8:	f800283a 	ret
   403ec:	10c02690 	cmplti	r3,r2,154
   403f0:	18001726 	beq	r3,zero,40450 <__floatsisf+0xf4>
   403f4:	20c00160 	cmpeqi	r3,r4,5
   403f8:	217ffec4 	addi	r5,r4,-5
   403fc:	1800011e 	bne	r3,zero,40404 <__floatsisf+0xa8>
   40400:	8160983a 	sll	r16,r16,r5
   40404:	017f0034 	movhi	r5,64512
   40408:	297fffc4 	addi	r5,r5,-1
   4040c:	818001cc 	andi	r6,r16,7
   40410:	8146703a 	and	r3,r16,r5
   40414:	30000926 	beq	r6,zero,4043c <__floatsisf+0xe0>
   40418:	840003cc 	andi	r16,r16,15
   4041c:	84000120 	cmpeqi	r16,r16,4
   40420:	8000061e 	bne	r16,zero,4043c <__floatsisf+0xe0>
   40424:	18c00104 	addi	r3,r3,4
   40428:	1981002c 	andhi	r6,r3,1024
   4042c:	30000326 	beq	r6,zero,4043c <__floatsisf+0xe0>
   40430:	008027c4 	movi	r2,159
   40434:	1946703a 	and	r3,r3,r5
   40438:	1105c83a 	sub	r2,r2,r4
   4043c:	180691ba 	slli	r3,r3,6
   40440:	1806d27a 	srli	r3,r3,9
   40444:	003fdf06 	br	403c4 <__floatsisf+0x68>
   40448:	0121c83a 	sub	r16,zero,r4
   4044c:	003fcb06 	br	4037c <__floatsisf+0x20>
   40450:	20c006c4 	addi	r3,r4,27
   40454:	01400144 	movi	r5,5
   40458:	80c6983a 	sll	r3,r16,r3
   4045c:	290bc83a 	sub	r5,r5,r4
   40460:	8160d83a 	srl	r16,r16,r5
   40464:	1806c03a 	cmpne	r3,r3,zero
   40468:	80e0b03a 	or	r16,r16,r3
   4046c:	003fe506 	br	40404 <__floatsisf+0xa8>
   40470:	00c02034 	movhi	r3,128
   40474:	18ffffc4 	addi	r3,r3,-1
   40478:	80c6703a 	and	r3,r16,r3
   4047c:	00bfe584 	movi	r2,-106
   40480:	003fd006 	br	403c4 <__floatsisf+0x68>

00040484 <__divdf3>:
   40484:	2806d53a 	srli	r3,r5,20
   40488:	defff304 	addi	sp,sp,-52
   4048c:	00800434 	movhi	r2,16
   40490:	dd800915 	stw	r22,36(sp)
   40494:	dd400815 	stw	r21,32(sp)
   40498:	dd000715 	stw	r20,28(sp)
   4049c:	dc400415 	stw	r17,16(sp)
   404a0:	dc000315 	stw	r16,12(sp)
   404a4:	10bfffc4 	addi	r2,r2,-1
   404a8:	dfc00c15 	stw	ra,48(sp)
   404ac:	df000b15 	stw	fp,44(sp)
   404b0:	ddc00a15 	stw	r23,40(sp)
   404b4:	dcc00615 	stw	r19,24(sp)
   404b8:	dc800515 	stw	r18,20(sp)
   404bc:	18c1ffcc 	andi	r3,r3,2047
   404c0:	282cd7fa 	srli	r22,r5,31
   404c4:	302b883a 	mov	r21,r6
   404c8:	3821883a 	mov	r16,r7
   404cc:	2029883a 	mov	r20,r4
   404d0:	28a2703a 	and	r17,r5,r2
   404d4:	18010d26 	beq	r3,zero,4090c <__divdf3+0x488>
   404d8:	1881ffe0 	cmpeqi	r2,r3,2047
   404dc:	10011e1e 	bne	r2,zero,40958 <__divdf3+0x4d4>
   404e0:	880a90fa 	slli	r5,r17,3
   404e4:	2008d77a 	srli	r4,r4,29
   404e8:	a02890fa 	slli	r20,r20,3
   404ec:	1cff0044 	addi	r19,r3,-1023
   404f0:	2148b03a 	or	r4,r4,r5
   404f4:	24802034 	orhi	r18,r4,128
   404f8:	0023883a 	mov	r17,zero
   404fc:	0039883a 	mov	fp,zero
   40500:	8006d53a 	srli	r3,r16,20
   40504:	00800434 	movhi	r2,16
   40508:	10bfffc4 	addi	r2,r2,-1
   4050c:	18c1ffcc 	andi	r3,r3,2047
   40510:	802ed7fa 	srli	r23,r16,31
   40514:	80a0703a 	and	r16,r16,r2
   40518:	1800eb26 	beq	r3,zero,408c8 <__divdf3+0x444>
   4051c:	1881ffe0 	cmpeqi	r2,r3,2047
   40520:	1001141e 	bne	r2,zero,40974 <__divdf3+0x4f0>
   40524:	802090fa 	slli	r16,r16,3
   40528:	a804d77a 	srli	r2,r21,29
   4052c:	a80e90fa 	slli	r7,r21,3
   40530:	18ff0044 	addi	r3,r3,-1023
   40534:	1420b03a 	or	r16,r2,r16
   40538:	98e7c83a 	sub	r19,r19,r3
   4053c:	84002034 	orhi	r16,r16,128
   40540:	0007883a 	mov	r3,zero
   40544:	88800428 	cmpgeui	r2,r17,16
   40548:	b5eaf03a 	xor	r21,r22,r23
   4054c:	1000391e 	bne	r2,zero,40634 <__divdf3+0x1b0>
   40550:	882290ba 	slli	r17,r17,2
   40554:	00800134 	movhi	r2,4
   40558:	8885883a 	add	r2,r17,r2
   4055c:	10815917 	ldw	r2,1380(r2)
   40560:	1000683a 	jmp	r2
   40564:	00040634 	movhi	zero,4120
   40568:	0004061c 	xori	zero,zero,4120
   4056c:	000405cc 	andi	zero,zero,4119
   40570:	0004062c 	andhi	zero,zero,4120
   40574:	000405cc 	andi	zero,zero,4119
   40578:	000409d8 	cmpnei	zero,zero,4135
   4057c:	000405cc 	andi	zero,zero,4119
   40580:	0004062c 	andhi	zero,zero,4120
   40584:	0004061c 	xori	zero,zero,4120
   40588:	0004061c 	xori	zero,zero,4120
   4058c:	000409d8 	cmpnei	zero,zero,4135
   40590:	0004062c 	andhi	zero,zero,4120
   40594:	000405a4 	muli	zero,zero,4118
   40598:	000405a4 	muli	zero,zero,4118
   4059c:	000405a4 	muli	zero,zero,4118
   405a0:	00040a68 	cmpgeui	zero,zero,4137
   405a4:	b02b883a 	mov	r21,r22
   405a8:	9021883a 	mov	r16,r18
   405ac:	a00f883a 	mov	r7,r20
   405b0:	e007883a 	mov	r3,fp
   405b4:	188000a0 	cmpeqi	r2,r3,2
   405b8:	1000181e 	bne	r2,zero,4061c <__divdf3+0x198>
   405bc:	188000e0 	cmpeqi	r2,r3,3
   405c0:	1001b61e 	bne	r2,zero,40c9c <__divdf3+0x818>
   405c4:	18c00060 	cmpeqi	r3,r3,1
   405c8:	1800ac26 	beq	r3,zero,4087c <__divdf3+0x3f8>
   405cc:	000b883a 	mov	r5,zero
   405d0:	0009883a 	mov	r4,zero
   405d4:	0029883a 	mov	r20,zero
   405d8:	2806953a 	slli	r3,r5,20
   405dc:	a82a97fa 	slli	r21,r21,31
   405e0:	a005883a 	mov	r2,r20
   405e4:	1906b03a 	or	r3,r3,r4
   405e8:	1d46b03a 	or	r3,r3,r21
   405ec:	dfc00c17 	ldw	ra,48(sp)
   405f0:	df000b17 	ldw	fp,44(sp)
   405f4:	ddc00a17 	ldw	r23,40(sp)
   405f8:	dd800917 	ldw	r22,36(sp)
   405fc:	dd400817 	ldw	r21,32(sp)
   40600:	dd000717 	ldw	r20,28(sp)
   40604:	dcc00617 	ldw	r19,24(sp)
   40608:	dc800517 	ldw	r18,20(sp)
   4060c:	dc400417 	ldw	r17,16(sp)
   40610:	dc000317 	ldw	r16,12(sp)
   40614:	dec00d04 	addi	sp,sp,52
   40618:	f800283a 	ret
   4061c:	0141ffc4 	movi	r5,2047
   40620:	0009883a 	mov	r4,zero
   40624:	0029883a 	mov	r20,zero
   40628:	003feb06 	br	405d8 <__divdf3+0x154>
   4062c:	b82b883a 	mov	r21,r23
   40630:	003fe006 	br	405b4 <__divdf3+0x130>
   40634:	84812636 	bltu	r16,r18,40ad0 <__divdf3+0x64c>
   40638:	84812426 	beq	r16,r18,40acc <__divdf3+0x648>
   4063c:	9cffffc4 	addi	r19,r19,-1
   40640:	a023883a 	mov	r17,r20
   40644:	0007883a 	mov	r3,zero
   40648:	8020923a 	slli	r16,r16,8
   4064c:	3828d63a 	srli	r20,r7,24
   40650:	9009883a 	mov	r4,r18
   40654:	802cd43a 	srli	r22,r16,16
   40658:	d8c00015 	stw	r3,0(sp)
   4065c:	382e923a 	slli	r23,r7,8
   40660:	b00b883a 	mov	r5,r22
   40664:	0040f0c0 	call	40f0c <__udivsi3>
   40668:	9009883a 	mov	r4,r18
   4066c:	b00b883a 	mov	r5,r22
   40670:	a428b03a 	or	r20,r20,r16
   40674:	1021883a 	mov	r16,r2
   40678:	0040f700 	call	40f70 <__umodsi3>
   4067c:	1004943a 	slli	r2,r2,16
   40680:	8808d43a 	srli	r4,r17,16
   40684:	a4bfffcc 	andi	r18,r20,65535
   40688:	940b383a 	mul	r5,r18,r16
   4068c:	2088b03a 	or	r4,r4,r2
   40690:	d8c00017 	ldw	r3,0(sp)
   40694:	2140042e 	bgeu	r4,r5,406a8 <__divdf3+0x224>
   40698:	2509883a 	add	r4,r4,r20
   4069c:	80bfffc4 	addi	r2,r16,-1
   406a0:	25013b2e 	bgeu	r4,r20,40b90 <__divdf3+0x70c>
   406a4:	1021883a 	mov	r16,r2
   406a8:	2179c83a 	sub	fp,r4,r5
   406ac:	e009883a 	mov	r4,fp
   406b0:	b00b883a 	mov	r5,r22
   406b4:	d8c00015 	stw	r3,0(sp)
   406b8:	0040f0c0 	call	40f0c <__udivsi3>
   406bc:	e009883a 	mov	r4,fp
   406c0:	b00b883a 	mov	r5,r22
   406c4:	1039883a 	mov	fp,r2
   406c8:	0040f700 	call	40f70 <__umodsi3>
   406cc:	1004943a 	slli	r2,r2,16
   406d0:	9715383a 	mul	r10,r18,fp
   406d4:	893fffcc 	andi	r4,r17,65535
   406d8:	2088b03a 	or	r4,r4,r2
   406dc:	d8c00017 	ldw	r3,0(sp)
   406e0:	2280042e 	bgeu	r4,r10,406f4 <__divdf3+0x270>
   406e4:	2509883a 	add	r4,r4,r20
   406e8:	e0bfffc4 	addi	r2,fp,-1
   406ec:	2501242e 	bgeu	r4,r20,40b80 <__divdf3+0x6fc>
   406f0:	1039883a 	mov	fp,r2
   406f4:	8020943a 	slli	r16,r16,16
   406f8:	b80cd43a 	srli	r6,r23,16
   406fc:	ba3fffcc 	andi	r8,r23,65535
   40700:	8720b03a 	or	r16,r16,fp
   40704:	80bfffcc 	andi	r2,r16,65535
   40708:	800ed43a 	srli	r7,r16,16
   4070c:	1213383a 	mul	r9,r2,r8
   40710:	308b383a 	mul	r5,r6,r2
   40714:	3a17383a 	mul	r11,r7,r8
   40718:	4804d43a 	srli	r2,r9,16
   4071c:	398f383a 	mul	r7,r7,r6
   40720:	2acb883a 	add	r5,r5,r11
   40724:	1145883a 	add	r2,r2,r5
   40728:	2289c83a 	sub	r4,r4,r10
   4072c:	12c0022e 	bgeu	r2,r11,40738 <__divdf3+0x2b4>
   40730:	01400074 	movhi	r5,1
   40734:	394f883a 	add	r7,r7,r5
   40738:	100ad43a 	srli	r5,r2,16
   4073c:	1038943a 	slli	fp,r2,16
   40740:	4a7fffcc 	andi	r9,r9,65535
   40744:	29c5883a 	add	r2,r5,r7
   40748:	e279883a 	add	fp,fp,r9
   4074c:	20800236 	bltu	r4,r2,40758 <__divdf3+0x2d4>
   40750:	20800a1e 	bne	r4,r2,4077c <__divdf3+0x2f8>
   40754:	1f00092e 	bgeu	r3,fp,4077c <__divdf3+0x2f8>
   40758:	1dc7883a 	add	r3,r3,r23
   4075c:	1dcb803a 	cmpltu	r5,r3,r23
   40760:	2d0b883a 	add	r5,r5,r20
   40764:	2149883a 	add	r4,r4,r5
   40768:	817fffc4 	addi	r5,r16,-1
   4076c:	a101012e 	bgeu	r20,r4,40b74 <__divdf3+0x6f0>
   40770:	20813236 	bltu	r4,r2,40c3c <__divdf3+0x7b8>
   40774:	11013026 	beq	r2,r4,40c38 <__divdf3+0x7b4>
   40778:	2821883a 	mov	r16,r5
   4077c:	1f39c83a 	sub	fp,r3,fp
   40780:	2089c83a 	sub	r4,r4,r2
   40784:	1f07803a 	cmpltu	r3,r3,fp
   40788:	da000115 	stw	r8,4(sp)
   4078c:	d9800015 	stw	r6,0(sp)
   40790:	20e3c83a 	sub	r17,r4,r3
   40794:	a4411726 	beq	r20,r17,40bf4 <__divdf3+0x770>
   40798:	b00b883a 	mov	r5,r22
   4079c:	8809883a 	mov	r4,r17
   407a0:	0040f0c0 	call	40f0c <__udivsi3>
   407a4:	8809883a 	mov	r4,r17
   407a8:	b00b883a 	mov	r5,r22
   407ac:	d8800215 	stw	r2,8(sp)
   407b0:	0040f700 	call	40f70 <__umodsi3>
   407b4:	d9c00217 	ldw	r7,8(sp)
   407b8:	1004943a 	slli	r2,r2,16
   407bc:	e008d43a 	srli	r4,fp,16
   407c0:	91c7383a 	mul	r3,r18,r7
   407c4:	d9800017 	ldw	r6,0(sp)
   407c8:	2088b03a 	or	r4,r4,r2
   407cc:	da000117 	ldw	r8,4(sp)
   407d0:	20c0e136 	bltu	r4,r3,40b58 <__divdf3+0x6d4>
   407d4:	20e3c83a 	sub	r17,r4,r3
   407d8:	8809883a 	mov	r4,r17
   407dc:	b00b883a 	mov	r5,r22
   407e0:	da000215 	stw	r8,8(sp)
   407e4:	d9c00115 	stw	r7,4(sp)
   407e8:	d9800015 	stw	r6,0(sp)
   407ec:	0040f0c0 	call	40f0c <__udivsi3>
   407f0:	8809883a 	mov	r4,r17
   407f4:	b00b883a 	mov	r5,r22
   407f8:	1023883a 	mov	r17,r2
   407fc:	0040f700 	call	40f70 <__umodsi3>
   40800:	1004943a 	slli	r2,r2,16
   40804:	9465383a 	mul	r18,r18,r17
   40808:	e73fffcc 	andi	fp,fp,65535
   4080c:	e0b8b03a 	or	fp,fp,r2
   40810:	d9800017 	ldw	r6,0(sp)
   40814:	d9c00117 	ldw	r7,4(sp)
   40818:	da000217 	ldw	r8,8(sp)
   4081c:	e480c736 	bltu	fp,r18,40b3c <__divdf3+0x6b8>
   40820:	380e943a 	slli	r7,r7,16
   40824:	e4b9c83a 	sub	fp,fp,r18
   40828:	3c4eb03a 	or	r7,r7,r17
   4082c:	38bfffcc 	andi	r2,r7,65535
   40830:	380ad43a 	srli	r5,r7,16
   40834:	4089383a 	mul	r4,r8,r2
   40838:	3087383a 	mul	r3,r6,r2
   4083c:	2a11383a 	mul	r8,r5,r8
   40840:	2004d43a 	srli	r2,r4,16
   40844:	314d383a 	mul	r6,r6,r5
   40848:	1a07883a 	add	r3,r3,r8
   4084c:	10c5883a 	add	r2,r2,r3
   40850:	1200022e 	bgeu	r2,r8,4085c <__divdf3+0x3d8>
   40854:	00c00074 	movhi	r3,1
   40858:	30cd883a 	add	r6,r6,r3
   4085c:	1006d43a 	srli	r3,r2,16
   40860:	1004943a 	slli	r2,r2,16
   40864:	213fffcc 	andi	r4,r4,65535
   40868:	1987883a 	add	r3,r3,r6
   4086c:	1105883a 	add	r2,r2,r4
   40870:	e0c08f36 	bltu	fp,r3,40ab0 <__divdf3+0x62c>
   40874:	e0c08d26 	beq	fp,r3,40aac <__divdf3+0x628>
   40878:	39c00054 	ori	r7,r7,1
   4087c:	9940ffc4 	addi	r5,r19,1023
   40880:	01405c0e 	bge	zero,r5,409f4 <__divdf3+0x570>
   40884:	388001cc 	andi	r2,r7,7
   40888:	1000e21e 	bne	r2,zero,40c14 <__divdf3+0x790>
   4088c:	8080402c 	andhi	r2,r16,256
   40890:	10000426 	beq	r2,zero,408a4 <__divdf3+0x420>
   40894:	00bfc034 	movhi	r2,65280
   40898:	10bfffc4 	addi	r2,r2,-1
   4089c:	80a0703a 	and	r16,r16,r2
   408a0:	99410004 	addi	r5,r19,1024
   408a4:	2881ffc8 	cmpgei	r2,r5,2047
   408a8:	103f5c1e 	bne	r2,zero,4061c <__divdf3+0x198>
   408ac:	380ed0fa 	srli	r7,r7,3
   408b0:	8028977a 	slli	r20,r16,29
   408b4:	8008927a 	slli	r4,r16,9
   408b8:	2941ffcc 	andi	r5,r5,2047
   408bc:	a1e8b03a 	or	r20,r20,r7
   408c0:	2008d33a 	srli	r4,r4,12
   408c4:	003f4406 	br	405d8 <__divdf3+0x154>
   408c8:	854eb03a 	or	r7,r16,r21
   408cc:	38003e26 	beq	r7,zero,409c8 <__divdf3+0x544>
   408d0:	80008f26 	beq	r16,zero,40b10 <__divdf3+0x68c>
   408d4:	8009883a 	mov	r4,r16
   408d8:	0040dc80 	call	40dc8 <__clzsi2>
   408dc:	113ffd44 	addi	r4,r2,-11
   408e0:	00c00744 	movi	r3,29
   408e4:	11fffe04 	addi	r7,r2,-8
   408e8:	1907c83a 	sub	r3,r3,r4
   408ec:	81e0983a 	sll	r16,r16,r7
   408f0:	a8c6d83a 	srl	r3,r21,r3
   408f4:	a9ce983a 	sll	r7,r21,r7
   408f8:	1c20b03a 	or	r16,r3,r16
   408fc:	14c5883a 	add	r2,r2,r19
   40900:	14c0fcc4 	addi	r19,r2,1011
   40904:	0007883a 	mov	r3,zero
   40908:	003f0e06 	br	40544 <__divdf3+0xc0>
   4090c:	2464b03a 	or	r18,r4,r17
   40910:	2027883a 	mov	r19,r4
   40914:	90002726 	beq	r18,zero,409b4 <__divdf3+0x530>
   40918:	88007326 	beq	r17,zero,40ae8 <__divdf3+0x664>
   4091c:	8809883a 	mov	r4,r17
   40920:	0040dc80 	call	40dc8 <__clzsi2>
   40924:	10fffd44 	addi	r3,r2,-11
   40928:	01000744 	movi	r4,29
   4092c:	153ffe04 	addi	r20,r2,-8
   40930:	20c9c83a 	sub	r4,r4,r3
   40934:	8d0a983a 	sll	r5,r17,r20
   40938:	9908d83a 	srl	r4,r19,r4
   4093c:	9d28983a 	sll	r20,r19,r20
   40940:	2164b03a 	or	r18,r4,r5
   40944:	00ff0344 	movi	r3,-1011
   40948:	18a7c83a 	sub	r19,r3,r2
   4094c:	0023883a 	mov	r17,zero
   40950:	0039883a 	mov	fp,zero
   40954:	003eea06 	br	40500 <__divdf3+0x7c>
   40958:	2464b03a 	or	r18,r4,r17
   4095c:	9000101e 	bne	r18,zero,409a0 <__divdf3+0x51c>
   40960:	0029883a 	mov	r20,zero
   40964:	04400204 	movi	r17,8
   40968:	04c1ffc4 	movi	r19,2047
   4096c:	07000084 	movi	fp,2
   40970:	003ee306 	br	40500 <__divdf3+0x7c>
   40974:	854eb03a 	or	r7,r16,r21
   40978:	9cfe0044 	addi	r19,r19,-2047
   4097c:	3800041e 	bne	r7,zero,40990 <__divdf3+0x50c>
   40980:	8c400094 	ori	r17,r17,2
   40984:	0021883a 	mov	r16,zero
   40988:	00c00084 	movi	r3,2
   4098c:	003eed06 	br	40544 <__divdf3+0xc0>
   40990:	8c4000d4 	ori	r17,r17,3
   40994:	a80f883a 	mov	r7,r21
   40998:	00c000c4 	movi	r3,3
   4099c:	003ee906 	br	40544 <__divdf3+0xc0>
   409a0:	8825883a 	mov	r18,r17
   409a4:	04c1ffc4 	movi	r19,2047
   409a8:	04400304 	movi	r17,12
   409ac:	070000c4 	movi	fp,3
   409b0:	003ed306 	br	40500 <__divdf3+0x7c>
   409b4:	0029883a 	mov	r20,zero
   409b8:	04400104 	movi	r17,4
   409bc:	0027883a 	mov	r19,zero
   409c0:	07000044 	movi	fp,1
   409c4:	003ece06 	br	40500 <__divdf3+0x7c>
   409c8:	8c400054 	ori	r17,r17,1
   409cc:	0021883a 	mov	r16,zero
   409d0:	00c00044 	movi	r3,1
   409d4:	003edb06 	br	40544 <__divdf3+0xc0>
   409d8:	01000434 	movhi	r4,16
   409dc:	002b883a 	mov	r21,zero
   409e0:	213fffc4 	addi	r4,r4,-1
   409e4:	053fffc4 	movi	r20,-1
   409e8:	0141ffc4 	movi	r5,2047
   409ec:	003efa06 	br	405d8 <__divdf3+0x154>
   409f0:	01ffffc4 	movi	r7,-1
   409f4:	00800044 	movi	r2,1
   409f8:	1145c83a 	sub	r2,r2,r5
   409fc:	10c00e48 	cmpgei	r3,r2,57
   40a00:	183ef21e 	bne	r3,zero,405cc <__divdf3+0x148>
   40a04:	10c00808 	cmpgei	r3,r2,32
   40a08:	1800651e 	bne	r3,zero,40ba0 <__divdf3+0x71c>
   40a0c:	98c10784 	addi	r3,r19,1054
   40a10:	80e8983a 	sll	r20,r16,r3
   40a14:	3888d83a 	srl	r4,r7,r2
   40a18:	38c6983a 	sll	r3,r7,r3
   40a1c:	80a0d83a 	srl	r16,r16,r2
   40a20:	a128b03a 	or	r20,r20,r4
   40a24:	1806c03a 	cmpne	r3,r3,zero
   40a28:	a0e8b03a 	or	r20,r20,r3
   40a2c:	a08001cc 	andi	r2,r20,7
   40a30:	10000726 	beq	r2,zero,40a50 <__divdf3+0x5cc>
   40a34:	a08003cc 	andi	r2,r20,15
   40a38:	10800120 	cmpeqi	r2,r2,4
   40a3c:	1000041e 	bne	r2,zero,40a50 <__divdf3+0x5cc>
   40a40:	a0800104 	addi	r2,r20,4
   40a44:	1529803a 	cmpltu	r20,r2,r20
   40a48:	8521883a 	add	r16,r16,r20
   40a4c:	1029883a 	mov	r20,r2
   40a50:	8080202c 	andhi	r2,r16,128
   40a54:	10008d26 	beq	r2,zero,40c8c <__divdf3+0x808>
   40a58:	01400044 	movi	r5,1
   40a5c:	0009883a 	mov	r4,zero
   40a60:	0029883a 	mov	r20,zero
   40a64:	003edc06 	br	405d8 <__divdf3+0x154>
   40a68:	9080022c 	andhi	r2,r18,8
   40a6c:	10000926 	beq	r2,zero,40a94 <__divdf3+0x610>
   40a70:	8080022c 	andhi	r2,r16,8
   40a74:	1000071e 	bne	r2,zero,40a94 <__divdf3+0x610>
   40a78:	00800434 	movhi	r2,16
   40a7c:	81000234 	orhi	r4,r16,8
   40a80:	10bfffc4 	addi	r2,r2,-1
   40a84:	2088703a 	and	r4,r4,r2
   40a88:	b82b883a 	mov	r21,r23
   40a8c:	3829883a 	mov	r20,r7
   40a90:	003fd506 	br	409e8 <__divdf3+0x564>
   40a94:	00800434 	movhi	r2,16
   40a98:	91000234 	orhi	r4,r18,8
   40a9c:	10bfffc4 	addi	r2,r2,-1
   40aa0:	2088703a 	and	r4,r4,r2
   40aa4:	b02b883a 	mov	r21,r22
   40aa8:	003fcf06 	br	409e8 <__divdf3+0x564>
   40aac:	103f7326 	beq	r2,zero,4087c <__divdf3+0x3f8>
   40ab0:	a739883a 	add	fp,r20,fp
   40ab4:	393fffc4 	addi	r4,r7,-1
   40ab8:	e5004a36 	bltu	fp,r20,40be4 <__divdf3+0x760>
   40abc:	e0c06536 	bltu	fp,r3,40c54 <__divdf3+0x7d0>
   40ac0:	e0c07c26 	beq	fp,r3,40cb4 <__divdf3+0x830>
   40ac4:	200f883a 	mov	r7,r4
   40ac8:	003f6b06 	br	40878 <__divdf3+0x3f4>
   40acc:	a1fedb36 	bltu	r20,r7,4063c <__divdf3+0x1b8>
   40ad0:	902297fa 	slli	r17,r18,31
   40ad4:	a004d07a 	srli	r2,r20,1
   40ad8:	9024d07a 	srli	r18,r18,1
   40adc:	a00697fa 	slli	r3,r20,31
   40ae0:	88a2b03a 	or	r17,r17,r2
   40ae4:	003ed806 	br	40648 <__divdf3+0x1c4>
   40ae8:	0040dc80 	call	40dc8 <__clzsi2>
   40aec:	10c00544 	addi	r3,r2,21
   40af0:	19400748 	cmpgei	r5,r3,29
   40af4:	1009883a 	mov	r4,r2
   40af8:	10800804 	addi	r2,r2,32
   40afc:	283f8a26 	beq	r5,zero,40928 <__divdf3+0x4a4>
   40b00:	213ffe04 	addi	r4,r4,-8
   40b04:	a124983a 	sll	r18,r20,r4
   40b08:	0029883a 	mov	r20,zero
   40b0c:	003f8d06 	br	40944 <__divdf3+0x4c0>
   40b10:	a809883a 	mov	r4,r21
   40b14:	0040dc80 	call	40dc8 <__clzsi2>
   40b18:	11000544 	addi	r4,r2,21
   40b1c:	21400748 	cmpgei	r5,r4,29
   40b20:	1007883a 	mov	r3,r2
   40b24:	10800804 	addi	r2,r2,32
   40b28:	283f6d26 	beq	r5,zero,408e0 <__divdf3+0x45c>
   40b2c:	18fffe04 	addi	r3,r3,-8
   40b30:	a8e0983a 	sll	r16,r21,r3
   40b34:	000f883a 	mov	r7,zero
   40b38:	003f7006 	br	408fc <__divdf3+0x478>
   40b3c:	e539883a 	add	fp,fp,r20
   40b40:	88bfffc4 	addi	r2,r17,-1
   40b44:	e5003a36 	bltu	fp,r20,40c30 <__divdf3+0x7ac>
   40b48:	e480392e 	bgeu	fp,r18,40c30 <__divdf3+0x7ac>
   40b4c:	8c7fff84 	addi	r17,r17,-2
   40b50:	e539883a 	add	fp,fp,r20
   40b54:	003f3206 	br	40820 <__divdf3+0x39c>
   40b58:	2509883a 	add	r4,r4,r20
   40b5c:	38bfffc4 	addi	r2,r7,-1
   40b60:	25003136 	bltu	r4,r20,40c28 <__divdf3+0x7a4>
   40b64:	20c0302e 	bgeu	r4,r3,40c28 <__divdf3+0x7a4>
   40b68:	39ffff84 	addi	r7,r7,-2
   40b6c:	2509883a 	add	r4,r4,r20
   40b70:	003f1806 	br	407d4 <__divdf3+0x350>
   40b74:	a13f001e 	bne	r20,r4,40778 <__divdf3+0x2f4>
   40b78:	1dfeff36 	bltu	r3,r23,40778 <__divdf3+0x2f4>
   40b7c:	003efc06 	br	40770 <__divdf3+0x2ec>
   40b80:	22bedb2e 	bgeu	r4,r10,406f0 <__divdf3+0x26c>
   40b84:	e73fff84 	addi	fp,fp,-2
   40b88:	2509883a 	add	r4,r4,r20
   40b8c:	003ed906 	br	406f4 <__divdf3+0x270>
   40b90:	217ec42e 	bgeu	r4,r5,406a4 <__divdf3+0x220>
   40b94:	843fff84 	addi	r16,r16,-2
   40b98:	2509883a 	add	r4,r4,r20
   40b9c:	003ec206 	br	406a8 <__divdf3+0x224>
   40ba0:	013ff844 	movi	r4,-31
   40ba4:	2149c83a 	sub	r4,r4,r5
   40ba8:	10800820 	cmpeqi	r2,r2,32
   40bac:	8108d83a 	srl	r4,r16,r4
   40bb0:	1000031e 	bne	r2,zero,40bc0 <__divdf3+0x73c>
   40bb4:	98c10f84 	addi	r3,r19,1086
   40bb8:	80c6983a 	sll	r3,r16,r3
   40bbc:	38ceb03a 	or	r7,r7,r3
   40bc0:	3828c03a 	cmpne	r20,r7,zero
   40bc4:	a128b03a 	or	r20,r20,r4
   40bc8:	a40001cc 	andi	r16,r20,7
   40bcc:	8000291e 	bne	r16,zero,40c74 <__divdf3+0x7f0>
   40bd0:	0009883a 	mov	r4,zero
   40bd4:	a028d0fa 	srli	r20,r20,3
   40bd8:	000b883a 	mov	r5,zero
   40bdc:	a428b03a 	or	r20,r20,r16
   40be0:	003e7d06 	br	405d8 <__divdf3+0x154>
   40be4:	200f883a 	mov	r7,r4
   40be8:	e0ff231e 	bne	fp,r3,40878 <__divdf3+0x3f4>
   40bec:	15ff221e 	bne	r2,r23,40878 <__divdf3+0x3f4>
   40bf0:	003f2206 	br	4087c <__divdf3+0x3f8>
   40bf4:	98bf0088 	cmpgei	r2,r19,-1022
   40bf8:	9940ffc4 	addi	r5,r19,1023
   40bfc:	103f7c26 	beq	r2,zero,409f0 <__divdf3+0x56c>
   40c00:	00bfffc4 	movi	r2,-1
   40c04:	11c00104 	addi	r7,r2,4
   40c08:	3885803a 	cmpltu	r2,r7,r2
   40c0c:	80a1883a 	add	r16,r16,r2
   40c10:	003f1e06 	br	4088c <__divdf3+0x408>
   40c14:	388003cc 	andi	r2,r7,15
   40c18:	10800120 	cmpeqi	r2,r2,4
   40c1c:	103f1b1e 	bne	r2,zero,4088c <__divdf3+0x408>
   40c20:	3805883a 	mov	r2,r7
   40c24:	003ff706 	br	40c04 <__divdf3+0x780>
   40c28:	100f883a 	mov	r7,r2
   40c2c:	003ee906 	br	407d4 <__divdf3+0x350>
   40c30:	1023883a 	mov	r17,r2
   40c34:	003efa06 	br	40820 <__divdf3+0x39c>
   40c38:	1f3ecf2e 	bgeu	r3,fp,40778 <__divdf3+0x2f4>
   40c3c:	1dc7883a 	add	r3,r3,r23
   40c40:	1dcb803a 	cmpltu	r5,r3,r23
   40c44:	2d0b883a 	add	r5,r5,r20
   40c48:	843fff84 	addi	r16,r16,-2
   40c4c:	2149883a 	add	r4,r4,r5
   40c50:	003eca06 	br	4077c <__divdf3+0x2f8>
   40c54:	bdc9883a 	add	r4,r23,r23
   40c58:	25ef803a 	cmpltu	r23,r4,r23
   40c5c:	bd2f883a 	add	r23,r23,r20
   40c60:	e5f9883a 	add	fp,fp,r23
   40c64:	39ffff84 	addi	r7,r7,-2
   40c68:	202f883a 	mov	r23,r4
   40c6c:	e0ffdf26 	beq	fp,r3,40bec <__divdf3+0x768>
   40c70:	003f0106 	br	40878 <__divdf3+0x3f4>
   40c74:	a08003cc 	andi	r2,r20,15
   40c78:	10800120 	cmpeqi	r2,r2,4
   40c7c:	1000111e 	bne	r2,zero,40cc4 <__divdf3+0x840>
   40c80:	a0800104 	addi	r2,r20,4
   40c84:	1521803a 	cmpltu	r16,r2,r20
   40c88:	1029883a 	mov	r20,r2
   40c8c:	8008927a 	slli	r4,r16,9
   40c90:	8020977a 	slli	r16,r16,29
   40c94:	2008d33a 	srli	r4,r4,12
   40c98:	003fce06 	br	40bd4 <__divdf3+0x750>
   40c9c:	00800434 	movhi	r2,16
   40ca0:	81000234 	orhi	r4,r16,8
   40ca4:	10bfffc4 	addi	r2,r2,-1
   40ca8:	2088703a 	and	r4,r4,r2
   40cac:	3829883a 	mov	r20,r7
   40cb0:	003f4d06 	br	409e8 <__divdf3+0x564>
   40cb4:	b8bfe736 	bltu	r23,r2,40c54 <__divdf3+0x7d0>
   40cb8:	200f883a 	mov	r7,r4
   40cbc:	15feee1e 	bne	r2,r23,40878 <__divdf3+0x3f4>
   40cc0:	003eee06 	br	4087c <__divdf3+0x3f8>
   40cc4:	0021883a 	mov	r16,zero
   40cc8:	003ff006 	br	40c8c <__divdf3+0x808>

00040ccc <__extendsfdf2>:
   40ccc:	200ad5fa 	srli	r5,r4,23
   40cd0:	defffd04 	addi	sp,sp,-12
   40cd4:	dc000015 	stw	r16,0(sp)
   40cd8:	29403fcc 	andi	r5,r5,255
   40cdc:	04002034 	movhi	r16,128
   40ce0:	28800044 	addi	r2,r5,1
   40ce4:	dc400115 	stw	r17,4(sp)
   40ce8:	843fffc4 	addi	r16,r16,-1
   40cec:	dfc00215 	stw	ra,8(sp)
   40cf0:	10803f8c 	andi	r2,r2,254
   40cf4:	2022d7fa 	srli	r17,r4,31
   40cf8:	8120703a 	and	r16,r16,r4
   40cfc:	10000d26 	beq	r2,zero,40d34 <__extendsfdf2+0x68>
   40d00:	8008d0fa 	srli	r4,r16,3
   40d04:	8020977a 	slli	r16,r16,29
   40d08:	2940e004 	addi	r5,r5,896
   40d0c:	280a953a 	slli	r5,r5,20
   40d10:	880697fa 	slli	r3,r17,31
   40d14:	8005883a 	mov	r2,r16
   40d18:	290ab03a 	or	r5,r5,r4
   40d1c:	28c6b03a 	or	r3,r5,r3
   40d20:	dfc00217 	ldw	ra,8(sp)
   40d24:	dc400117 	ldw	r17,4(sp)
   40d28:	dc000017 	ldw	r16,0(sp)
   40d2c:	dec00304 	addi	sp,sp,12
   40d30:	f800283a 	ret
   40d34:	2800111e 	bne	r5,zero,40d7c <__extendsfdf2+0xb0>
   40d38:	80001926 	beq	r16,zero,40da0 <__extendsfdf2+0xd4>
   40d3c:	8009883a 	mov	r4,r16
   40d40:	0040dc80 	call	40dc8 <__clzsi2>
   40d44:	10c002c8 	cmpgei	r3,r2,11
   40d48:	18001b1e 	bne	r3,zero,40db8 <__extendsfdf2+0xec>
   40d4c:	010002c4 	movi	r4,11
   40d50:	2089c83a 	sub	r4,r4,r2
   40d54:	10c00544 	addi	r3,r2,21
   40d58:	8108d83a 	srl	r4,r16,r4
   40d5c:	80e0983a 	sll	r16,r16,r3
   40d60:	00c00434 	movhi	r3,16
   40d64:	0140e244 	movi	r5,905
   40d68:	18ffffc4 	addi	r3,r3,-1
   40d6c:	288bc83a 	sub	r5,r5,r2
   40d70:	20c8703a 	and	r4,r4,r3
   40d74:	2941ffcc 	andi	r5,r5,2047
   40d78:	003fe406 	br	40d0c <__extendsfdf2+0x40>
   40d7c:	80000b26 	beq	r16,zero,40dac <__extendsfdf2+0xe0>
   40d80:	8008d0fa 	srli	r4,r16,3
   40d84:	00800434 	movhi	r2,16
   40d88:	10bfffc4 	addi	r2,r2,-1
   40d8c:	21000234 	orhi	r4,r4,8
   40d90:	8020977a 	slli	r16,r16,29
   40d94:	2088703a 	and	r4,r4,r2
   40d98:	0141ffc4 	movi	r5,2047
   40d9c:	003fdb06 	br	40d0c <__extendsfdf2+0x40>
   40da0:	000b883a 	mov	r5,zero
   40da4:	0009883a 	mov	r4,zero
   40da8:	003fd806 	br	40d0c <__extendsfdf2+0x40>
   40dac:	0141ffc4 	movi	r5,2047
   40db0:	0009883a 	mov	r4,zero
   40db4:	003fd506 	br	40d0c <__extendsfdf2+0x40>
   40db8:	113ffd44 	addi	r4,r2,-11
   40dbc:	8108983a 	sll	r4,r16,r4
   40dc0:	0021883a 	mov	r16,zero
   40dc4:	003fe606 	br	40d60 <__extendsfdf2+0x94>

00040dc8 <__clzsi2>:
   40dc8:	00bfffd4 	movui	r2,65535
   40dcc:	11000a36 	bltu	r2,r4,40df8 <__clzsi2+0x30>
   40dd0:	20c04028 	cmpgeui	r3,r4,256
   40dd4:	180690fa 	slli	r3,r3,3
   40dd8:	00800804 	movi	r2,32
   40ddc:	10c5c83a 	sub	r2,r2,r3
   40de0:	20c8d83a 	srl	r4,r4,r3
   40de4:	00c00174 	movhi	r3,5
   40de8:	20c7883a 	add	r3,r4,r3
   40dec:	18c00203 	ldbu	r3,8(r3)
   40df0:	10c5c83a 	sub	r2,r2,r3
   40df4:	f800283a 	ret
   40df8:	00804034 	movhi	r2,256
   40dfc:	2080032e 	bgeu	r4,r2,40e0c <__clzsi2+0x44>
   40e00:	00800404 	movi	r2,16
   40e04:	00c00404 	movi	r3,16
   40e08:	003ff506 	br	40de0 <__clzsi2+0x18>
   40e0c:	00800204 	movi	r2,8
   40e10:	00c00604 	movi	r3,24
   40e14:	003ff206 	br	40de0 <__clzsi2+0x18>

00040e18 <__divsi3>:
   40e18:	20001a16 	blt	r4,zero,40e84 <__divsi3+0x6c>
   40e1c:	000f883a 	mov	r7,zero
   40e20:	2800020e 	bge	r5,zero,40e2c <__divsi3+0x14>
   40e24:	014bc83a 	sub	r5,zero,r5
   40e28:	39c0005c 	xori	r7,r7,1
   40e2c:	200d883a 	mov	r6,r4
   40e30:	00c00044 	movi	r3,1
   40e34:	2900092e 	bgeu	r5,r4,40e5c <__divsi3+0x44>
   40e38:	00800804 	movi	r2,32
   40e3c:	00c00044 	movi	r3,1
   40e40:	00000106 	br	40e48 <__divsi3+0x30>
   40e44:	10001226 	beq	r2,zero,40e90 <__divsi3+0x78>
   40e48:	294b883a 	add	r5,r5,r5
   40e4c:	10bfffc4 	addi	r2,r2,-1
   40e50:	18c7883a 	add	r3,r3,r3
   40e54:	293ffb36 	bltu	r5,r4,40e44 <__divsi3+0x2c>
   40e58:	18000d26 	beq	r3,zero,40e90 <__divsi3+0x78>
   40e5c:	0005883a 	mov	r2,zero
   40e60:	31400236 	bltu	r6,r5,40e6c <__divsi3+0x54>
   40e64:	314dc83a 	sub	r6,r6,r5
   40e68:	10c4b03a 	or	r2,r2,r3
   40e6c:	1806d07a 	srli	r3,r3,1
   40e70:	280ad07a 	srli	r5,r5,1
   40e74:	183ffa1e 	bne	r3,zero,40e60 <__divsi3+0x48>
   40e78:	38000126 	beq	r7,zero,40e80 <__divsi3+0x68>
   40e7c:	0085c83a 	sub	r2,zero,r2
   40e80:	f800283a 	ret
   40e84:	0109c83a 	sub	r4,zero,r4
   40e88:	01c00044 	movi	r7,1
   40e8c:	003fe406 	br	40e20 <__divsi3+0x8>
   40e90:	0005883a 	mov	r2,zero
   40e94:	003ff806 	br	40e78 <__divsi3+0x60>

00040e98 <__modsi3>:
   40e98:	20001716 	blt	r4,zero,40ef8 <__modsi3+0x60>
   40e9c:	000f883a 	mov	r7,zero
   40ea0:	2005883a 	mov	r2,r4
   40ea4:	2800010e 	bge	r5,zero,40eac <__modsi3+0x14>
   40ea8:	014bc83a 	sub	r5,zero,r5
   40eac:	00c00044 	movi	r3,1
   40eb0:	2900092e 	bgeu	r5,r4,40ed8 <__modsi3+0x40>
   40eb4:	01800804 	movi	r6,32
   40eb8:	00c00044 	movi	r3,1
   40ebc:	00000106 	br	40ec4 <__modsi3+0x2c>
   40ec0:	30001026 	beq	r6,zero,40f04 <__modsi3+0x6c>
   40ec4:	294b883a 	add	r5,r5,r5
   40ec8:	31bfffc4 	addi	r6,r6,-1
   40ecc:	18c7883a 	add	r3,r3,r3
   40ed0:	293ffb36 	bltu	r5,r4,40ec0 <__modsi3+0x28>
   40ed4:	18000b26 	beq	r3,zero,40f04 <__modsi3+0x6c>
   40ed8:	1806d07a 	srli	r3,r3,1
   40edc:	11400136 	bltu	r2,r5,40ee4 <__modsi3+0x4c>
   40ee0:	1145c83a 	sub	r2,r2,r5
   40ee4:	280ad07a 	srli	r5,r5,1
   40ee8:	183ffb1e 	bne	r3,zero,40ed8 <__modsi3+0x40>
   40eec:	38000126 	beq	r7,zero,40ef4 <__modsi3+0x5c>
   40ef0:	0085c83a 	sub	r2,zero,r2
   40ef4:	f800283a 	ret
   40ef8:	0109c83a 	sub	r4,zero,r4
   40efc:	01c00044 	movi	r7,1
   40f00:	003fe706 	br	40ea0 <__modsi3+0x8>
   40f04:	2005883a 	mov	r2,r4
   40f08:	003ff806 	br	40eec <__modsi3+0x54>

00040f0c <__udivsi3>:
   40f0c:	200d883a 	mov	r6,r4
   40f10:	2900152e 	bgeu	r5,r4,40f68 <__udivsi3+0x5c>
   40f14:	28001416 	blt	r5,zero,40f68 <__udivsi3+0x5c>
   40f18:	00800804 	movi	r2,32
   40f1c:	00c00044 	movi	r3,1
   40f20:	00000206 	br	40f2c <__udivsi3+0x20>
   40f24:	10000e26 	beq	r2,zero,40f60 <__udivsi3+0x54>
   40f28:	28000416 	blt	r5,zero,40f3c <__udivsi3+0x30>
   40f2c:	294b883a 	add	r5,r5,r5
   40f30:	10bfffc4 	addi	r2,r2,-1
   40f34:	18c7883a 	add	r3,r3,r3
   40f38:	293ffa36 	bltu	r5,r4,40f24 <__udivsi3+0x18>
   40f3c:	18000826 	beq	r3,zero,40f60 <__udivsi3+0x54>
   40f40:	0005883a 	mov	r2,zero
   40f44:	31400236 	bltu	r6,r5,40f50 <__udivsi3+0x44>
   40f48:	314dc83a 	sub	r6,r6,r5
   40f4c:	10c4b03a 	or	r2,r2,r3
   40f50:	1806d07a 	srli	r3,r3,1
   40f54:	280ad07a 	srli	r5,r5,1
   40f58:	183ffa1e 	bne	r3,zero,40f44 <__udivsi3+0x38>
   40f5c:	f800283a 	ret
   40f60:	0005883a 	mov	r2,zero
   40f64:	f800283a 	ret
   40f68:	00c00044 	movi	r3,1
   40f6c:	003ff406 	br	40f40 <__udivsi3+0x34>

00040f70 <__umodsi3>:
   40f70:	2005883a 	mov	r2,r4
   40f74:	2900132e 	bgeu	r5,r4,40fc4 <__umodsi3+0x54>
   40f78:	28001216 	blt	r5,zero,40fc4 <__umodsi3+0x54>
   40f7c:	01800804 	movi	r6,32
   40f80:	00c00044 	movi	r3,1
   40f84:	00000206 	br	40f90 <__umodsi3+0x20>
   40f88:	30000c26 	beq	r6,zero,40fbc <__umodsi3+0x4c>
   40f8c:	28000416 	blt	r5,zero,40fa0 <__umodsi3+0x30>
   40f90:	294b883a 	add	r5,r5,r5
   40f94:	31bfffc4 	addi	r6,r6,-1
   40f98:	18c7883a 	add	r3,r3,r3
   40f9c:	293ffa36 	bltu	r5,r4,40f88 <__umodsi3+0x18>
   40fa0:	18000626 	beq	r3,zero,40fbc <__umodsi3+0x4c>
   40fa4:	1806d07a 	srli	r3,r3,1
   40fa8:	11400136 	bltu	r2,r5,40fb0 <__umodsi3+0x40>
   40fac:	1145c83a 	sub	r2,r2,r5
   40fb0:	280ad07a 	srli	r5,r5,1
   40fb4:	183ffb1e 	bne	r3,zero,40fa4 <__umodsi3+0x34>
   40fb8:	f800283a 	ret
   40fbc:	2005883a 	mov	r2,r4
   40fc0:	f800283a 	ret
   40fc4:	00c00044 	movi	r3,1
   40fc8:	003ff606 	br	40fa4 <__umodsi3+0x34>

00040fcc <_printf_r>:
   40fcc:	defffd04 	addi	sp,sp,-12
   40fd0:	2805883a 	mov	r2,r5
   40fd4:	dfc00015 	stw	ra,0(sp)
   40fd8:	d9800115 	stw	r6,4(sp)
   40fdc:	d9c00215 	stw	r7,8(sp)
   40fe0:	21400217 	ldw	r5,8(r4)
   40fe4:	d9c00104 	addi	r7,sp,4
   40fe8:	100d883a 	mov	r6,r2
   40fec:	00411ac0 	call	411ac <___vfprintf_internal_r>
   40ff0:	dfc00017 	ldw	ra,0(sp)
   40ff4:	dec00304 	addi	sp,sp,12
   40ff8:	f800283a 	ret

00040ffc <printf>:
   40ffc:	defffc04 	addi	sp,sp,-16
   41000:	dfc00015 	stw	ra,0(sp)
   41004:	d9400115 	stw	r5,4(sp)
   41008:	d9800215 	stw	r6,8(sp)
   4100c:	d9c00315 	stw	r7,12(sp)
   41010:	00800174 	movhi	r2,5
   41014:	10887d17 	ldw	r2,8692(r2)
   41018:	200b883a 	mov	r5,r4
   4101c:	d9800104 	addi	r6,sp,4
   41020:	11000217 	ldw	r4,8(r2)
   41024:	00435540 	call	43554 <__vfprintf_internal>
   41028:	dfc00017 	ldw	ra,0(sp)
   4102c:	dec00404 	addi	sp,sp,16
   41030:	f800283a 	ret

00041034 <_puts_r>:
   41034:	defff504 	addi	sp,sp,-44
   41038:	dc000815 	stw	r16,32(sp)
   4103c:	2021883a 	mov	r16,r4
   41040:	2809883a 	mov	r4,r5
   41044:	dc400915 	stw	r17,36(sp)
   41048:	dfc00a15 	stw	ra,40(sp)
   4104c:	2823883a 	mov	r17,r5
   41050:	00411140 	call	41114 <strlen>
   41054:	11000044 	addi	r4,r2,1
   41058:	d8800515 	stw	r2,20(sp)
   4105c:	00800044 	movi	r2,1
   41060:	00c00174 	movhi	r3,5
   41064:	d8800715 	stw	r2,28(sp)
   41068:	d8800404 	addi	r2,sp,16
   4106c:	18c04204 	addi	r3,r3,264
   41070:	d8800115 	stw	r2,4(sp)
   41074:	00800084 	movi	r2,2
   41078:	dc400415 	stw	r17,16(sp)
   4107c:	d8c00615 	stw	r3,24(sp)
   41080:	d9000315 	stw	r4,12(sp)
   41084:	d8800215 	stw	r2,8(sp)
   41088:	81400217 	ldw	r5,8(r16)
   4108c:	80000226 	beq	r16,zero,41098 <_puts_r+0x64>
   41090:	80800e17 	ldw	r2,56(r16)
   41094:	10001426 	beq	r2,zero,410e8 <_puts_r+0xb4>
   41098:	2880030b 	ldhu	r2,12(r5)
   4109c:	10c8000c 	andi	r3,r2,8192
   410a0:	1800061e 	bne	r3,zero,410bc <_puts_r+0x88>
   410a4:	28c01917 	ldw	r3,100(r5)
   410a8:	0137ffc4 	movi	r4,-8193
   410ac:	10880014 	ori	r2,r2,8192
   410b0:	1906703a 	and	r3,r3,r4
   410b4:	2880030d 	sth	r2,12(r5)
   410b8:	28c01915 	stw	r3,100(r5)
   410bc:	d9800104 	addi	r6,sp,4
   410c0:	8009883a 	mov	r4,r16
   410c4:	0045bf80 	call	45bf8 <__sfvwrite_r>
   410c8:	1007883a 	mov	r3,r2
   410cc:	00800284 	movi	r2,10
   410d0:	18000a1e 	bne	r3,zero,410fc <_puts_r+0xc8>
   410d4:	dfc00a17 	ldw	ra,40(sp)
   410d8:	dc400917 	ldw	r17,36(sp)
   410dc:	dc000817 	ldw	r16,32(sp)
   410e0:	dec00b04 	addi	sp,sp,44
   410e4:	f800283a 	ret
   410e8:	8009883a 	mov	r4,r16
   410ec:	d9400015 	stw	r5,0(sp)
   410f0:	00457840 	call	45784 <__sinit>
   410f4:	d9400017 	ldw	r5,0(sp)
   410f8:	003fe706 	br	41098 <_puts_r+0x64>
   410fc:	00bfffc4 	movi	r2,-1
   41100:	003ff406 	br	410d4 <_puts_r+0xa0>

00041104 <puts>:
   41104:	00800174 	movhi	r2,5
   41108:	200b883a 	mov	r5,r4
   4110c:	11087d17 	ldw	r4,8692(r2)
   41110:	00410341 	jmpi	41034 <_puts_r>

00041114 <strlen>:
   41114:	208000cc 	andi	r2,r4,3
   41118:	10000926 	beq	r2,zero,41140 <strlen+0x2c>
   4111c:	2005883a 	mov	r2,r4
   41120:	00000306 	br	41130 <strlen+0x1c>
   41124:	10800044 	addi	r2,r2,1
   41128:	10c000cc 	andi	r3,r2,3
   4112c:	18000526 	beq	r3,zero,41144 <strlen+0x30>
   41130:	10c00007 	ldb	r3,0(r2)
   41134:	183ffb1e 	bne	r3,zero,41124 <strlen+0x10>
   41138:	1105c83a 	sub	r2,r2,r4
   4113c:	f800283a 	ret
   41140:	2005883a 	mov	r2,r4
   41144:	11400017 	ldw	r5,0(r2)
   41148:	01ffbff4 	movhi	r7,65279
   4114c:	39ffbfc4 	addi	r7,r7,-257
   41150:	29c7883a 	add	r3,r5,r7
   41154:	01a02074 	movhi	r6,32897
   41158:	014a303a 	nor	r5,zero,r5
   4115c:	1946703a 	and	r3,r3,r5
   41160:	31a02004 	addi	r6,r6,-32640
   41164:	1986703a 	and	r3,r3,r6
   41168:	1800071e 	bne	r3,zero,41188 <strlen+0x74>
   4116c:	11400117 	ldw	r5,4(r2)
   41170:	10800104 	addi	r2,r2,4
   41174:	29c7883a 	add	r3,r5,r7
   41178:	014a303a 	nor	r5,zero,r5
   4117c:	1946703a 	and	r3,r3,r5
   41180:	1986703a 	and	r3,r3,r6
   41184:	183ff926 	beq	r3,zero,4116c <strlen+0x58>
   41188:	10c00007 	ldb	r3,0(r2)
   4118c:	183fea26 	beq	r3,zero,41138 <strlen+0x24>
   41190:	10c00047 	ldb	r3,1(r2)
   41194:	10800044 	addi	r2,r2,1
   41198:	183fe726 	beq	r3,zero,41138 <strlen+0x24>
   4119c:	10c00047 	ldb	r3,1(r2)
   411a0:	10800044 	addi	r2,r2,1
   411a4:	183ffa1e 	bne	r3,zero,41190 <strlen+0x7c>
   411a8:	003fe306 	br	41138 <strlen+0x24>

000411ac <___vfprintf_internal_r>:
   411ac:	deffbc04 	addi	sp,sp,-272
   411b0:	dfc04315 	stw	ra,268(sp)
   411b4:	dc803c15 	stw	r18,240(sp)
   411b8:	dc003a15 	stw	r16,232(sp)
   411bc:	d9000515 	stw	r4,20(sp)
   411c0:	2021883a 	mov	r16,r4
   411c4:	d9400415 	stw	r5,16(sp)
   411c8:	3025883a 	mov	r18,r6
   411cc:	d9c00715 	stw	r7,28(sp)
   411d0:	df004215 	stw	fp,264(sp)
   411d4:	ddc04115 	stw	r23,260(sp)
   411d8:	dd804015 	stw	r22,256(sp)
   411dc:	dd403f15 	stw	r21,252(sp)
   411e0:	dd003e15 	stw	r20,248(sp)
   411e4:	dcc03d15 	stw	r19,244(sp)
   411e8:	dc403b15 	stw	r17,236(sp)
   411ec:	00461e40 	call	461e4 <_localeconv_r>
   411f0:	10800017 	ldw	r2,0(r2)
   411f4:	1009883a 	mov	r4,r2
   411f8:	d8800d15 	stw	r2,52(sp)
   411fc:	00411140 	call	41114 <strlen>
   41200:	d8800c15 	stw	r2,48(sp)
   41204:	80000226 	beq	r16,zero,41210 <___vfprintf_internal_r+0x64>
   41208:	80800e17 	ldw	r2,56(r16)
   4120c:	10022b26 	beq	r2,zero,41abc <___vfprintf_internal_r+0x910>
   41210:	d9400417 	ldw	r5,16(sp)
   41214:	2880030b 	ldhu	r2,12(r5)
   41218:	10c8000c 	andi	r3,r2,8192
   4121c:	1800071e 	bne	r3,zero,4123c <___vfprintf_internal_r+0x90>
   41220:	28c01917 	ldw	r3,100(r5)
   41224:	11080014 	ori	r4,r2,8192
   41228:	00b7ffc4 	movi	r2,-8193
   4122c:	1886703a 	and	r3,r3,r2
   41230:	2900030d 	sth	r4,12(r5)
   41234:	2005883a 	mov	r2,r4
   41238:	28c01915 	stw	r3,100(r5)
   4123c:	10c0020c 	andi	r3,r2,8
   41240:	1800f626 	beq	r3,zero,4161c <___vfprintf_internal_r+0x470>
   41244:	d8c00417 	ldw	r3,16(sp)
   41248:	18c00417 	ldw	r3,16(r3)
   4124c:	1800f326 	beq	r3,zero,4161c <___vfprintf_internal_r+0x470>
   41250:	1080068c 	andi	r2,r2,26
   41254:	10800298 	cmpnei	r2,r2,10
   41258:	1000f926 	beq	r2,zero,41640 <___vfprintf_internal_r+0x494>
   4125c:	dc402a04 	addi	r17,sp,168
   41260:	04c00174 	movhi	r19,5
   41264:	9029883a 	mov	r20,r18
   41268:	dc401d15 	stw	r17,116(sp)
   4126c:	d8001f15 	stw	zero,124(sp)
   41270:	d8001e15 	stw	zero,120(sp)
   41274:	d8000915 	stw	zero,36(sp)
   41278:	d8000a15 	stw	zero,40(sp)
   4127c:	d8000b15 	stw	zero,44(sp)
   41280:	d8000e15 	stw	zero,56(sp)
   41284:	d8001115 	stw	zero,68(sp)
   41288:	d8000615 	stw	zero,24(sp)
   4128c:	9cc05404 	addi	r19,r19,336
   41290:	8825883a 	mov	r18,r17
   41294:	a0800007 	ldb	r2,0(r20)
   41298:	1000cd26 	beq	r2,zero,415d0 <___vfprintf_internal_r+0x424>
   4129c:	a021883a 	mov	r16,r20
   412a0:	00000306 	br	412b0 <___vfprintf_internal_r+0x104>
   412a4:	80800047 	ldb	r2,1(r16)
   412a8:	84000044 	addi	r16,r16,1
   412ac:	10015126 	beq	r2,zero,417f4 <___vfprintf_internal_r+0x648>
   412b0:	10800958 	cmpnei	r2,r2,37
   412b4:	103ffb1e 	bne	r2,zero,412a4 <___vfprintf_internal_r+0xf8>
   412b8:	852fc83a 	sub	r23,r16,r20
   412bc:	85014f1e 	bne	r16,r20,417fc <___vfprintf_internal_r+0x650>
   412c0:	80800003 	ldbu	r2,0(r16)
   412c4:	10803fcc 	andi	r2,r2,255
   412c8:	1080201c 	xori	r2,r2,128
   412cc:	10bfe004 	addi	r2,r2,-128
   412d0:	1000bf26 	beq	r2,zero,415d0 <___vfprintf_internal_r+0x424>
   412d4:	82c00047 	ldb	r11,1(r16)
   412d8:	85000044 	addi	r20,r16,1
   412dc:	d8001645 	stb	zero,89(sp)
   412e0:	023fffc4 	movi	r8,-1
   412e4:	0021883a 	mov	r16,zero
   412e8:	001b883a 	mov	r13,zero
   412ec:	a5000044 	addi	r20,r20,1
   412f0:	5839883a 	mov	fp,r11
   412f4:	e0bff804 	addi	r2,fp,-32
   412f8:	10c01668 	cmpgeui	r3,r2,89
   412fc:	18006a1e 	bne	r3,zero,414a8 <___vfprintf_internal_r+0x2fc>
   41300:	100490ba 	slli	r2,r2,2
   41304:	00c00134 	movhi	r3,4
   41308:	10c7883a 	add	r3,r2,r3
   4130c:	1884c517 	ldw	r2,4884(r3)
   41310:	1000683a 	jmp	r2
   41314:	00041b8c 	andi	zero,zero,4206
   41318:	000414a8 	cmpgeui	zero,zero,4178
   4131c:	000414a8 	cmpgeui	zero,zero,4178
   41320:	00041b80 	call	41b8 <__reset-0x3be48>
   41324:	000414a8 	cmpgeui	zero,zero,4178
   41328:	000414a8 	cmpgeui	zero,zero,4178
   4132c:	000414a8 	cmpgeui	zero,zero,4178
   41330:	000414a8 	cmpgeui	zero,zero,4178
   41334:	000414a8 	cmpgeui	zero,zero,4178
   41338:	000414a8 	cmpgeui	zero,zero,4178
   4133c:	00041afc 	xorhi	zero,zero,4203
   41340:	00041b70 	cmpltui	zero,zero,4205
   41344:	000414a8 	cmpgeui	zero,zero,4178
   41348:	00041b14 	movui	zero,4204
   4134c:	00041b20 	cmpeqi	zero,zero,4204
   41350:	000414a8 	cmpgeui	zero,zero,4178
   41354:	00041b64 	muli	zero,zero,4205
   41358:	00041478 	rdprs	zero,zero,4177
   4135c:	00041478 	rdprs	zero,zero,4177
   41360:	00041478 	rdprs	zero,zero,4177
   41364:	00041478 	rdprs	zero,zero,4177
   41368:	00041478 	rdprs	zero,zero,4177
   4136c:	00041478 	rdprs	zero,zero,4177
   41370:	00041478 	rdprs	zero,zero,4177
   41374:	00041478 	rdprs	zero,zero,4177
   41378:	00041478 	rdprs	zero,zero,4177
   4137c:	000414a8 	cmpgeui	zero,zero,4178
   41380:	000414a8 	cmpgeui	zero,zero,4178
   41384:	000414a8 	cmpgeui	zero,zero,4178
   41388:	000414a8 	cmpgeui	zero,zero,4178
   4138c:	000414a8 	cmpgeui	zero,zero,4178
   41390:	000414a8 	cmpgeui	zero,zero,4178
   41394:	000414a8 	cmpgeui	zero,zero,4178
   41398:	000414a8 	cmpgeui	zero,zero,4178
   4139c:	000414a8 	cmpgeui	zero,zero,4178
   413a0:	000414a8 	cmpgeui	zero,zero,4178
   413a4:	0004168c 	andi	zero,zero,4186
   413a8:	00041928 	cmpgeui	zero,zero,4196
   413ac:	000414a8 	cmpgeui	zero,zero,4178
   413b0:	00041928 	cmpgeui	zero,zero,4196
   413b4:	000414a8 	cmpgeui	zero,zero,4178
   413b8:	000414a8 	cmpgeui	zero,zero,4178
   413bc:	000414a8 	cmpgeui	zero,zero,4178
   413c0:	000414a8 	cmpgeui	zero,zero,4178
   413c4:	00041bd8 	cmpnei	zero,zero,4207
   413c8:	000414a8 	cmpgeui	zero,zero,4178
   413cc:	000414a8 	cmpgeui	zero,zero,4178
   413d0:	000416f4 	movhi	zero,4187
   413d4:	000414a8 	cmpgeui	zero,zero,4178
   413d8:	000414a8 	cmpgeui	zero,zero,4178
   413dc:	000414a8 	cmpgeui	zero,zero,4178
   413e0:	000414a8 	cmpgeui	zero,zero,4178
   413e4:	000414a8 	cmpgeui	zero,zero,4178
   413e8:	0004171c 	xori	zero,zero,4188
   413ec:	000414a8 	cmpgeui	zero,zero,4178
   413f0:	000414a8 	cmpgeui	zero,zero,4178
   413f4:	00042764 	muli	zero,zero,4253
   413f8:	000414a8 	cmpgeui	zero,zero,4178
   413fc:	000414a8 	cmpgeui	zero,zero,4178
   41400:	000414a8 	cmpgeui	zero,zero,4178
   41404:	000414a8 	cmpgeui	zero,zero,4178
   41408:	000414a8 	cmpgeui	zero,zero,4178
   4140c:	000414a8 	cmpgeui	zero,zero,4178
   41410:	000414a8 	cmpgeui	zero,zero,4178
   41414:	000414a8 	cmpgeui	zero,zero,4178
   41418:	000414a8 	cmpgeui	zero,zero,4178
   4141c:	000414a8 	cmpgeui	zero,zero,4178
   41420:	00041bf0 	cmpltui	zero,zero,4207
   41424:	00041690 	cmplti	zero,zero,4186
   41428:	00041928 	cmpgeui	zero,zero,4196
   4142c:	00041928 	cmpgeui	zero,zero,4196
   41430:	00041928 	cmpgeui	zero,zero,4196
   41434:	00041be4 	muli	zero,zero,4207
   41438:	00041690 	cmplti	zero,zero,4186
   4143c:	000414a8 	cmpgeui	zero,zero,4178
   41440:	000414a8 	cmpgeui	zero,zero,4178
   41444:	00041bb0 	cmpltui	zero,zero,4206
   41448:	000414a8 	cmpgeui	zero,zero,4178
   4144c:	00041cac 	andhi	zero,zero,4210
   41450:	000416f8 	rdprs	zero,zero,4187
   41454:	00041c74 	movhi	zero,4209
   41458:	00041c68 	cmpgeui	zero,zero,4209
   4145c:	000414a8 	cmpgeui	zero,zero,4178
   41460:	00041c18 	cmpnei	zero,zero,4208
   41464:	000414a8 	cmpgeui	zero,zero,4178
   41468:	00041720 	cmpeqi	zero,zero,4188
   4146c:	000414a8 	cmpgeui	zero,zero,4178
   41470:	000414a8 	cmpgeui	zero,zero,4178
   41474:	000427d4 	movui	zero,4255
   41478:	0021883a 	mov	r16,zero
   4147c:	e0bff404 	addi	r2,fp,-48
   41480:	a7000007 	ldb	fp,0(r20)
   41484:	840002a4 	muli	r16,r16,10
   41488:	a5000044 	addi	r20,r20,1
   4148c:	1421883a 	add	r16,r2,r16
   41490:	e0bff404 	addi	r2,fp,-48
   41494:	10c002b0 	cmpltui	r3,r2,10
   41498:	183ff91e 	bne	r3,zero,41480 <___vfprintf_internal_r+0x2d4>
   4149c:	e0bff804 	addi	r2,fp,-32
   414a0:	10c01668 	cmpgeui	r3,r2,89
   414a4:	183f9626 	beq	r3,zero,41300 <___vfprintf_internal_r+0x154>
   414a8:	e0004926 	beq	fp,zero,415d0 <___vfprintf_internal_r+0x424>
   414ac:	df002005 	stb	fp,128(sp)
   414b0:	d8001645 	stb	zero,89(sp)
   414b4:	03000044 	movi	r12,1
   414b8:	01c00044 	movi	r7,1
   414bc:	dd402004 	addi	r21,sp,128
   414c0:	6807883a 	mov	r3,r13
   414c4:	0011883a 	mov	r8,zero
   414c8:	d8000815 	stw	zero,32(sp)
   414cc:	1b80008c 	andi	r14,r3,2
   414d0:	70000126 	beq	r14,zero,414d8 <___vfprintf_internal_r+0x32c>
   414d4:	63000084 	addi	r12,r12,2
   414d8:	1b40210c 	andi	r13,r3,132
   414dc:	6800021e 	bne	r13,zero,414e8 <___vfprintf_internal_r+0x33c>
   414e0:	832dc83a 	sub	r22,r16,r12
   414e4:	05832916 	blt	zero,r22,4218c <___vfprintf_internal_r+0xfe0>
   414e8:	d8801647 	ldb	r2,89(sp)
   414ec:	dd801f17 	ldw	r22,124(sp)
   414f0:	10000c26 	beq	r2,zero,41524 <___vfprintf_internal_r+0x378>
   414f4:	d8801e17 	ldw	r2,120(sp)
   414f8:	d9001644 	addi	r4,sp,89
   414fc:	b5800044 	addi	r22,r22,1
   41500:	10800044 	addi	r2,r2,1
   41504:	91000015 	stw	r4,0(r18)
   41508:	01000044 	movi	r4,1
   4150c:	d8801e15 	stw	r2,120(sp)
   41510:	91000115 	stw	r4,4(r18)
   41514:	dd801f15 	stw	r22,124(sp)
   41518:	10800208 	cmpgei	r2,r2,8
   4151c:	10037b1e 	bne	r2,zero,4230c <___vfprintf_internal_r+0x1160>
   41520:	94800204 	addi	r18,r18,8
   41524:	70000c26 	beq	r14,zero,41558 <___vfprintf_internal_r+0x3ac>
   41528:	d8801e17 	ldw	r2,120(sp)
   4152c:	d9001684 	addi	r4,sp,90
   41530:	b5800084 	addi	r22,r22,2
   41534:	10800044 	addi	r2,r2,1
   41538:	91000015 	stw	r4,0(r18)
   4153c:	01000084 	movi	r4,2
   41540:	d8801e15 	stw	r2,120(sp)
   41544:	91000115 	stw	r4,4(r18)
   41548:	dd801f15 	stw	r22,124(sp)
   4154c:	10800208 	cmpgei	r2,r2,8
   41550:	1003821e 	bne	r2,zero,4235c <___vfprintf_internal_r+0x11b0>
   41554:	94800204 	addi	r18,r18,8
   41558:	6b402018 	cmpnei	r13,r13,128
   4155c:	68023426 	beq	r13,zero,41e30 <___vfprintf_internal_r+0xc84>
   41560:	41efc83a 	sub	r23,r8,r7
   41564:	05c27416 	blt	zero,r23,41f38 <___vfprintf_internal_r+0xd8c>
   41568:	1880400c 	andi	r2,r3,256
   4156c:	1001db1e 	bne	r2,zero,41cdc <___vfprintf_internal_r+0xb30>
   41570:	d8801e17 	ldw	r2,120(sp)
   41574:	3d89883a 	add	r4,r7,r22
   41578:	95400015 	stw	r21,0(r18)
   4157c:	10800044 	addi	r2,r2,1
   41580:	d8801e15 	stw	r2,120(sp)
   41584:	91c00115 	stw	r7,4(r18)
   41588:	d9001f15 	stw	r4,124(sp)
   4158c:	10800208 	cmpgei	r2,r2,8
   41590:	1003521e 	bne	r2,zero,422dc <___vfprintf_internal_r+0x1130>
   41594:	94800204 	addi	r18,r18,8
   41598:	18c0010c 	andi	r3,r3,4
   4159c:	18000226 	beq	r3,zero,415a8 <___vfprintf_internal_r+0x3fc>
   415a0:	8339c83a 	sub	fp,r16,r12
   415a4:	0700ac16 	blt	zero,fp,41858 <___vfprintf_internal_r+0x6ac>
   415a8:	8300010e 	bge	r16,r12,415b0 <___vfprintf_internal_r+0x404>
   415ac:	6021883a 	mov	r16,r12
   415b0:	d8800617 	ldw	r2,24(sp)
   415b4:	1405883a 	add	r2,r2,r16
   415b8:	d8800615 	stw	r2,24(sp)
   415bc:	2002b01e 	bne	r4,zero,42080 <___vfprintf_internal_r+0xed4>
   415c0:	a0800007 	ldb	r2,0(r20)
   415c4:	d8001e15 	stw	zero,120(sp)
   415c8:	8825883a 	mov	r18,r17
   415cc:	103f331e 	bne	r2,zero,4129c <___vfprintf_internal_r+0xf0>
   415d0:	d8801f17 	ldw	r2,124(sp)
   415d4:	10063b1e 	bne	r2,zero,42ec4 <___vfprintf_internal_r+0x1d18>
   415d8:	d8800417 	ldw	r2,16(sp)
   415dc:	1080030b 	ldhu	r2,12(r2)
   415e0:	1080100c 	andi	r2,r2,64
   415e4:	10075f1e 	bne	r2,zero,43364 <___vfprintf_internal_r+0x21b8>
   415e8:	d8800617 	ldw	r2,24(sp)
   415ec:	dfc04317 	ldw	ra,268(sp)
   415f0:	df004217 	ldw	fp,264(sp)
   415f4:	ddc04117 	ldw	r23,260(sp)
   415f8:	dd804017 	ldw	r22,256(sp)
   415fc:	dd403f17 	ldw	r21,252(sp)
   41600:	dd003e17 	ldw	r20,248(sp)
   41604:	dcc03d17 	ldw	r19,244(sp)
   41608:	dc803c17 	ldw	r18,240(sp)
   4160c:	dc403b17 	ldw	r17,236(sp)
   41610:	dc003a17 	ldw	r16,232(sp)
   41614:	dec04404 	addi	sp,sp,272
   41618:	f800283a 	ret
   4161c:	d9400417 	ldw	r5,16(sp)
   41620:	d9000517 	ldw	r4,20(sp)
   41624:	00436340 	call	43634 <__swsetup_r>
   41628:	10074e1e 	bne	r2,zero,43364 <___vfprintf_internal_r+0x21b8>
   4162c:	d8800417 	ldw	r2,16(sp)
   41630:	1080030b 	ldhu	r2,12(r2)
   41634:	1080068c 	andi	r2,r2,26
   41638:	10800298 	cmpnei	r2,r2,10
   4163c:	103f071e 	bne	r2,zero,4125c <___vfprintf_internal_r+0xb0>
   41640:	d8800417 	ldw	r2,16(sp)
   41644:	1080038f 	ldh	r2,14(r2)
   41648:	103f0416 	blt	r2,zero,4125c <___vfprintf_internal_r+0xb0>
   4164c:	d9c00717 	ldw	r7,28(sp)
   41650:	d9400417 	ldw	r5,16(sp)
   41654:	d9000517 	ldw	r4,20(sp)
   41658:	900d883a 	mov	r6,r18
   4165c:	dfc04317 	ldw	ra,268(sp)
   41660:	df004217 	ldw	fp,264(sp)
   41664:	ddc04117 	ldw	r23,260(sp)
   41668:	dd804017 	ldw	r22,256(sp)
   4166c:	dd403f17 	ldw	r21,252(sp)
   41670:	dd003e17 	ldw	r20,248(sp)
   41674:	dcc03d17 	ldw	r19,244(sp)
   41678:	dc803c17 	ldw	r18,240(sp)
   4167c:	dc403b17 	ldw	r17,236(sp)
   41680:	dc003a17 	ldw	r16,232(sp)
   41684:	dec04404 	addi	sp,sp,272
   41688:	00435701 	jmpi	43570 <__sbprintf>
   4168c:	6b400414 	ori	r13,r13,16
   41690:	6880080c 	andi	r2,r13,32
   41694:	1000dc26 	beq	r2,zero,41a08 <___vfprintf_internal_r+0x85c>
   41698:	d8c00717 	ldw	r3,28(sp)
   4169c:	18800117 	ldw	r2,4(r3)
   416a0:	1d800017 	ldw	r22,0(r3)
   416a4:	18c00204 	addi	r3,r3,8
   416a8:	d8c00715 	stw	r3,28(sp)
   416ac:	102f883a 	mov	r23,r2
   416b0:	1000e316 	blt	r2,zero,41a40 <___vfprintf_internal_r+0x894>
   416b4:	40bfffd8 	cmpnei	r2,r8,-1
   416b8:	d9001643 	ldbu	r4,89(sp)
   416bc:	10010626 	beq	r2,zero,41ad8 <___vfprintf_internal_r+0x92c>
   416c0:	00ffdfc4 	movi	r3,-129
   416c4:	b5c4b03a 	or	r2,r22,r23
   416c8:	68c6703a 	and	r3,r13,r3
   416cc:	1001011e 	bne	r2,zero,41ad4 <___vfprintf_internal_r+0x928>
   416d0:	00800044 	movi	r2,1
   416d4:	4002531e 	bne	r8,zero,42024 <___vfprintf_internal_r+0xe78>
   416d8:	1003ad1e 	bne	r2,zero,42590 <___vfprintf_internal_r+0x13e4>
   416dc:	69c0004c 	andi	r7,r13,1
   416e0:	3803f626 	beq	r7,zero,426bc <___vfprintf_internal_r+0x1510>
   416e4:	00800c04 	movi	r2,48
   416e8:	d88029c5 	stb	r2,167(sp)
   416ec:	dd4029c4 	addi	r21,sp,167
   416f0:	00003606 	br	417cc <___vfprintf_internal_r+0x620>
   416f4:	6b400414 	ori	r13,r13,16
   416f8:	6880080c 	andi	r2,r13,32
   416fc:	1000e326 	beq	r2,zero,41a8c <___vfprintf_internal_r+0x8e0>
   41700:	d8c00717 	ldw	r3,28(sp)
   41704:	0005883a 	mov	r2,zero
   41708:	1d800017 	ldw	r22,0(r3)
   4170c:	1dc00117 	ldw	r23,4(r3)
   41710:	18c00204 	addi	r3,r3,8
   41714:	d8c00715 	stw	r3,28(sp)
   41718:	00000906 	br	41740 <___vfprintf_internal_r+0x594>
   4171c:	6b400414 	ori	r13,r13,16
   41720:	6880080c 	andi	r2,r13,32
   41724:	1000cd26 	beq	r2,zero,41a5c <___vfprintf_internal_r+0x8b0>
   41728:	d8c00717 	ldw	r3,28(sp)
   4172c:	00800044 	movi	r2,1
   41730:	1d800017 	ldw	r22,0(r3)
   41734:	1dc00117 	ldw	r23,4(r3)
   41738:	18c00204 	addi	r3,r3,8
   4173c:	d8c00715 	stw	r3,28(sp)
   41740:	0009883a 	mov	r4,zero
   41744:	d9001645 	stb	r4,89(sp)
   41748:	40ffffe0 	cmpeqi	r3,r8,-1
   4174c:	1800051e 	bne	r3,zero,41764 <___vfprintf_internal_r+0x5b8>
   41750:	00ffdfc4 	movi	r3,-129
   41754:	b5cab03a 	or	r5,r22,r23
   41758:	68c6703a 	and	r3,r13,r3
   4175c:	283fdd26 	beq	r5,zero,416d4 <___vfprintf_internal_r+0x528>
   41760:	181b883a 	mov	r13,r3
   41764:	10c00060 	cmpeqi	r3,r2,1
   41768:	1800db1e 	bne	r3,zero,41ad8 <___vfprintf_internal_r+0x92c>
   4176c:	108000a0 	cmpeqi	r2,r2,2
   41770:	1002331e 	bne	r2,zero,42040 <___vfprintf_internal_r+0xe94>
   41774:	882b883a 	mov	r21,r17
   41778:	b006d0fa 	srli	r3,r22,3
   4177c:	b80c977a 	slli	r6,r23,29
   41780:	b82ed0fa 	srli	r23,r23,3
   41784:	b58001cc 	andi	r22,r22,7
   41788:	b0800c04 	addi	r2,r22,48
   4178c:	30ecb03a 	or	r22,r6,r3
   41790:	a8bfffc5 	stb	r2,-1(r21)
   41794:	b5c6b03a 	or	r3,r22,r23
   41798:	a80b883a 	mov	r5,r21
   4179c:	ad7fffc4 	addi	r21,r21,-1
   417a0:	183ff51e 	bne	r3,zero,41778 <___vfprintf_internal_r+0x5cc>
   417a4:	68c0004c 	andi	r3,r13,1
   417a8:	18023226 	beq	r3,zero,42074 <___vfprintf_internal_r+0xec8>
   417ac:	10800c18 	cmpnei	r2,r2,48
   417b0:	10023026 	beq	r2,zero,42074 <___vfprintf_internal_r+0xec8>
   417b4:	297fff84 	addi	r5,r5,-2
   417b8:	00800c04 	movi	r2,48
   417bc:	a8bfffc5 	stb	r2,-1(r21)
   417c0:	894fc83a 	sub	r7,r17,r5
   417c4:	6807883a 	mov	r3,r13
   417c8:	282b883a 	mov	r21,r5
   417cc:	4019883a 	mov	r12,r8
   417d0:	41c0010e 	bge	r8,r7,417d8 <___vfprintf_internal_r+0x62c>
   417d4:	3819883a 	mov	r12,r7
   417d8:	d8000815 	stw	zero,32(sp)
   417dc:	21003fcc 	andi	r4,r4,255
   417e0:	2100201c 	xori	r4,r4,128
   417e4:	213fe004 	addi	r4,r4,-128
   417e8:	203f3826 	beq	r4,zero,414cc <___vfprintf_internal_r+0x320>
   417ec:	63000044 	addi	r12,r12,1
   417f0:	003f3606 	br	414cc <___vfprintf_internal_r+0x320>
   417f4:	852fc83a 	sub	r23,r16,r20
   417f8:	853f7526 	beq	r16,r20,415d0 <___vfprintf_internal_r+0x424>
   417fc:	dd801f17 	ldw	r22,124(sp)
   41800:	d8801e17 	ldw	r2,120(sp)
   41804:	95000015 	stw	r20,0(r18)
   41808:	b5ed883a 	add	r22,r22,r23
   4180c:	10800044 	addi	r2,r2,1
   41810:	d8801e15 	stw	r2,120(sp)
   41814:	95c00115 	stw	r23,4(r18)
   41818:	dd801f15 	stw	r22,124(sp)
   4181c:	10800208 	cmpgei	r2,r2,8
   41820:	1000061e 	bne	r2,zero,4183c <___vfprintf_internal_r+0x690>
   41824:	94800204 	addi	r18,r18,8
   41828:	d8c00617 	ldw	r3,24(sp)
   4182c:	80800003 	ldbu	r2,0(r16)
   41830:	1dc7883a 	add	r3,r3,r23
   41834:	d8c00615 	stw	r3,24(sp)
   41838:	003ea206 	br	412c4 <___vfprintf_internal_r+0x118>
   4183c:	d9400417 	ldw	r5,16(sp)
   41840:	d9000517 	ldw	r4,20(sp)
   41844:	d9801d04 	addi	r6,sp,116
   41848:	00489a00 	call	489a0 <__sprint_r>
   4184c:	103f621e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   41850:	8825883a 	mov	r18,r17
   41854:	003ff406 	br	41828 <___vfprintf_internal_r+0x67c>
   41858:	05c00174 	movhi	r23,5
   4185c:	e0c00450 	cmplti	r3,fp,17
   41860:	d8801e17 	ldw	r2,120(sp)
   41864:	bdc05804 	addi	r23,r23,352
   41868:	18001e1e 	bne	r3,zero,418e4 <___vfprintf_internal_r+0x738>
   4186c:	9007883a 	mov	r3,r18
   41870:	dd400517 	ldw	r21,20(sp)
   41874:	05800404 	movi	r22,16
   41878:	6025883a 	mov	r18,r12
   4187c:	00000406 	br	41890 <___vfprintf_internal_r+0x6e4>
   41880:	e73ffc04 	addi	fp,fp,-16
   41884:	e1400448 	cmpgei	r5,fp,17
   41888:	18c00204 	addi	r3,r3,8
   4188c:	28001326 	beq	r5,zero,418dc <___vfprintf_internal_r+0x730>
   41890:	10800044 	addi	r2,r2,1
   41894:	21000404 	addi	r4,r4,16
   41898:	1dc00015 	stw	r23,0(r3)
   4189c:	1d800115 	stw	r22,4(r3)
   418a0:	d9001f15 	stw	r4,124(sp)
   418a4:	d8801e15 	stw	r2,120(sp)
   418a8:	11400208 	cmpgei	r5,r2,8
   418ac:	283ff426 	beq	r5,zero,41880 <___vfprintf_internal_r+0x6d4>
   418b0:	d9400417 	ldw	r5,16(sp)
   418b4:	d9801d04 	addi	r6,sp,116
   418b8:	a809883a 	mov	r4,r21
   418bc:	00489a00 	call	489a0 <__sprint_r>
   418c0:	103f451e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   418c4:	e73ffc04 	addi	fp,fp,-16
   418c8:	e1400448 	cmpgei	r5,fp,17
   418cc:	d9001f17 	ldw	r4,124(sp)
   418d0:	d8801e17 	ldw	r2,120(sp)
   418d4:	8807883a 	mov	r3,r17
   418d8:	283fed1e 	bne	r5,zero,41890 <___vfprintf_internal_r+0x6e4>
   418dc:	9019883a 	mov	r12,r18
   418e0:	1825883a 	mov	r18,r3
   418e4:	10800044 	addi	r2,r2,1
   418e8:	2709883a 	add	r4,r4,fp
   418ec:	d8801e15 	stw	r2,120(sp)
   418f0:	95c00015 	stw	r23,0(r18)
   418f4:	97000115 	stw	fp,4(r18)
   418f8:	d9001f15 	stw	r4,124(sp)
   418fc:	10800210 	cmplti	r2,r2,8
   41900:	103f291e 	bne	r2,zero,415a8 <___vfprintf_internal_r+0x3fc>
   41904:	d9400417 	ldw	r5,16(sp)
   41908:	d9000517 	ldw	r4,20(sp)
   4190c:	d9801d04 	addi	r6,sp,116
   41910:	db000815 	stw	r12,32(sp)
   41914:	00489a00 	call	489a0 <__sprint_r>
   41918:	103f2f1e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   4191c:	d9001f17 	ldw	r4,124(sp)
   41920:	db000817 	ldw	r12,32(sp)
   41924:	003f2006 	br	415a8 <___vfprintf_internal_r+0x3fc>
   41928:	d8c00717 	ldw	r3,28(sp)
   4192c:	6880020c 	andi	r2,r13,8
   41930:	19000204 	addi	r4,r3,8
   41934:	d9000f15 	stw	r4,60(sp)
   41938:	1003621e 	bne	r2,zero,426c4 <___vfprintf_internal_r+0x1518>
   4193c:	d8800717 	ldw	r2,28(sp)
   41940:	10c00017 	ldw	r3,0(r2)
   41944:	10800117 	ldw	r2,4(r2)
   41948:	d8c00a15 	stw	r3,40(sp)
   4194c:	d8800b15 	stw	r2,44(sp)
   41950:	ddc00b17 	ldw	r23,44(sp)
   41954:	dd800a17 	ldw	r22,40(sp)
   41958:	00a00034 	movhi	r2,32768
   4195c:	10bfffc4 	addi	r2,r2,-1
   41960:	b8aa703a 	and	r21,r23,r2
   41964:	01dffc34 	movhi	r7,32752
   41968:	01bfffc4 	movi	r6,-1
   4196c:	39ffffc4 	addi	r7,r7,-1
   41970:	b009883a 	mov	r4,r22
   41974:	a80b883a 	mov	r5,r21
   41978:	da000815 	stw	r8,32(sp)
   4197c:	db400715 	stw	r13,28(sp)
   41980:	004d4980 	call	4d498 <__unorddf2>
   41984:	db400717 	ldw	r13,28(sp)
   41988:	da000817 	ldw	r8,32(sp)
   4198c:	10044f1e 	bne	r2,zero,42acc <___vfprintf_internal_r+0x1920>
   41990:	01dffc34 	movhi	r7,32752
   41994:	01bfffc4 	movi	r6,-1
   41998:	39ffffc4 	addi	r7,r7,-1
   4199c:	b009883a 	mov	r4,r22
   419a0:	a80b883a 	mov	r5,r21
   419a4:	004c32c0 	call	4c32c <__ledf2>
   419a8:	db400717 	ldw	r13,28(sp)
   419ac:	da000817 	ldw	r8,32(sp)
   419b0:	0084460e 	bge	zero,r2,42acc <___vfprintf_internal_r+0x1920>
   419b4:	000d883a 	mov	r6,zero
   419b8:	000f883a 	mov	r7,zero
   419bc:	b009883a 	mov	r4,r22
   419c0:	b80b883a 	mov	r5,r23
   419c4:	004c32c0 	call	4c32c <__ledf2>
   419c8:	db400717 	ldw	r13,28(sp)
   419cc:	10052616 	blt	r2,zero,42e68 <___vfprintf_internal_r+0x1cbc>
   419d0:	d9001643 	ldbu	r4,89(sp)
   419d4:	e0801210 	cmplti	r2,fp,72
   419d8:	1005091e 	bne	r2,zero,42e00 <___vfprintf_internal_r+0x1c54>
   419dc:	05400174 	movhi	r21,5
   419e0:	ad404404 	addi	r21,r21,272
   419e4:	d8800f17 	ldw	r2,60(sp)
   419e8:	00ffdfc4 	movi	r3,-129
   419ec:	68c6703a 	and	r3,r13,r3
   419f0:	d8800715 	stw	r2,28(sp)
   419f4:	030000c4 	movi	r12,3
   419f8:	01c000c4 	movi	r7,3
   419fc:	0011883a 	mov	r8,zero
   41a00:	d8000815 	stw	zero,32(sp)
   41a04:	003f7506 	br	417dc <___vfprintf_internal_r+0x630>
   41a08:	d8c00717 	ldw	r3,28(sp)
   41a0c:	6880040c 	andi	r2,r13,16
   41a10:	1d800017 	ldw	r22,0(r3)
   41a14:	18c00104 	addi	r3,r3,4
   41a18:	d8c00715 	stw	r3,28(sp)
   41a1c:	10002a1e 	bne	r2,zero,41ac8 <___vfprintf_internal_r+0x91c>
   41a20:	6880100c 	andi	r2,r13,64
   41a24:	10002826 	beq	r2,zero,41ac8 <___vfprintf_internal_r+0x91c>
   41a28:	b5bfffcc 	andi	r22,r22,65535
   41a2c:	b5a0001c 	xori	r22,r22,32768
   41a30:	b5a00004 	addi	r22,r22,-32768
   41a34:	b02fd7fa 	srai	r23,r22,31
   41a38:	b805883a 	mov	r2,r23
   41a3c:	103f1d0e 	bge	r2,zero,416b4 <___vfprintf_internal_r+0x508>
   41a40:	b004c03a 	cmpne	r2,r22,zero
   41a44:	05efc83a 	sub	r23,zero,r23
   41a48:	b8afc83a 	sub	r23,r23,r2
   41a4c:	05adc83a 	sub	r22,zero,r22
   41a50:	01000b44 	movi	r4,45
   41a54:	00800044 	movi	r2,1
   41a58:	003f3a06 	br	41744 <___vfprintf_internal_r+0x598>
   41a5c:	d8c00717 	ldw	r3,28(sp)
   41a60:	6880040c 	andi	r2,r13,16
   41a64:	1d800017 	ldw	r22,0(r3)
   41a68:	18c00104 	addi	r3,r3,4
   41a6c:	d8c00715 	stw	r3,28(sp)
   41a70:	1000031e 	bne	r2,zero,41a80 <___vfprintf_internal_r+0x8d4>
   41a74:	6880100c 	andi	r2,r13,64
   41a78:	10000126 	beq	r2,zero,41a80 <___vfprintf_internal_r+0x8d4>
   41a7c:	b5bfffcc 	andi	r22,r22,65535
   41a80:	002f883a 	mov	r23,zero
   41a84:	00800044 	movi	r2,1
   41a88:	003f2d06 	br	41740 <___vfprintf_internal_r+0x594>
   41a8c:	d8c00717 	ldw	r3,28(sp)
   41a90:	6880040c 	andi	r2,r13,16
   41a94:	1d800017 	ldw	r22,0(r3)
   41a98:	18c00104 	addi	r3,r3,4
   41a9c:	d8c00715 	stw	r3,28(sp)
   41aa0:	1000031e 	bne	r2,zero,41ab0 <___vfprintf_internal_r+0x904>
   41aa4:	6880100c 	andi	r2,r13,64
   41aa8:	10000126 	beq	r2,zero,41ab0 <___vfprintf_internal_r+0x904>
   41aac:	b5bfffcc 	andi	r22,r22,65535
   41ab0:	002f883a 	mov	r23,zero
   41ab4:	0005883a 	mov	r2,zero
   41ab8:	003f2106 	br	41740 <___vfprintf_internal_r+0x594>
   41abc:	d9000517 	ldw	r4,20(sp)
   41ac0:	00457840 	call	45784 <__sinit>
   41ac4:	003dd206 	br	41210 <___vfprintf_internal_r+0x64>
   41ac8:	b02fd7fa 	srai	r23,r22,31
   41acc:	b805883a 	mov	r2,r23
   41ad0:	003ef706 	br	416b0 <___vfprintf_internal_r+0x504>
   41ad4:	181b883a 	mov	r13,r3
   41ad8:	b803681e 	bne	r23,zero,4287c <___vfprintf_internal_r+0x16d0>
   41adc:	b08002a8 	cmpgeui	r2,r22,10
   41ae0:	1003661e 	bne	r2,zero,4287c <___vfprintf_internal_r+0x16d0>
   41ae4:	b5800c04 	addi	r22,r22,48
   41ae8:	dd8029c5 	stb	r22,167(sp)
   41aec:	6807883a 	mov	r3,r13
   41af0:	01c00044 	movi	r7,1
   41af4:	dd4029c4 	addi	r21,sp,167
   41af8:	003f3406 	br	417cc <___vfprintf_internal_r+0x620>
   41afc:	d8800717 	ldw	r2,28(sp)
   41b00:	14000017 	ldw	r16,0(r2)
   41b04:	10800104 	addi	r2,r2,4
   41b08:	8002e90e 	bge	r16,zero,426b0 <___vfprintf_internal_r+0x1504>
   41b0c:	0421c83a 	sub	r16,zero,r16
   41b10:	d8800715 	stw	r2,28(sp)
   41b14:	a2c00007 	ldb	r11,0(r20)
   41b18:	6b400114 	ori	r13,r13,4
   41b1c:	003df306 	br	412ec <___vfprintf_internal_r+0x140>
   41b20:	a7000007 	ldb	fp,0(r20)
   41b24:	a0c00044 	addi	r3,r20,1
   41b28:	e0800aa0 	cmpeqi	r2,fp,42
   41b2c:	10066f1e 	bne	r2,zero,434ec <___vfprintf_internal_r+0x2340>
   41b30:	e0bff404 	addi	r2,fp,-48
   41b34:	110002b0 	cmpltui	r4,r2,10
   41b38:	1829883a 	mov	r20,r3
   41b3c:	0011883a 	mov	r8,zero
   41b40:	203dec26 	beq	r4,zero,412f4 <___vfprintf_internal_r+0x148>
   41b44:	a7000007 	ldb	fp,0(r20)
   41b48:	420002a4 	muli	r8,r8,10
   41b4c:	a5000044 	addi	r20,r20,1
   41b50:	4091883a 	add	r8,r8,r2
   41b54:	e0bff404 	addi	r2,fp,-48
   41b58:	10c002b0 	cmpltui	r3,r2,10
   41b5c:	183ff91e 	bne	r3,zero,41b44 <___vfprintf_internal_r+0x998>
   41b60:	003de406 	br	412f4 <___vfprintf_internal_r+0x148>
   41b64:	a2c00007 	ldb	r11,0(r20)
   41b68:	6b402014 	ori	r13,r13,128
   41b6c:	003ddf06 	br	412ec <___vfprintf_internal_r+0x140>
   41b70:	00800ac4 	movi	r2,43
   41b74:	a2c00007 	ldb	r11,0(r20)
   41b78:	d8801645 	stb	r2,89(sp)
   41b7c:	003ddb06 	br	412ec <___vfprintf_internal_r+0x140>
   41b80:	a2c00007 	ldb	r11,0(r20)
   41b84:	6b400054 	ori	r13,r13,1
   41b88:	003dd806 	br	412ec <___vfprintf_internal_r+0x140>
   41b8c:	d8801647 	ldb	r2,89(sp)
   41b90:	a7000003 	ldbu	fp,0(r20)
   41b94:	10000c1e 	bne	r2,zero,41bc8 <___vfprintf_internal_r+0xa1c>
   41b98:	e2c03fcc 	andi	r11,fp,255
   41b9c:	00800804 	movi	r2,32
   41ba0:	5ac0201c 	xori	r11,r11,128
   41ba4:	d8801645 	stb	r2,89(sp)
   41ba8:	5affe004 	addi	r11,r11,-128
   41bac:	003dcf06 	br	412ec <___vfprintf_internal_r+0x140>
   41bb0:	a2c00007 	ldb	r11,0(r20)
   41bb4:	58801b18 	cmpnei	r2,r11,108
   41bb8:	1002bb1e 	bne	r2,zero,426a8 <___vfprintf_internal_r+0x14fc>
   41bbc:	a7000043 	ldbu	fp,1(r20)
   41bc0:	6b400814 	ori	r13,r13,32
   41bc4:	a5000044 	addi	r20,r20,1
   41bc8:	e2c03fcc 	andi	r11,fp,255
   41bcc:	5ac0201c 	xori	r11,r11,128
   41bd0:	5affe004 	addi	r11,r11,-128
   41bd4:	003dc506 	br	412ec <___vfprintf_internal_r+0x140>
   41bd8:	a2c00007 	ldb	r11,0(r20)
   41bdc:	6b400214 	ori	r13,r13,8
   41be0:	003dc206 	br	412ec <___vfprintf_internal_r+0x140>
   41be4:	a2c00007 	ldb	r11,0(r20)
   41be8:	6b401014 	ori	r13,r13,64
   41bec:	003dbf06 	br	412ec <___vfprintf_internal_r+0x140>
   41bf0:	d8c00717 	ldw	r3,28(sp)
   41bf4:	d8001645 	stb	zero,89(sp)
   41bf8:	03000044 	movi	r12,1
   41bfc:	18800017 	ldw	r2,0(r3)
   41c00:	18c00104 	addi	r3,r3,4
   41c04:	d8c00715 	stw	r3,28(sp)
   41c08:	d8802005 	stb	r2,128(sp)
   41c0c:	01c00044 	movi	r7,1
   41c10:	dd402004 	addi	r21,sp,128
   41c14:	003e2a06 	br	414c0 <___vfprintf_internal_r+0x314>
   41c18:	d8800717 	ldw	r2,28(sp)
   41c1c:	d8001645 	stb	zero,89(sp)
   41c20:	15400017 	ldw	r21,0(r2)
   41c24:	15800104 	addi	r22,r2,4
   41c28:	a802e226 	beq	r21,zero,427b4 <___vfprintf_internal_r+0x1608>
   41c2c:	db400815 	stw	r13,32(sp)
   41c30:	40bfffe0 	cmpeqi	r2,r8,-1
   41c34:	10046b1e 	bne	r2,zero,42de4 <___vfprintf_internal_r+0x1c38>
   41c38:	400d883a 	mov	r6,r8
   41c3c:	000b883a 	mov	r5,zero
   41c40:	a809883a 	mov	r4,r21
   41c44:	da000715 	stw	r8,28(sp)
   41c48:	0046bdc0 	call	46bdc <memchr>
   41c4c:	da000717 	ldw	r8,28(sp)
   41c50:	db400817 	ldw	r13,32(sp)
   41c54:	1005b126 	beq	r2,zero,4331c <___vfprintf_internal_r+0x2170>
   41c58:	154fc83a 	sub	r7,r2,r21
   41c5c:	3819883a 	mov	r12,r7
   41c60:	dd800715 	stw	r22,28(sp)
   41c64:	003e1606 	br	414c0 <___vfprintf_internal_r+0x314>
   41c68:	a2c00007 	ldb	r11,0(r20)
   41c6c:	6b400814 	ori	r13,r13,32
   41c70:	003d9e06 	br	412ec <___vfprintf_internal_r+0x140>
   41c74:	d8c00717 	ldw	r3,28(sp)
   41c78:	009e0c04 	movi	r2,30768
   41c7c:	01000174 	movhi	r4,5
   41c80:	d880168d 	sth	r2,90(sp)
   41c84:	18800104 	addi	r2,r3,4
   41c88:	d8800715 	stw	r2,28(sp)
   41c8c:	20804c04 	addi	r2,r4,304
   41c90:	d8800e15 	stw	r2,56(sp)
   41c94:	1d800017 	ldw	r22,0(r3)
   41c98:	002f883a 	mov	r23,zero
   41c9c:	6b400094 	ori	r13,r13,2
   41ca0:	00800084 	movi	r2,2
   41ca4:	07001e04 	movi	fp,120
   41ca8:	003ea506 	br	41740 <___vfprintf_internal_r+0x594>
   41cac:	6880080c 	andi	r2,r13,32
   41cb0:	10028926 	beq	r2,zero,426d8 <___vfprintf_internal_r+0x152c>
   41cb4:	d9000617 	ldw	r4,24(sp)
   41cb8:	d8800717 	ldw	r2,28(sp)
   41cbc:	2007d7fa 	srai	r3,r4,31
   41cc0:	10800017 	ldw	r2,0(r2)
   41cc4:	11000015 	stw	r4,0(r2)
   41cc8:	10c00115 	stw	r3,4(r2)
   41ccc:	d8800717 	ldw	r2,28(sp)
   41cd0:	10800104 	addi	r2,r2,4
   41cd4:	d8800715 	stw	r2,28(sp)
   41cd8:	003d6e06 	br	41294 <___vfprintf_internal_r+0xe8>
   41cdc:	e2c01990 	cmplti	r11,fp,102
   41ce0:	5800ed1e 	bne	r11,zero,42098 <___vfprintf_internal_r+0xeec>
   41ce4:	d9000a17 	ldw	r4,40(sp)
   41ce8:	d9400b17 	ldw	r5,44(sp)
   41cec:	000d883a 	mov	r6,zero
   41cf0:	000f883a 	mov	r7,zero
   41cf4:	db001015 	stw	r12,64(sp)
   41cf8:	d8c00f15 	stw	r3,60(sp)
   41cfc:	004c19c0 	call	4c19c <__eqdf2>
   41d00:	d8c00f17 	ldw	r3,60(sp)
   41d04:	db001017 	ldw	r12,64(sp)
   41d08:	1001a61e 	bne	r2,zero,423a4 <___vfprintf_internal_r+0x11f8>
   41d0c:	d8801e17 	ldw	r2,120(sp)
   41d10:	01000174 	movhi	r4,5
   41d14:	21005304 	addi	r4,r4,332
   41d18:	10800044 	addi	r2,r2,1
   41d1c:	b5800044 	addi	r22,r22,1
   41d20:	91000015 	stw	r4,0(r18)
   41d24:	01000044 	movi	r4,1
   41d28:	d8801e15 	stw	r2,120(sp)
   41d2c:	91000115 	stw	r4,4(r18)
   41d30:	dd801f15 	stw	r22,124(sp)
   41d34:	10800208 	cmpgei	r2,r2,8
   41d38:	1003c41e 	bne	r2,zero,42c4c <___vfprintf_internal_r+0x1aa0>
   41d3c:	94800204 	addi	r18,r18,8
   41d40:	d8801717 	ldw	r2,92(sp)
   41d44:	d9000917 	ldw	r4,36(sp)
   41d48:	11000416 	blt	r2,r4,41d5c <___vfprintf_internal_r+0xbb0>
   41d4c:	1880004c 	andi	r2,r3,1
   41d50:	1000021e 	bne	r2,zero,41d5c <___vfprintf_internal_r+0xbb0>
   41d54:	b009883a 	mov	r4,r22
   41d58:	003e0f06 	br	41598 <___vfprintf_internal_r+0x3ec>
   41d5c:	d8800d17 	ldw	r2,52(sp)
   41d60:	d9400c17 	ldw	r5,48(sp)
   41d64:	90800015 	stw	r2,0(r18)
   41d68:	d8801e17 	ldw	r2,120(sp)
   41d6c:	2d89883a 	add	r4,r5,r22
   41d70:	91400115 	stw	r5,4(r18)
   41d74:	10800044 	addi	r2,r2,1
   41d78:	d8801e15 	stw	r2,120(sp)
   41d7c:	d9001f15 	stw	r4,124(sp)
   41d80:	10800208 	cmpgei	r2,r2,8
   41d84:	10026b1e 	bne	r2,zero,42734 <___vfprintf_internal_r+0x1588>
   41d88:	94800204 	addi	r18,r18,8
   41d8c:	d8800917 	ldw	r2,36(sp)
   41d90:	15ffffc4 	addi	r23,r2,-1
   41d94:	05fe000e 	bge	zero,r23,41598 <___vfprintf_internal_r+0x3ec>
   41d98:	05800174 	movhi	r22,5
   41d9c:	b9400450 	cmplti	r5,r23,17
   41da0:	d8801e17 	ldw	r2,120(sp)
   41da4:	b5805404 	addi	r22,r22,336
   41da8:	2801441e 	bne	r5,zero,422bc <___vfprintf_internal_r+0x1110>
   41dac:	900d883a 	mov	r6,r18
   41db0:	980b883a 	mov	r5,r19
   41db4:	1825883a 	mov	r18,r3
   41db8:	b02b883a 	mov	r21,r22
   41dbc:	8027883a 	mov	r19,r16
   41dc0:	a02d883a 	mov	r22,r20
   41dc4:	b821883a 	mov	r16,r23
   41dc8:	07000404 	movi	fp,16
   41dcc:	6029883a 	mov	r20,r12
   41dd0:	282f883a 	mov	r23,r5
   41dd4:	3007883a 	mov	r3,r6
   41dd8:	00000406 	br	41dec <___vfprintf_internal_r+0xc40>
   41ddc:	18c00204 	addi	r3,r3,8
   41de0:	843ffc04 	addi	r16,r16,-16
   41de4:	81400448 	cmpgei	r5,r16,17
   41de8:	28012a26 	beq	r5,zero,42294 <___vfprintf_internal_r+0x10e8>
   41dec:	10800044 	addi	r2,r2,1
   41df0:	21000404 	addi	r4,r4,16
   41df4:	1d400015 	stw	r21,0(r3)
   41df8:	1f000115 	stw	fp,4(r3)
   41dfc:	d9001f15 	stw	r4,124(sp)
   41e00:	d8801e15 	stw	r2,120(sp)
   41e04:	11400208 	cmpgei	r5,r2,8
   41e08:	283ff426 	beq	r5,zero,41ddc <___vfprintf_internal_r+0xc30>
   41e0c:	d9400417 	ldw	r5,16(sp)
   41e10:	d9000517 	ldw	r4,20(sp)
   41e14:	d9801d04 	addi	r6,sp,116
   41e18:	00489a00 	call	489a0 <__sprint_r>
   41e1c:	103dee1e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   41e20:	d9001f17 	ldw	r4,124(sp)
   41e24:	d8801e17 	ldw	r2,120(sp)
   41e28:	8807883a 	mov	r3,r17
   41e2c:	003fec06 	br	41de0 <___vfprintf_internal_r+0xc34>
   41e30:	832fc83a 	sub	r23,r16,r12
   41e34:	05fdca0e 	bge	zero,r23,41560 <___vfprintf_internal_r+0x3b4>
   41e38:	b009883a 	mov	r4,r22
   41e3c:	b9400450 	cmplti	r5,r23,17
   41e40:	05800174 	movhi	r22,5
   41e44:	d8801e17 	ldw	r2,120(sp)
   41e48:	b5805404 	addi	r22,r22,336
   41e4c:	28002e1e 	bne	r5,zero,41f08 <___vfprintf_internal_r+0xd5c>
   41e50:	d8c00f15 	stw	r3,60(sp)
   41e54:	dc001015 	stw	r16,64(sp)
   41e58:	9007883a 	mov	r3,r18
   41e5c:	b821883a 	mov	r16,r23
   41e60:	b025883a 	mov	r18,r22
   41e64:	982f883a 	mov	r23,r19
   41e68:	a02d883a 	mov	r22,r20
   41e6c:	03400404 	movi	r13,16
   41e70:	da001215 	stw	r8,72(sp)
   41e74:	6029883a 	mov	r20,r12
   41e78:	3827883a 	mov	r19,r7
   41e7c:	00000406 	br	41e90 <___vfprintf_internal_r+0xce4>
   41e80:	843ffc04 	addi	r16,r16,-16
   41e84:	81400448 	cmpgei	r5,r16,17
   41e88:	18c00204 	addi	r3,r3,8
   41e8c:	28001426 	beq	r5,zero,41ee0 <___vfprintf_internal_r+0xd34>
   41e90:	10800044 	addi	r2,r2,1
   41e94:	21000404 	addi	r4,r4,16
   41e98:	1c800015 	stw	r18,0(r3)
   41e9c:	1b400115 	stw	r13,4(r3)
   41ea0:	d9001f15 	stw	r4,124(sp)
   41ea4:	d8801e15 	stw	r2,120(sp)
   41ea8:	11400208 	cmpgei	r5,r2,8
   41eac:	283ff426 	beq	r5,zero,41e80 <___vfprintf_internal_r+0xcd4>
   41eb0:	d9400417 	ldw	r5,16(sp)
   41eb4:	d9000517 	ldw	r4,20(sp)
   41eb8:	d9801d04 	addi	r6,sp,116
   41ebc:	00489a00 	call	489a0 <__sprint_r>
   41ec0:	103dc51e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   41ec4:	843ffc04 	addi	r16,r16,-16
   41ec8:	81400448 	cmpgei	r5,r16,17
   41ecc:	d9001f17 	ldw	r4,124(sp)
   41ed0:	d8801e17 	ldw	r2,120(sp)
   41ed4:	8807883a 	mov	r3,r17
   41ed8:	03400404 	movi	r13,16
   41edc:	283fec1e 	bne	r5,zero,41e90 <___vfprintf_internal_r+0xce4>
   41ee0:	980f883a 	mov	r7,r19
   41ee4:	a019883a 	mov	r12,r20
   41ee8:	b827883a 	mov	r19,r23
   41eec:	b029883a 	mov	r20,r22
   41ef0:	802f883a 	mov	r23,r16
   41ef4:	902d883a 	mov	r22,r18
   41ef8:	da001217 	ldw	r8,72(sp)
   41efc:	1825883a 	mov	r18,r3
   41f00:	dc001017 	ldw	r16,64(sp)
   41f04:	d8c00f17 	ldw	r3,60(sp)
   41f08:	10800044 	addi	r2,r2,1
   41f0c:	b909883a 	add	r4,r23,r4
   41f10:	d8801e15 	stw	r2,120(sp)
   41f14:	95800015 	stw	r22,0(r18)
   41f18:	95c00115 	stw	r23,4(r18)
   41f1c:	d9001f15 	stw	r4,124(sp)
   41f20:	10800208 	cmpgei	r2,r2,8
   41f24:	1003621e 	bne	r2,zero,42cb0 <___vfprintf_internal_r+0x1b04>
   41f28:	41efc83a 	sub	r23,r8,r7
   41f2c:	94800204 	addi	r18,r18,8
   41f30:	202d883a 	mov	r22,r4
   41f34:	05fd8c0e 	bge	zero,r23,41568 <___vfprintf_internal_r+0x3bc>
   41f38:	b9400450 	cmplti	r5,r23,17
   41f3c:	d8801e17 	ldw	r2,120(sp)
   41f40:	b009883a 	mov	r4,r22
   41f44:	2803b11e 	bne	r5,zero,42e0c <___vfprintf_internal_r+0x1c60>
   41f48:	d8c00f15 	stw	r3,60(sp)
   41f4c:	dc001015 	stw	r16,64(sp)
   41f50:	9007883a 	mov	r3,r18
   41f54:	b821883a 	mov	r16,r23
   41f58:	a02d883a 	mov	r22,r20
   41f5c:	982f883a 	mov	r23,r19
   41f60:	9825883a 	mov	r18,r19
   41f64:	02000404 	movi	r8,16
   41f68:	6029883a 	mov	r20,r12
   41f6c:	3827883a 	mov	r19,r7
   41f70:	00000406 	br	41f84 <___vfprintf_internal_r+0xdd8>
   41f74:	843ffc04 	addi	r16,r16,-16
   41f78:	81400448 	cmpgei	r5,r16,17
   41f7c:	18c00204 	addi	r3,r3,8
   41f80:	28001426 	beq	r5,zero,41fd4 <___vfprintf_internal_r+0xe28>
   41f84:	10800044 	addi	r2,r2,1
   41f88:	21000404 	addi	r4,r4,16
   41f8c:	1c800015 	stw	r18,0(r3)
   41f90:	1a000115 	stw	r8,4(r3)
   41f94:	d9001f15 	stw	r4,124(sp)
   41f98:	d8801e15 	stw	r2,120(sp)
   41f9c:	11400208 	cmpgei	r5,r2,8
   41fa0:	283ff426 	beq	r5,zero,41f74 <___vfprintf_internal_r+0xdc8>
   41fa4:	d9400417 	ldw	r5,16(sp)
   41fa8:	d9000517 	ldw	r4,20(sp)
   41fac:	d9801d04 	addi	r6,sp,116
   41fb0:	00489a00 	call	489a0 <__sprint_r>
   41fb4:	103d881e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   41fb8:	843ffc04 	addi	r16,r16,-16
   41fbc:	81400448 	cmpgei	r5,r16,17
   41fc0:	d9001f17 	ldw	r4,124(sp)
   41fc4:	d8801e17 	ldw	r2,120(sp)
   41fc8:	8807883a 	mov	r3,r17
   41fcc:	02000404 	movi	r8,16
   41fd0:	283fec1e 	bne	r5,zero,41f84 <___vfprintf_internal_r+0xdd8>
   41fd4:	980f883a 	mov	r7,r19
   41fd8:	a019883a 	mov	r12,r20
   41fdc:	9027883a 	mov	r19,r18
   41fe0:	b029883a 	mov	r20,r22
   41fe4:	1825883a 	mov	r18,r3
   41fe8:	b82d883a 	mov	r22,r23
   41fec:	d8c00f17 	ldw	r3,60(sp)
   41ff0:	802f883a 	mov	r23,r16
   41ff4:	dc001017 	ldw	r16,64(sp)
   41ff8:	10800044 	addi	r2,r2,1
   41ffc:	b909883a 	add	r4,r23,r4
   42000:	d8801e15 	stw	r2,120(sp)
   42004:	95800015 	stw	r22,0(r18)
   42008:	95c00115 	stw	r23,4(r18)
   4200c:	d9001f15 	stw	r4,124(sp)
   42010:	10800208 	cmpgei	r2,r2,8
   42014:	10018a1e 	bne	r2,zero,42640 <___vfprintf_internal_r+0x1494>
   42018:	94800204 	addi	r18,r18,8
   4201c:	202d883a 	mov	r22,r4
   42020:	003d5106 	br	41568 <___vfprintf_internal_r+0x3bc>
   42024:	11400060 	cmpeqi	r5,r2,1
   42028:	181b883a 	mov	r13,r3
   4202c:	002d883a 	mov	r22,zero
   42030:	283eac1e 	bne	r5,zero,41ae4 <___vfprintf_internal_r+0x938>
   42034:	108000a0 	cmpeqi	r2,r2,2
   42038:	002f883a 	mov	r23,zero
   4203c:	103dcd26 	beq	r2,zero,41774 <___vfprintf_internal_r+0x5c8>
   42040:	d9400e17 	ldw	r5,56(sp)
   42044:	882b883a 	mov	r21,r17
   42048:	b08003cc 	andi	r2,r22,15
   4204c:	b806973a 	slli	r3,r23,28
   42050:	b02cd13a 	srli	r22,r22,4
   42054:	2885883a 	add	r2,r5,r2
   42058:	10800003 	ldbu	r2,0(r2)
   4205c:	b82ed13a 	srli	r23,r23,4
   42060:	1dacb03a 	or	r22,r3,r22
   42064:	a8bfffc5 	stb	r2,-1(r21)
   42068:	b5c4b03a 	or	r2,r22,r23
   4206c:	ad7fffc4 	addi	r21,r21,-1
   42070:	103ff51e 	bne	r2,zero,42048 <___vfprintf_internal_r+0xe9c>
   42074:	8d4fc83a 	sub	r7,r17,r21
   42078:	6807883a 	mov	r3,r13
   4207c:	003dd306 	br	417cc <___vfprintf_internal_r+0x620>
   42080:	d9400417 	ldw	r5,16(sp)
   42084:	d9000517 	ldw	r4,20(sp)
   42088:	d9801d04 	addi	r6,sp,116
   4208c:	00489a00 	call	489a0 <__sprint_r>
   42090:	103d4b26 	beq	r2,zero,415c0 <___vfprintf_internal_r+0x414>
   42094:	003d5006 	br	415d8 <___vfprintf_internal_r+0x42c>
   42098:	d8800917 	ldw	r2,36(sp)
   4209c:	95c00204 	addi	r23,r18,8
   420a0:	10800088 	cmpgei	r2,r2,2
   420a4:	10012126 	beq	r2,zero,4252c <___vfprintf_internal_r+0x1380>
   420a8:	da001e17 	ldw	r8,120(sp)
   420ac:	00800044 	movi	r2,1
   420b0:	b5800044 	addi	r22,r22,1
   420b4:	42000044 	addi	r8,r8,1
   420b8:	90800115 	stw	r2,4(r18)
   420bc:	95400015 	stw	r21,0(r18)
   420c0:	dd801f15 	stw	r22,124(sp)
   420c4:	da001e15 	stw	r8,120(sp)
   420c8:	40800210 	cmplti	r2,r8,8
   420cc:	10022a26 	beq	r2,zero,42978 <___vfprintf_internal_r+0x17cc>
   420d0:	d8800c17 	ldw	r2,48(sp)
   420d4:	d9000d17 	ldw	r4,52(sp)
   420d8:	42000044 	addi	r8,r8,1
   420dc:	15b9883a 	add	fp,r2,r22
   420e0:	b8800115 	stw	r2,4(r23)
   420e4:	b9000015 	stw	r4,0(r23)
   420e8:	df001f15 	stw	fp,124(sp)
   420ec:	da001e15 	stw	r8,120(sp)
   420f0:	40800208 	cmpgei	r2,r8,8
   420f4:	10022d1e 	bne	r2,zero,429ac <___vfprintf_internal_r+0x1800>
   420f8:	bdc00204 	addi	r23,r23,8
   420fc:	d9000a17 	ldw	r4,40(sp)
   42100:	d9400b17 	ldw	r5,44(sp)
   42104:	000d883a 	mov	r6,zero
   42108:	000f883a 	mov	r7,zero
   4210c:	db001015 	stw	r12,64(sp)
   42110:	d8c00f15 	stw	r3,60(sp)
   42114:	da000815 	stw	r8,32(sp)
   42118:	004c19c0 	call	4c19c <__eqdf2>
   4211c:	d8c00917 	ldw	r3,36(sp)
   42120:	da000817 	ldw	r8,32(sp)
   42124:	db001017 	ldw	r12,64(sp)
   42128:	1cbfffc4 	addi	r18,r3,-1
   4212c:	d8c00f17 	ldw	r3,60(sp)
   42130:	10011a26 	beq	r2,zero,4259c <___vfprintf_internal_r+0x13f0>
   42134:	aa400044 	addi	r9,r21,1
   42138:	42000044 	addi	r8,r8,1
   4213c:	e4b9883a 	add	fp,fp,r18
   42140:	ba400015 	stw	r9,0(r23)
   42144:	bc800115 	stw	r18,4(r23)
   42148:	df001f15 	stw	fp,124(sp)
   4214c:	da001e15 	stw	r8,120(sp)
   42150:	40800208 	cmpgei	r2,r8,8
   42154:	1002c91e 	bne	r2,zero,42c7c <___vfprintf_internal_r+0x1ad0>
   42158:	bdc00204 	addi	r23,r23,8
   4215c:	d9401117 	ldw	r5,68(sp)
   42160:	42000044 	addi	r8,r8,1
   42164:	d8801904 	addi	r2,sp,100
   42168:	2f09883a 	add	r4,r5,fp
   4216c:	da001e15 	stw	r8,120(sp)
   42170:	b8800015 	stw	r2,0(r23)
   42174:	b9400115 	stw	r5,4(r23)
   42178:	d9001f15 	stw	r4,124(sp)
   4217c:	42000208 	cmpgei	r8,r8,8
   42180:	40013d1e 	bne	r8,zero,42678 <___vfprintf_internal_r+0x14cc>
   42184:	bc800204 	addi	r18,r23,8
   42188:	003d0306 	br	41598 <___vfprintf_internal_r+0x3ec>
   4218c:	05c00174 	movhi	r23,5
   42190:	b1400450 	cmplti	r5,r22,17
   42194:	d9001f17 	ldw	r4,124(sp)
   42198:	d8801e17 	ldw	r2,120(sp)
   4219c:	bdc05804 	addi	r23,r23,352
   421a0:	2800321e 	bne	r5,zero,4226c <___vfprintf_internal_r+0x10c0>
   421a4:	d8c01215 	stw	r3,72(sp)
   421a8:	dc001315 	stw	r16,76(sp)
   421ac:	9007883a 	mov	r3,r18
   421b0:	b021883a 	mov	r16,r22
   421b4:	b825883a 	mov	r18,r23
   421b8:	a02d883a 	mov	r22,r20
   421bc:	982f883a 	mov	r23,r19
   421c0:	03c00404 	movi	r15,16
   421c4:	db800f15 	stw	r14,60(sp)
   421c8:	db401015 	stw	r13,64(sp)
   421cc:	da001415 	stw	r8,80(sp)
   421d0:	6029883a 	mov	r20,r12
   421d4:	3827883a 	mov	r19,r7
   421d8:	00000406 	br	421ec <___vfprintf_internal_r+0x1040>
   421dc:	843ffc04 	addi	r16,r16,-16
   421e0:	81400448 	cmpgei	r5,r16,17
   421e4:	18c00204 	addi	r3,r3,8
   421e8:	28001426 	beq	r5,zero,4223c <___vfprintf_internal_r+0x1090>
   421ec:	10800044 	addi	r2,r2,1
   421f0:	21000404 	addi	r4,r4,16
   421f4:	1c800015 	stw	r18,0(r3)
   421f8:	1bc00115 	stw	r15,4(r3)
   421fc:	d9001f15 	stw	r4,124(sp)
   42200:	d8801e15 	stw	r2,120(sp)
   42204:	11400208 	cmpgei	r5,r2,8
   42208:	283ff426 	beq	r5,zero,421dc <___vfprintf_internal_r+0x1030>
   4220c:	d9400417 	ldw	r5,16(sp)
   42210:	d9000517 	ldw	r4,20(sp)
   42214:	d9801d04 	addi	r6,sp,116
   42218:	00489a00 	call	489a0 <__sprint_r>
   4221c:	103cee1e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42220:	843ffc04 	addi	r16,r16,-16
   42224:	81400448 	cmpgei	r5,r16,17
   42228:	d9001f17 	ldw	r4,124(sp)
   4222c:	d8801e17 	ldw	r2,120(sp)
   42230:	8807883a 	mov	r3,r17
   42234:	03c00404 	movi	r15,16
   42238:	283fec1e 	bne	r5,zero,421ec <___vfprintf_internal_r+0x1040>
   4223c:	980f883a 	mov	r7,r19
   42240:	a019883a 	mov	r12,r20
   42244:	b827883a 	mov	r19,r23
   42248:	b029883a 	mov	r20,r22
   4224c:	902f883a 	mov	r23,r18
   42250:	802d883a 	mov	r22,r16
   42254:	1825883a 	mov	r18,r3
   42258:	db800f17 	ldw	r14,60(sp)
   4225c:	db401017 	ldw	r13,64(sp)
   42260:	da001417 	ldw	r8,80(sp)
   42264:	dc001317 	ldw	r16,76(sp)
   42268:	d8c01217 	ldw	r3,72(sp)
   4226c:	10800044 	addi	r2,r2,1
   42270:	b109883a 	add	r4,r22,r4
   42274:	d8801e15 	stw	r2,120(sp)
   42278:	95c00015 	stw	r23,0(r18)
   4227c:	95800115 	stw	r22,4(r18)
   42280:	d9001f15 	stw	r4,124(sp)
   42284:	10800208 	cmpgei	r2,r2,8
   42288:	1001d51e 	bne	r2,zero,429e0 <___vfprintf_internal_r+0x1834>
   4228c:	94800204 	addi	r18,r18,8
   42290:	003c9506 	br	414e8 <___vfprintf_internal_r+0x33c>
   42294:	180d883a 	mov	r6,r3
   42298:	b80b883a 	mov	r5,r23
   4229c:	9007883a 	mov	r3,r18
   422a0:	a019883a 	mov	r12,r20
   422a4:	802f883a 	mov	r23,r16
   422a8:	b029883a 	mov	r20,r22
   422ac:	9821883a 	mov	r16,r19
   422b0:	a82d883a 	mov	r22,r21
   422b4:	2827883a 	mov	r19,r5
   422b8:	3025883a 	mov	r18,r6
   422bc:	10800044 	addi	r2,r2,1
   422c0:	95800015 	stw	r22,0(r18)
   422c4:	95c00115 	stw	r23,4(r18)
   422c8:	25c9883a 	add	r4,r4,r23
   422cc:	d8801e15 	stw	r2,120(sp)
   422d0:	d9001f15 	stw	r4,124(sp)
   422d4:	10800208 	cmpgei	r2,r2,8
   422d8:	103cae26 	beq	r2,zero,41594 <___vfprintf_internal_r+0x3e8>
   422dc:	d9400417 	ldw	r5,16(sp)
   422e0:	d9000517 	ldw	r4,20(sp)
   422e4:	d9801d04 	addi	r6,sp,116
   422e8:	db000f15 	stw	r12,60(sp)
   422ec:	d8c00815 	stw	r3,32(sp)
   422f0:	00489a00 	call	489a0 <__sprint_r>
   422f4:	103cb81e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   422f8:	d9001f17 	ldw	r4,124(sp)
   422fc:	d8c00817 	ldw	r3,32(sp)
   42300:	db000f17 	ldw	r12,60(sp)
   42304:	8825883a 	mov	r18,r17
   42308:	003ca306 	br	41598 <___vfprintf_internal_r+0x3ec>
   4230c:	d9400417 	ldw	r5,16(sp)
   42310:	d9000517 	ldw	r4,20(sp)
   42314:	d9801d04 	addi	r6,sp,116
   42318:	db001515 	stw	r12,84(sp)
   4231c:	d9c01415 	stw	r7,80(sp)
   42320:	da001315 	stw	r8,76(sp)
   42324:	d8c01215 	stw	r3,72(sp)
   42328:	db401015 	stw	r13,64(sp)
   4232c:	db800f15 	stw	r14,60(sp)
   42330:	00489a00 	call	489a0 <__sprint_r>
   42334:	103ca81e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42338:	dd801f17 	ldw	r22,124(sp)
   4233c:	db001517 	ldw	r12,84(sp)
   42340:	d9c01417 	ldw	r7,80(sp)
   42344:	da001317 	ldw	r8,76(sp)
   42348:	d8c01217 	ldw	r3,72(sp)
   4234c:	db401017 	ldw	r13,64(sp)
   42350:	db800f17 	ldw	r14,60(sp)
   42354:	8825883a 	mov	r18,r17
   42358:	003c7206 	br	41524 <___vfprintf_internal_r+0x378>
   4235c:	d9400417 	ldw	r5,16(sp)
   42360:	d9000517 	ldw	r4,20(sp)
   42364:	d9801d04 	addi	r6,sp,116
   42368:	db001415 	stw	r12,80(sp)
   4236c:	d9c01315 	stw	r7,76(sp)
   42370:	da001215 	stw	r8,72(sp)
   42374:	d8c01015 	stw	r3,64(sp)
   42378:	db400f15 	stw	r13,60(sp)
   4237c:	00489a00 	call	489a0 <__sprint_r>
   42380:	103c951e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42384:	dd801f17 	ldw	r22,124(sp)
   42388:	db001417 	ldw	r12,80(sp)
   4238c:	d9c01317 	ldw	r7,76(sp)
   42390:	da001217 	ldw	r8,72(sp)
   42394:	d8c01017 	ldw	r3,64(sp)
   42398:	db400f17 	ldw	r13,60(sp)
   4239c:	8825883a 	mov	r18,r17
   423a0:	003c6d06 	br	41558 <___vfprintf_internal_r+0x3ac>
   423a4:	ddc01717 	ldw	r23,92(sp)
   423a8:	05c1a00e 	bge	zero,r23,42a2c <___vfprintf_internal_r+0x1880>
   423ac:	d8800917 	ldw	r2,36(sp)
   423b0:	d9000817 	ldw	r4,32(sp)
   423b4:	102f883a 	mov	r23,r2
   423b8:	2080d016 	blt	r4,r2,426fc <___vfprintf_internal_r+0x1550>
   423bc:	05c00a0e 	bge	zero,r23,423e8 <___vfprintf_internal_r+0x123c>
   423c0:	d8801e17 	ldw	r2,120(sp)
   423c4:	b5ed883a 	add	r22,r22,r23
   423c8:	95400015 	stw	r21,0(r18)
   423cc:	10800044 	addi	r2,r2,1
   423d0:	d8801e15 	stw	r2,120(sp)
   423d4:	95c00115 	stw	r23,4(r18)
   423d8:	dd801f15 	stw	r22,124(sp)
   423dc:	10800208 	cmpgei	r2,r2,8
   423e0:	1003921e 	bne	r2,zero,4322c <___vfprintf_internal_r+0x2080>
   423e4:	94800204 	addi	r18,r18,8
   423e8:	b800d016 	blt	r23,zero,4272c <___vfprintf_internal_r+0x1580>
   423ec:	d8800817 	ldw	r2,32(sp)
   423f0:	15efc83a 	sub	r23,r2,r23
   423f4:	05c0fb16 	blt	zero,r23,427e4 <___vfprintf_internal_r+0x1638>
   423f8:	ddc01717 	ldw	r23,92(sp)
   423fc:	d9000917 	ldw	r4,36(sp)
   42400:	b900c10e 	bge	r23,r4,42708 <___vfprintf_internal_r+0x155c>
   42404:	d8800d17 	ldw	r2,52(sp)
   42408:	d9400c17 	ldw	r5,48(sp)
   4240c:	90800015 	stw	r2,0(r18)
   42410:	d8801e17 	ldw	r2,120(sp)
   42414:	2d89883a 	add	r4,r5,r22
   42418:	91400115 	stw	r5,4(r18)
   4241c:	10800044 	addi	r2,r2,1
   42420:	d8801e15 	stw	r2,120(sp)
   42424:	d9001f15 	stw	r4,124(sp)
   42428:	10800208 	cmpgei	r2,r2,8
   4242c:	1003651e 	bne	r2,zero,431c4 <___vfprintf_internal_r+0x2018>
   42430:	94800204 	addi	r18,r18,8
   42434:	d8800917 	ldw	r2,36(sp)
   42438:	d9400817 	ldw	r5,32(sp)
   4243c:	15efc83a 	sub	r23,r2,r23
   42440:	1179c83a 	sub	fp,r2,r5
   42444:	bf00010e 	bge	r23,fp,4244c <___vfprintf_internal_r+0x12a0>
   42448:	b839883a 	mov	fp,r23
   4244c:	07000c0e 	bge	zero,fp,42480 <___vfprintf_internal_r+0x12d4>
   42450:	d8800817 	ldw	r2,32(sp)
   42454:	2709883a 	add	r4,r4,fp
   42458:	97000115 	stw	fp,4(r18)
   4245c:	a893883a 	add	r9,r21,r2
   42460:	d8801e17 	ldw	r2,120(sp)
   42464:	92400015 	stw	r9,0(r18)
   42468:	d9001f15 	stw	r4,124(sp)
   4246c:	10800044 	addi	r2,r2,1
   42470:	d8801e15 	stw	r2,120(sp)
   42474:	10800208 	cmpgei	r2,r2,8
   42478:	10037b1e 	bne	r2,zero,43268 <___vfprintf_internal_r+0x20bc>
   4247c:	94800204 	addi	r18,r18,8
   42480:	e005883a 	mov	r2,fp
   42484:	e000010e 	bge	fp,zero,4248c <___vfprintf_internal_r+0x12e0>
   42488:	0005883a 	mov	r2,zero
   4248c:	b8afc83a 	sub	r23,r23,r2
   42490:	05fc410e 	bge	zero,r23,41598 <___vfprintf_internal_r+0x3ec>
   42494:	05800174 	movhi	r22,5
   42498:	b9400450 	cmplti	r5,r23,17
   4249c:	d8801e17 	ldw	r2,120(sp)
   424a0:	b5805404 	addi	r22,r22,336
   424a4:	283f851e 	bne	r5,zero,422bc <___vfprintf_internal_r+0x1110>
   424a8:	980b883a 	mov	r5,r19
   424ac:	d8c00815 	stw	r3,32(sp)
   424b0:	8027883a 	mov	r19,r16
   424b4:	9007883a 	mov	r3,r18
   424b8:	b821883a 	mov	r16,r23
   424bc:	b025883a 	mov	r18,r22
   424c0:	dd400517 	ldw	r21,20(sp)
   424c4:	a02d883a 	mov	r22,r20
   424c8:	07000404 	movi	fp,16
   424cc:	6029883a 	mov	r20,r12
   424d0:	282f883a 	mov	r23,r5
   424d4:	00000406 	br	424e8 <___vfprintf_internal_r+0x133c>
   424d8:	18c00204 	addi	r3,r3,8
   424dc:	843ffc04 	addi	r16,r16,-16
   424e0:	81400448 	cmpgei	r5,r16,17
   424e4:	28034426 	beq	r5,zero,431f8 <___vfprintf_internal_r+0x204c>
   424e8:	10800044 	addi	r2,r2,1
   424ec:	21000404 	addi	r4,r4,16
   424f0:	1c800015 	stw	r18,0(r3)
   424f4:	1f000115 	stw	fp,4(r3)
   424f8:	d9001f15 	stw	r4,124(sp)
   424fc:	d8801e15 	stw	r2,120(sp)
   42500:	11400208 	cmpgei	r5,r2,8
   42504:	283ff426 	beq	r5,zero,424d8 <___vfprintf_internal_r+0x132c>
   42508:	d9400417 	ldw	r5,16(sp)
   4250c:	d9801d04 	addi	r6,sp,116
   42510:	a809883a 	mov	r4,r21
   42514:	00489a00 	call	489a0 <__sprint_r>
   42518:	103c2f1e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   4251c:	d9001f17 	ldw	r4,124(sp)
   42520:	d8801e17 	ldw	r2,120(sp)
   42524:	8807883a 	mov	r3,r17
   42528:	003fec06 	br	424dc <___vfprintf_internal_r+0x1330>
   4252c:	1880004c 	andi	r2,r3,1
   42530:	103edd1e 	bne	r2,zero,420a8 <___vfprintf_internal_r+0xefc>
   42534:	da001e17 	ldw	r8,120(sp)
   42538:	00800044 	movi	r2,1
   4253c:	b7000044 	addi	fp,r22,1
   42540:	42000044 	addi	r8,r8,1
   42544:	90800115 	stw	r2,4(r18)
   42548:	95400015 	stw	r21,0(r18)
   4254c:	df001f15 	stw	fp,124(sp)
   42550:	da001e15 	stw	r8,120(sp)
   42554:	40800210 	cmplti	r2,r8,8
   42558:	103f001e 	bne	r2,zero,4215c <___vfprintf_internal_r+0xfb0>
   4255c:	d9400417 	ldw	r5,16(sp)
   42560:	d9000517 	ldw	r4,20(sp)
   42564:	d9801d04 	addi	r6,sp,116
   42568:	db000f15 	stw	r12,60(sp)
   4256c:	d8c00815 	stw	r3,32(sp)
   42570:	00489a00 	call	489a0 <__sprint_r>
   42574:	103c181e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42578:	df001f17 	ldw	fp,124(sp)
   4257c:	da001e17 	ldw	r8,120(sp)
   42580:	db000f17 	ldw	r12,60(sp)
   42584:	d8c00817 	ldw	r3,32(sp)
   42588:	882f883a 	mov	r23,r17
   4258c:	003ef306 	br	4215c <___vfprintf_internal_r+0xfb0>
   42590:	000f883a 	mov	r7,zero
   42594:	882b883a 	mov	r21,r17
   42598:	003c8c06 	br	417cc <___vfprintf_internal_r+0x620>
   4259c:	d8800917 	ldw	r2,36(sp)
   425a0:	10800090 	cmplti	r2,r2,2
   425a4:	103eed1e 	bne	r2,zero,4215c <___vfprintf_internal_r+0xfb0>
   425a8:	d8800917 	ldw	r2,36(sp)
   425ac:	05800174 	movhi	r22,5
   425b0:	b5805404 	addi	r22,r22,336
   425b4:	10800490 	cmplti	r2,r2,18
   425b8:	1002061e 	bne	r2,zero,42dd4 <___vfprintf_internal_r+0x1c28>
   425bc:	9809883a 	mov	r4,r19
   425c0:	b805883a 	mov	r2,r23
   425c4:	1827883a 	mov	r19,r3
   425c8:	a02f883a 	mov	r23,r20
   425cc:	e007883a 	mov	r3,fp
   425d0:	8029883a 	mov	r20,r16
   425d4:	05400404 	movi	r21,16
   425d8:	9021883a 	mov	r16,r18
   425dc:	2039883a 	mov	fp,r4
   425e0:	b025883a 	mov	r18,r22
   425e4:	602d883a 	mov	r22,r12
   425e8:	00000406 	br	425fc <___vfprintf_internal_r+0x1450>
   425ec:	10800204 	addi	r2,r2,8
   425f0:	843ffc04 	addi	r16,r16,-16
   425f4:	81000448 	cmpgei	r4,r16,17
   425f8:	2001ec26 	beq	r4,zero,42dac <___vfprintf_internal_r+0x1c00>
   425fc:	42000044 	addi	r8,r8,1
   42600:	18c00404 	addi	r3,r3,16
   42604:	14800015 	stw	r18,0(r2)
   42608:	15400115 	stw	r21,4(r2)
   4260c:	d8c01f15 	stw	r3,124(sp)
   42610:	da001e15 	stw	r8,120(sp)
   42614:	41000208 	cmpgei	r4,r8,8
   42618:	203ff426 	beq	r4,zero,425ec <___vfprintf_internal_r+0x1440>
   4261c:	d9400417 	ldw	r5,16(sp)
   42620:	d9000517 	ldw	r4,20(sp)
   42624:	d9801d04 	addi	r6,sp,116
   42628:	00489a00 	call	489a0 <__sprint_r>
   4262c:	103bea1e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42630:	d8c01f17 	ldw	r3,124(sp)
   42634:	da001e17 	ldw	r8,120(sp)
   42638:	8805883a 	mov	r2,r17
   4263c:	003fec06 	br	425f0 <___vfprintf_internal_r+0x1444>
   42640:	d9400417 	ldw	r5,16(sp)
   42644:	d9000517 	ldw	r4,20(sp)
   42648:	d9801d04 	addi	r6,sp,116
   4264c:	db001215 	stw	r12,72(sp)
   42650:	d9c01015 	stw	r7,64(sp)
   42654:	d8c00f15 	stw	r3,60(sp)
   42658:	00489a00 	call	489a0 <__sprint_r>
   4265c:	103bde1e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42660:	dd801f17 	ldw	r22,124(sp)
   42664:	db001217 	ldw	r12,72(sp)
   42668:	d9c01017 	ldw	r7,64(sp)
   4266c:	d8c00f17 	ldw	r3,60(sp)
   42670:	8825883a 	mov	r18,r17
   42674:	003bbc06 	br	41568 <___vfprintf_internal_r+0x3bc>
   42678:	d9400417 	ldw	r5,16(sp)
   4267c:	d9000517 	ldw	r4,20(sp)
   42680:	d9801d04 	addi	r6,sp,116
   42684:	db000f15 	stw	r12,60(sp)
   42688:	d8c00815 	stw	r3,32(sp)
   4268c:	00489a00 	call	489a0 <__sprint_r>
   42690:	103bd11e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42694:	d9001f17 	ldw	r4,124(sp)
   42698:	db000f17 	ldw	r12,60(sp)
   4269c:	d8c00817 	ldw	r3,32(sp)
   426a0:	8825883a 	mov	r18,r17
   426a4:	003bbc06 	br	41598 <___vfprintf_internal_r+0x3ec>
   426a8:	6b400414 	ori	r13,r13,16
   426ac:	003b0f06 	br	412ec <___vfprintf_internal_r+0x140>
   426b0:	a2c00007 	ldb	r11,0(r20)
   426b4:	d8800715 	stw	r2,28(sp)
   426b8:	003b0c06 	br	412ec <___vfprintf_internal_r+0x140>
   426bc:	882b883a 	mov	r21,r17
   426c0:	003c4206 	br	417cc <___vfprintf_internal_r+0x620>
   426c4:	18800017 	ldw	r2,0(r3)
   426c8:	d8800a15 	stw	r2,40(sp)
   426cc:	18800117 	ldw	r2,4(r3)
   426d0:	d8800b15 	stw	r2,44(sp)
   426d4:	003c9e06 	br	41950 <___vfprintf_internal_r+0x7a4>
   426d8:	6880040c 	andi	r2,r13,16
   426dc:	1000921e 	bne	r2,zero,42928 <___vfprintf_internal_r+0x177c>
   426e0:	6b40100c 	andi	r13,r13,64
   426e4:	68009026 	beq	r13,zero,42928 <___vfprintf_internal_r+0x177c>
   426e8:	d8800717 	ldw	r2,28(sp)
   426ec:	d8c00617 	ldw	r3,24(sp)
   426f0:	10800017 	ldw	r2,0(r2)
   426f4:	10c0000d 	sth	r3,0(r2)
   426f8:	003d7406 	br	41ccc <___vfprintf_internal_r+0xb20>
   426fc:	202f883a 	mov	r23,r4
   42700:	05ff2f16 	blt	zero,r23,423c0 <___vfprintf_internal_r+0x1214>
   42704:	003f3806 	br	423e8 <___vfprintf_internal_r+0x123c>
   42708:	1880004c 	andi	r2,r3,1
   4270c:	103f3d1e 	bne	r2,zero,42404 <___vfprintf_internal_r+0x1258>
   42710:	d8800817 	ldw	r2,32(sp)
   42714:	25efc83a 	sub	r23,r4,r23
   42718:	20b9c83a 	sub	fp,r4,r2
   4271c:	b009883a 	mov	r4,r22
   42720:	bf3f570e 	bge	r23,fp,42480 <___vfprintf_internal_r+0x12d4>
   42724:	b839883a 	mov	fp,r23
   42728:	003f5506 	br	42480 <___vfprintf_internal_r+0x12d4>
   4272c:	002f883a 	mov	r23,zero
   42730:	003f2e06 	br	423ec <___vfprintf_internal_r+0x1240>
   42734:	d9400417 	ldw	r5,16(sp)
   42738:	d9000517 	ldw	r4,20(sp)
   4273c:	d9801d04 	addi	r6,sp,116
   42740:	db000f15 	stw	r12,60(sp)
   42744:	d8c00815 	stw	r3,32(sp)
   42748:	00489a00 	call	489a0 <__sprint_r>
   4274c:	103ba21e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42750:	d9001f17 	ldw	r4,124(sp)
   42754:	db000f17 	ldw	r12,60(sp)
   42758:	d8c00817 	ldw	r3,32(sp)
   4275c:	8825883a 	mov	r18,r17
   42760:	003d8a06 	br	41d8c <___vfprintf_internal_r+0xbe0>
   42764:	00800174 	movhi	r2,5
   42768:	10804704 	addi	r2,r2,284
   4276c:	d8800e15 	stw	r2,56(sp)
   42770:	6880080c 	andi	r2,r13,32
   42774:	10007326 	beq	r2,zero,42944 <___vfprintf_internal_r+0x1798>
   42778:	d8800717 	ldw	r2,28(sp)
   4277c:	15800017 	ldw	r22,0(r2)
   42780:	15c00117 	ldw	r23,4(r2)
   42784:	10800204 	addi	r2,r2,8
   42788:	d8800715 	stw	r2,28(sp)
   4278c:	6880004c 	andi	r2,r13,1
   42790:	10006a26 	beq	r2,zero,4293c <___vfprintf_internal_r+0x1790>
   42794:	b5c4b03a 	or	r2,r22,r23
   42798:	10006826 	beq	r2,zero,4293c <___vfprintf_internal_r+0x1790>
   4279c:	00800c04 	movi	r2,48
   427a0:	d8801685 	stb	r2,90(sp)
   427a4:	df0016c5 	stb	fp,91(sp)
   427a8:	6b400094 	ori	r13,r13,2
   427ac:	00800084 	movi	r2,2
   427b0:	003be306 	br	41740 <___vfprintf_internal_r+0x594>
   427b4:	408001f0 	cmpltui	r2,r8,7
   427b8:	400f883a 	mov	r7,r8
   427bc:	1001bf26 	beq	r2,zero,42ebc <___vfprintf_internal_r+0x1d10>
   427c0:	05400174 	movhi	r21,5
   427c4:	3819883a 	mov	r12,r7
   427c8:	dd800715 	stw	r22,28(sp)
   427cc:	ad405104 	addi	r21,r21,324
   427d0:	003b3b06 	br	414c0 <___vfprintf_internal_r+0x314>
   427d4:	00800174 	movhi	r2,5
   427d8:	10804c04 	addi	r2,r2,304
   427dc:	d8800e15 	stw	r2,56(sp)
   427e0:	003fe306 	br	42770 <___vfprintf_internal_r+0x15c4>
   427e4:	b009883a 	mov	r4,r22
   427e8:	b9400450 	cmplti	r5,r23,17
   427ec:	05800174 	movhi	r22,5
   427f0:	d8801e17 	ldw	r2,120(sp)
   427f4:	b5805404 	addi	r22,r22,336
   427f8:	2801901e 	bne	r5,zero,42e3c <___vfprintf_internal_r+0x1c90>
   427fc:	980b883a 	mov	r5,r19
   42800:	d8c00f15 	stw	r3,60(sp)
   42804:	8027883a 	mov	r19,r16
   42808:	9007883a 	mov	r3,r18
   4280c:	b821883a 	mov	r16,r23
   42810:	b025883a 	mov	r18,r22
   42814:	07000404 	movi	fp,16
   42818:	a02d883a 	mov	r22,r20
   4281c:	282f883a 	mov	r23,r5
   42820:	6029883a 	mov	r20,r12
   42824:	00000406 	br	42838 <___vfprintf_internal_r+0x168c>
   42828:	18c00204 	addi	r3,r3,8
   4282c:	843ffc04 	addi	r16,r16,-16
   42830:	81400448 	cmpgei	r5,r16,17
   42834:	28017826 	beq	r5,zero,42e18 <___vfprintf_internal_r+0x1c6c>
   42838:	10800044 	addi	r2,r2,1
   4283c:	21000404 	addi	r4,r4,16
   42840:	1c800015 	stw	r18,0(r3)
   42844:	1f000115 	stw	fp,4(r3)
   42848:	d9001f15 	stw	r4,124(sp)
   4284c:	d8801e15 	stw	r2,120(sp)
   42850:	11400208 	cmpgei	r5,r2,8
   42854:	283ff426 	beq	r5,zero,42828 <___vfprintf_internal_r+0x167c>
   42858:	d9400417 	ldw	r5,16(sp)
   4285c:	d9000517 	ldw	r4,20(sp)
   42860:	d9801d04 	addi	r6,sp,116
   42864:	00489a00 	call	489a0 <__sprint_r>
   42868:	103b5b1e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   4286c:	d9001f17 	ldw	r4,124(sp)
   42870:	d8801e17 	ldw	r2,120(sp)
   42874:	8807883a 	mov	r3,r17
   42878:	003fec06 	br	4282c <___vfprintf_internal_r+0x1680>
   4287c:	b007883a 	mov	r3,r22
   42880:	9805883a 	mov	r2,r19
   42884:	dc000f15 	stw	r16,60(sp)
   42888:	a02d883a 	mov	r22,r20
   4288c:	b827883a 	mov	r19,r23
   42890:	9029883a 	mov	r20,r18
   42894:	db400815 	stw	r13,32(sp)
   42898:	8821883a 	mov	r16,r17
   4289c:	da001015 	stw	r8,64(sp)
   428a0:	202b883a 	mov	r21,r4
   428a4:	102f883a 	mov	r23,r2
   428a8:	1825883a 	mov	r18,r3
   428ac:	9009883a 	mov	r4,r18
   428b0:	980b883a 	mov	r5,r19
   428b4:	01800284 	movi	r6,10
   428b8:	000f883a 	mov	r7,zero
   428bc:	004b3880 	call	4b388 <__umoddi3>
   428c0:	10800c04 	addi	r2,r2,48
   428c4:	9009883a 	mov	r4,r18
   428c8:	980b883a 	mov	r5,r19
   428cc:	01800284 	movi	r6,10
   428d0:	000f883a 	mov	r7,zero
   428d4:	80bfffc5 	stb	r2,-1(r16)
   428d8:	004ae380 	call	4ae38 <__udivdi3>
   428dc:	980d883a 	mov	r6,r19
   428e0:	900f883a 	mov	r7,r18
   428e4:	843fffc4 	addi	r16,r16,-1
   428e8:	1025883a 	mov	r18,r2
   428ec:	1827883a 	mov	r19,r3
   428f0:	303fee1e 	bne	r6,zero,428ac <___vfprintf_internal_r+0x1700>
   428f4:	39c002a8 	cmpgeui	r7,r7,10
   428f8:	383fec1e 	bne	r7,zero,428ac <___vfprintf_internal_r+0x1700>
   428fc:	db400817 	ldw	r13,32(sp)
   42900:	a809883a 	mov	r4,r21
   42904:	802b883a 	mov	r21,r16
   42908:	a025883a 	mov	r18,r20
   4290c:	da001017 	ldw	r8,64(sp)
   42910:	dc000f17 	ldw	r16,60(sp)
   42914:	b029883a 	mov	r20,r22
   42918:	b827883a 	mov	r19,r23
   4291c:	8d4fc83a 	sub	r7,r17,r21
   42920:	6807883a 	mov	r3,r13
   42924:	003ba906 	br	417cc <___vfprintf_internal_r+0x620>
   42928:	d8800717 	ldw	r2,28(sp)
   4292c:	d8c00617 	ldw	r3,24(sp)
   42930:	10800017 	ldw	r2,0(r2)
   42934:	10c00015 	stw	r3,0(r2)
   42938:	003ce406 	br	41ccc <___vfprintf_internal_r+0xb20>
   4293c:	00800084 	movi	r2,2
   42940:	003b7f06 	br	41740 <___vfprintf_internal_r+0x594>
   42944:	d8c00717 	ldw	r3,28(sp)
   42948:	6880040c 	andi	r2,r13,16
   4294c:	1d800017 	ldw	r22,0(r3)
   42950:	18c00104 	addi	r3,r3,4
   42954:	d8c00715 	stw	r3,28(sp)
   42958:	1000051e 	bne	r2,zero,42970 <___vfprintf_internal_r+0x17c4>
   4295c:	6880100c 	andi	r2,r13,64
   42960:	10000326 	beq	r2,zero,42970 <___vfprintf_internal_r+0x17c4>
   42964:	b5bfffcc 	andi	r22,r22,65535
   42968:	002f883a 	mov	r23,zero
   4296c:	003f8706 	br	4278c <___vfprintf_internal_r+0x15e0>
   42970:	002f883a 	mov	r23,zero
   42974:	003f8506 	br	4278c <___vfprintf_internal_r+0x15e0>
   42978:	d9400417 	ldw	r5,16(sp)
   4297c:	d9000517 	ldw	r4,20(sp)
   42980:	d9801d04 	addi	r6,sp,116
   42984:	db000f15 	stw	r12,60(sp)
   42988:	d8c00815 	stw	r3,32(sp)
   4298c:	00489a00 	call	489a0 <__sprint_r>
   42990:	103b111e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42994:	dd801f17 	ldw	r22,124(sp)
   42998:	da001e17 	ldw	r8,120(sp)
   4299c:	db000f17 	ldw	r12,60(sp)
   429a0:	d8c00817 	ldw	r3,32(sp)
   429a4:	882f883a 	mov	r23,r17
   429a8:	003dc906 	br	420d0 <___vfprintf_internal_r+0xf24>
   429ac:	d9400417 	ldw	r5,16(sp)
   429b0:	d9000517 	ldw	r4,20(sp)
   429b4:	d9801d04 	addi	r6,sp,116
   429b8:	db000f15 	stw	r12,60(sp)
   429bc:	d8c00815 	stw	r3,32(sp)
   429c0:	00489a00 	call	489a0 <__sprint_r>
   429c4:	103b041e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   429c8:	df001f17 	ldw	fp,124(sp)
   429cc:	da001e17 	ldw	r8,120(sp)
   429d0:	db000f17 	ldw	r12,60(sp)
   429d4:	d8c00817 	ldw	r3,32(sp)
   429d8:	882f883a 	mov	r23,r17
   429dc:	003dc706 	br	420fc <___vfprintf_internal_r+0xf50>
   429e0:	d9400417 	ldw	r5,16(sp)
   429e4:	d9000517 	ldw	r4,20(sp)
   429e8:	d9801d04 	addi	r6,sp,116
   429ec:	db001515 	stw	r12,84(sp)
   429f0:	d9c01415 	stw	r7,80(sp)
   429f4:	da001315 	stw	r8,76(sp)
   429f8:	d8c01215 	stw	r3,72(sp)
   429fc:	db401015 	stw	r13,64(sp)
   42a00:	db800f15 	stw	r14,60(sp)
   42a04:	00489a00 	call	489a0 <__sprint_r>
   42a08:	103af31e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42a0c:	db001517 	ldw	r12,84(sp)
   42a10:	d9c01417 	ldw	r7,80(sp)
   42a14:	da001317 	ldw	r8,76(sp)
   42a18:	d8c01217 	ldw	r3,72(sp)
   42a1c:	db401017 	ldw	r13,64(sp)
   42a20:	db800f17 	ldw	r14,60(sp)
   42a24:	8825883a 	mov	r18,r17
   42a28:	003aaf06 	br	414e8 <___vfprintf_internal_r+0x33c>
   42a2c:	d8801e17 	ldw	r2,120(sp)
   42a30:	01400174 	movhi	r5,5
   42a34:	29405304 	addi	r5,r5,332
   42a38:	10800044 	addi	r2,r2,1
   42a3c:	b1000044 	addi	r4,r22,1
   42a40:	91400015 	stw	r5,0(r18)
   42a44:	01400044 	movi	r5,1
   42a48:	d8801e15 	stw	r2,120(sp)
   42a4c:	91400115 	stw	r5,4(r18)
   42a50:	d9001f15 	stw	r4,124(sp)
   42a54:	10800208 	cmpgei	r2,r2,8
   42a58:	1001071e 	bne	r2,zero,42e78 <___vfprintf_internal_r+0x1ccc>
   42a5c:	94800204 	addi	r18,r18,8
   42a60:	b800a31e 	bne	r23,zero,42cf0 <___vfprintf_internal_r+0x1b44>
   42a64:	d9400917 	ldw	r5,36(sp)
   42a68:	1880004c 	andi	r2,r3,1
   42a6c:	1144b03a 	or	r2,r2,r5
   42a70:	103ac926 	beq	r2,zero,41598 <___vfprintf_internal_r+0x3ec>
   42a74:	d8800d17 	ldw	r2,52(sp)
   42a78:	d9400c17 	ldw	r5,48(sp)
   42a7c:	90800015 	stw	r2,0(r18)
   42a80:	d8801e17 	ldw	r2,120(sp)
   42a84:	2909883a 	add	r4,r5,r4
   42a88:	91400115 	stw	r5,4(r18)
   42a8c:	10800044 	addi	r2,r2,1
   42a90:	d9001f15 	stw	r4,124(sp)
   42a94:	d8801e15 	stw	r2,120(sp)
   42a98:	11400208 	cmpgei	r5,r2,8
   42a9c:	28010e1e 	bne	r5,zero,42ed8 <___vfprintf_internal_r+0x1d2c>
   42aa0:	94800204 	addi	r18,r18,8
   42aa4:	d9400917 	ldw	r5,36(sp)
   42aa8:	10800044 	addi	r2,r2,1
   42aac:	d8801e15 	stw	r2,120(sp)
   42ab0:	2909883a 	add	r4,r5,r4
   42ab4:	95400015 	stw	r21,0(r18)
   42ab8:	91400115 	stw	r5,4(r18)
   42abc:	d9001f15 	stw	r4,124(sp)
   42ac0:	10800208 	cmpgei	r2,r2,8
   42ac4:	103ab326 	beq	r2,zero,41594 <___vfprintf_internal_r+0x3e8>
   42ac8:	003e0406 	br	422dc <___vfprintf_internal_r+0x1130>
   42acc:	d9000a17 	ldw	r4,40(sp)
   42ad0:	d9400b17 	ldw	r5,44(sp)
   42ad4:	da000815 	stw	r8,32(sp)
   42ad8:	200d883a 	mov	r6,r4
   42adc:	280f883a 	mov	r7,r5
   42ae0:	db400715 	stw	r13,28(sp)
   42ae4:	004d4980 	call	4d498 <__unorddf2>
   42ae8:	db400717 	ldw	r13,28(sp)
   42aec:	da000817 	ldw	r8,32(sp)
   42af0:	10024c1e 	bne	r2,zero,43424 <___vfprintf_internal_r+0x2278>
   42af4:	057ff7c4 	movi	r21,-33
   42af8:	40bfffe0 	cmpeqi	r2,r8,-1
   42afc:	e56c703a 	and	r22,fp,r21
   42b00:	1001d71e 	bne	r2,zero,43260 <___vfprintf_internal_r+0x20b4>
   42b04:	b08011d8 	cmpnei	r2,r22,71
   42b08:	1001c526 	beq	r2,zero,43220 <___vfprintf_internal_r+0x2074>
   42b0c:	d8800b17 	ldw	r2,44(sp)
   42b10:	68c04014 	ori	r3,r13,256
   42b14:	1000e516 	blt	r2,zero,42eac <___vfprintf_internal_r+0x1d00>
   42b18:	ddc00b17 	ldw	r23,44(sp)
   42b1c:	d8000705 	stb	zero,28(sp)
   42b20:	e08019a0 	cmpeqi	r2,fp,102
   42b24:	d8801015 	stw	r2,64(sp)
   42b28:	10017c1e 	bne	r2,zero,4311c <___vfprintf_internal_r+0x1f70>
   42b2c:	b0801158 	cmpnei	r2,r22,69
   42b30:	1000f826 	beq	r2,zero,42f14 <___vfprintf_internal_r+0x1d68>
   42b34:	d8801b04 	addi	r2,sp,108
   42b38:	d9000517 	ldw	r4,20(sp)
   42b3c:	d8800315 	stw	r2,12(sp)
   42b40:	d9400a17 	ldw	r5,40(sp)
   42b44:	d8801804 	addi	r2,sp,96
   42b48:	d8800215 	stw	r2,8(sp)
   42b4c:	d8801704 	addi	r2,sp,92
   42b50:	da000015 	stw	r8,0(sp)
   42b54:	d8800115 	stw	r2,4(sp)
   42b58:	01c00084 	movi	r7,2
   42b5c:	b80d883a 	mov	r6,r23
   42b60:	d8c01215 	stw	r3,72(sp)
   42b64:	db400915 	stw	r13,36(sp)
   42b68:	da000815 	stw	r8,32(sp)
   42b6c:	004397c0 	call	4397c <_dtoa_r>
   42b70:	e10019e0 	cmpeqi	r4,fp,103
   42b74:	da000817 	ldw	r8,32(sp)
   42b78:	db400917 	ldw	r13,36(sp)
   42b7c:	d8c01217 	ldw	r3,72(sp)
   42b80:	102b883a 	mov	r21,r2
   42b84:	20010b26 	beq	r4,zero,42fb4 <___vfprintf_internal_r+0x1e08>
   42b88:	6880004c 	andi	r2,r13,1
   42b8c:	10010b26 	beq	r2,zero,42fbc <___vfprintf_internal_r+0x1e10>
   42b90:	aa19883a 	add	r12,r21,r8
   42b94:	d9000a17 	ldw	r4,40(sp)
   42b98:	000d883a 	mov	r6,zero
   42b9c:	000f883a 	mov	r7,zero
   42ba0:	b80b883a 	mov	r5,r23
   42ba4:	db001315 	stw	r12,76(sp)
   42ba8:	da001215 	stw	r8,72(sp)
   42bac:	d8c00915 	stw	r3,36(sp)
   42bb0:	db400815 	stw	r13,32(sp)
   42bb4:	004c19c0 	call	4c19c <__eqdf2>
   42bb8:	db400817 	ldw	r13,32(sp)
   42bbc:	d8c00917 	ldw	r3,36(sp)
   42bc0:	da001217 	ldw	r8,72(sp)
   42bc4:	db001317 	ldw	r12,76(sp)
   42bc8:	10023326 	beq	r2,zero,43498 <___vfprintf_internal_r+0x22ec>
   42bcc:	d8801b17 	ldw	r2,108(sp)
   42bd0:	1300062e 	bgeu	r2,r12,42bec <___vfprintf_internal_r+0x1a40>
   42bd4:	01400c04 	movi	r5,48
   42bd8:	11000044 	addi	r4,r2,1
   42bdc:	d9001b15 	stw	r4,108(sp)
   42be0:	11400005 	stb	r5,0(r2)
   42be4:	d8801b17 	ldw	r2,108(sp)
   42be8:	133ffb36 	bltu	r2,r12,42bd8 <___vfprintf_internal_r+0x1a2c>
   42bec:	d9c01717 	ldw	r7,92(sp)
   42bf0:	1545c83a 	sub	r2,r2,r21
   42bf4:	b10011d8 	cmpnei	r4,r22,71
   42bf8:	d8800915 	stw	r2,36(sp)
   42bfc:	d9c00815 	stw	r7,32(sp)
   42c00:	2000f226 	beq	r4,zero,42fcc <___vfprintf_internal_r+0x1e20>
   42c04:	d8801017 	ldw	r2,64(sp)
   42c08:	10021d26 	beq	r2,zero,43480 <___vfprintf_internal_r+0x22d4>
   42c0c:	d9000817 	ldw	r4,32(sp)
   42c10:	6880004c 	andi	r2,r13,1
   42c14:	1204b03a 	or	r2,r2,r8
   42c18:	0102430e 	bge	zero,r4,43528 <___vfprintf_internal_r+0x237c>
   42c1c:	1002221e 	bne	r2,zero,434a8 <___vfprintf_internal_r+0x22fc>
   42c20:	d9c00817 	ldw	r7,32(sp)
   42c24:	3819883a 	mov	r12,r7
   42c28:	07001984 	movi	fp,102
   42c2c:	ddc00707 	ldb	r23,28(sp)
   42c30:	b8013526 	beq	r23,zero,43108 <___vfprintf_internal_r+0x1f5c>
   42c34:	00800b44 	movi	r2,45
   42c38:	d8801645 	stb	r2,89(sp)
   42c3c:	d8800f17 	ldw	r2,60(sp)
   42c40:	0011883a 	mov	r8,zero
   42c44:	d8800715 	stw	r2,28(sp)
   42c48:	003ae806 	br	417ec <___vfprintf_internal_r+0x640>
   42c4c:	d9400417 	ldw	r5,16(sp)
   42c50:	d9000517 	ldw	r4,20(sp)
   42c54:	d9801d04 	addi	r6,sp,116
   42c58:	db000f15 	stw	r12,60(sp)
   42c5c:	d8c00815 	stw	r3,32(sp)
   42c60:	00489a00 	call	489a0 <__sprint_r>
   42c64:	103a5c1e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42c68:	dd801f17 	ldw	r22,124(sp)
   42c6c:	db000f17 	ldw	r12,60(sp)
   42c70:	d8c00817 	ldw	r3,32(sp)
   42c74:	8825883a 	mov	r18,r17
   42c78:	003c3106 	br	41d40 <___vfprintf_internal_r+0xb94>
   42c7c:	d9400417 	ldw	r5,16(sp)
   42c80:	d9000517 	ldw	r4,20(sp)
   42c84:	d9801d04 	addi	r6,sp,116
   42c88:	db000f15 	stw	r12,60(sp)
   42c8c:	d8c00815 	stw	r3,32(sp)
   42c90:	00489a00 	call	489a0 <__sprint_r>
   42c94:	103a501e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42c98:	df001f17 	ldw	fp,124(sp)
   42c9c:	da001e17 	ldw	r8,120(sp)
   42ca0:	d8c00817 	ldw	r3,32(sp)
   42ca4:	db000f17 	ldw	r12,60(sp)
   42ca8:	882f883a 	mov	r23,r17
   42cac:	003d2b06 	br	4215c <___vfprintf_internal_r+0xfb0>
   42cb0:	d9400417 	ldw	r5,16(sp)
   42cb4:	d9000517 	ldw	r4,20(sp)
   42cb8:	d9801d04 	addi	r6,sp,116
   42cbc:	db001315 	stw	r12,76(sp)
   42cc0:	d9c01215 	stw	r7,72(sp)
   42cc4:	da001015 	stw	r8,64(sp)
   42cc8:	d8c00f15 	stw	r3,60(sp)
   42ccc:	00489a00 	call	489a0 <__sprint_r>
   42cd0:	103a411e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42cd4:	dd801f17 	ldw	r22,124(sp)
   42cd8:	db001317 	ldw	r12,76(sp)
   42cdc:	d9c01217 	ldw	r7,72(sp)
   42ce0:	da001017 	ldw	r8,64(sp)
   42ce4:	d8c00f17 	ldw	r3,60(sp)
   42ce8:	8825883a 	mov	r18,r17
   42cec:	003a1c06 	br	41560 <___vfprintf_internal_r+0x3b4>
   42cf0:	d8800d17 	ldw	r2,52(sp)
   42cf4:	d9400c17 	ldw	r5,48(sp)
   42cf8:	90800015 	stw	r2,0(r18)
   42cfc:	d8801e17 	ldw	r2,120(sp)
   42d00:	2909883a 	add	r4,r5,r4
   42d04:	91400115 	stw	r5,4(r18)
   42d08:	10800044 	addi	r2,r2,1
   42d0c:	d9001f15 	stw	r4,124(sp)
   42d10:	d8801e15 	stw	r2,120(sp)
   42d14:	11400208 	cmpgei	r5,r2,8
   42d18:	28006f1e 	bne	r5,zero,42ed8 <___vfprintf_internal_r+0x1d2c>
   42d1c:	94800204 	addi	r18,r18,8
   42d20:	b83f600e 	bge	r23,zero,42aa4 <___vfprintf_internal_r+0x18f8>
   42d24:	05800174 	movhi	r22,5
   42d28:	b97ffc08 	cmpgei	r5,r23,-16
   42d2c:	b5805404 	addi	r22,r22,336
   42d30:	05efc83a 	sub	r23,zero,r23
   42d34:	2801941e 	bne	r5,zero,43388 <___vfprintf_internal_r+0x21dc>
   42d38:	d8c00815 	stw	r3,32(sp)
   42d3c:	07000404 	movi	fp,16
   42d40:	9007883a 	mov	r3,r18
   42d44:	8025883a 	mov	r18,r16
   42d48:	b021883a 	mov	r16,r22
   42d4c:	982d883a 	mov	r22,r19
   42d50:	6027883a 	mov	r19,r12
   42d54:	00000406 	br	42d68 <___vfprintf_internal_r+0x1bbc>
   42d58:	18c00204 	addi	r3,r3,8
   42d5c:	bdfffc04 	addi	r23,r23,-16
   42d60:	b9400448 	cmpgei	r5,r23,17
   42d64:	28018226 	beq	r5,zero,43370 <___vfprintf_internal_r+0x21c4>
   42d68:	10800044 	addi	r2,r2,1
   42d6c:	21000404 	addi	r4,r4,16
   42d70:	1c000015 	stw	r16,0(r3)
   42d74:	1f000115 	stw	fp,4(r3)
   42d78:	d9001f15 	stw	r4,124(sp)
   42d7c:	d8801e15 	stw	r2,120(sp)
   42d80:	11400208 	cmpgei	r5,r2,8
   42d84:	283ff426 	beq	r5,zero,42d58 <___vfprintf_internal_r+0x1bac>
   42d88:	d9400417 	ldw	r5,16(sp)
   42d8c:	d9000517 	ldw	r4,20(sp)
   42d90:	d9801d04 	addi	r6,sp,116
   42d94:	00489a00 	call	489a0 <__sprint_r>
   42d98:	103a0f1e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42d9c:	d9001f17 	ldw	r4,124(sp)
   42da0:	d8801e17 	ldw	r2,120(sp)
   42da4:	8807883a 	mov	r3,r17
   42da8:	003fec06 	br	42d5c <___vfprintf_internal_r+0x1bb0>
   42dac:	b019883a 	mov	r12,r22
   42db0:	902d883a 	mov	r22,r18
   42db4:	8025883a 	mov	r18,r16
   42db8:	a021883a 	mov	r16,r20
   42dbc:	b829883a 	mov	r20,r23
   42dc0:	102f883a 	mov	r23,r2
   42dc4:	e005883a 	mov	r2,fp
   42dc8:	1839883a 	mov	fp,r3
   42dcc:	9807883a 	mov	r3,r19
   42dd0:	1027883a 	mov	r19,r2
   42dd4:	42000044 	addi	r8,r8,1
   42dd8:	e4b9883a 	add	fp,fp,r18
   42ddc:	bd800015 	stw	r22,0(r23)
   42de0:	003cd806 	br	42144 <___vfprintf_internal_r+0xf98>
   42de4:	a809883a 	mov	r4,r21
   42de8:	00411140 	call	41114 <strlen>
   42dec:	db400817 	ldw	r13,32(sp)
   42df0:	100f883a 	mov	r7,r2
   42df4:	1019883a 	mov	r12,r2
   42df8:	dd800715 	stw	r22,28(sp)
   42dfc:	0039b006 	br	414c0 <___vfprintf_internal_r+0x314>
   42e00:	05400174 	movhi	r21,5
   42e04:	ad404304 	addi	r21,r21,268
   42e08:	003af606 	br	419e4 <___vfprintf_internal_r+0x838>
   42e0c:	05800174 	movhi	r22,5
   42e10:	b5805404 	addi	r22,r22,336
   42e14:	003c7806 	br	41ff8 <___vfprintf_internal_r+0xe4c>
   42e18:	a019883a 	mov	r12,r20
   42e1c:	b029883a 	mov	r20,r22
   42e20:	902d883a 	mov	r22,r18
   42e24:	1825883a 	mov	r18,r3
   42e28:	d8c00f17 	ldw	r3,60(sp)
   42e2c:	b80b883a 	mov	r5,r23
   42e30:	802f883a 	mov	r23,r16
   42e34:	9821883a 	mov	r16,r19
   42e38:	2827883a 	mov	r19,r5
   42e3c:	10800044 	addi	r2,r2,1
   42e40:	b909883a 	add	r4,r23,r4
   42e44:	d8801e15 	stw	r2,120(sp)
   42e48:	95800015 	stw	r22,0(r18)
   42e4c:	95c00115 	stw	r23,4(r18)
   42e50:	d9001f15 	stw	r4,124(sp)
   42e54:	10800208 	cmpgei	r2,r2,8
   42e58:	10004a1e 	bne	r2,zero,42f84 <___vfprintf_internal_r+0x1dd8>
   42e5c:	94800204 	addi	r18,r18,8
   42e60:	202d883a 	mov	r22,r4
   42e64:	003d6406 	br	423f8 <___vfprintf_internal_r+0x124c>
   42e68:	00800b44 	movi	r2,45
   42e6c:	d8801645 	stb	r2,89(sp)
   42e70:	01000b44 	movi	r4,45
   42e74:	003ad706 	br	419d4 <___vfprintf_internal_r+0x828>
   42e78:	d9400417 	ldw	r5,16(sp)
   42e7c:	d9000517 	ldw	r4,20(sp)
   42e80:	d9801d04 	addi	r6,sp,116
   42e84:	db000f15 	stw	r12,60(sp)
   42e88:	d8c00815 	stw	r3,32(sp)
   42e8c:	00489a00 	call	489a0 <__sprint_r>
   42e90:	1039d11e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42e94:	ddc01717 	ldw	r23,92(sp)
   42e98:	d9001f17 	ldw	r4,124(sp)
   42e9c:	db000f17 	ldw	r12,60(sp)
   42ea0:	d8c00817 	ldw	r3,32(sp)
   42ea4:	8825883a 	mov	r18,r17
   42ea8:	003eed06 	br	42a60 <___vfprintf_internal_r+0x18b4>
   42eac:	15e0003c 	xorhi	r23,r2,32768
   42eb0:	00800b44 	movi	r2,45
   42eb4:	d8800705 	stb	r2,28(sp)
   42eb8:	003f1906 	br	42b20 <___vfprintf_internal_r+0x1974>
   42ebc:	01c00184 	movi	r7,6
   42ec0:	003e3f06 	br	427c0 <___vfprintf_internal_r+0x1614>
   42ec4:	d9400417 	ldw	r5,16(sp)
   42ec8:	d9000517 	ldw	r4,20(sp)
   42ecc:	d9801d04 	addi	r6,sp,116
   42ed0:	00489a00 	call	489a0 <__sprint_r>
   42ed4:	0039c006 	br	415d8 <___vfprintf_internal_r+0x42c>
   42ed8:	d9400417 	ldw	r5,16(sp)
   42edc:	d9000517 	ldw	r4,20(sp)
   42ee0:	d9801d04 	addi	r6,sp,116
   42ee4:	db000f15 	stw	r12,60(sp)
   42ee8:	d8c00815 	stw	r3,32(sp)
   42eec:	00489a00 	call	489a0 <__sprint_r>
   42ef0:	1039b91e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42ef4:	ddc01717 	ldw	r23,92(sp)
   42ef8:	d9001f17 	ldw	r4,124(sp)
   42efc:	d8801e17 	ldw	r2,120(sp)
   42f00:	db000f17 	ldw	r12,60(sp)
   42f04:	d8c00817 	ldw	r3,32(sp)
   42f08:	8825883a 	mov	r18,r17
   42f0c:	b83ee50e 	bge	r23,zero,42aa4 <___vfprintf_internal_r+0x18f8>
   42f10:	003f8406 	br	42d24 <___vfprintf_internal_r+0x1b78>
   42f14:	d8801b04 	addi	r2,sp,108
   42f18:	d8800315 	stw	r2,12(sp)
   42f1c:	d9400a17 	ldw	r5,40(sp)
   42f20:	d8801804 	addi	r2,sp,96
   42f24:	d9000517 	ldw	r4,20(sp)
   42f28:	d8c01315 	stw	r3,76(sp)
   42f2c:	d8800215 	stw	r2,8(sp)
   42f30:	40c00044 	addi	r3,r8,1
   42f34:	d8801704 	addi	r2,sp,92
   42f38:	d8c00015 	stw	r3,0(sp)
   42f3c:	d8800115 	stw	r2,4(sp)
   42f40:	01c00084 	movi	r7,2
   42f44:	b80d883a 	mov	r6,r23
   42f48:	db401215 	stw	r13,72(sp)
   42f4c:	da000815 	stw	r8,32(sp)
   42f50:	d8c00915 	stw	r3,36(sp)
   42f54:	004397c0 	call	4397c <_dtoa_r>
   42f58:	da000817 	ldw	r8,32(sp)
   42f5c:	db401217 	ldw	r13,72(sp)
   42f60:	d8c01317 	ldw	r3,76(sp)
   42f64:	102b883a 	mov	r21,r2
   42f68:	e08011d8 	cmpnei	r2,fp,71
   42f6c:	1001351e 	bne	r2,zero,43444 <___vfprintf_internal_r+0x2298>
   42f70:	6880004c 	andi	r2,r13,1
   42f74:	10001126 	beq	r2,zero,42fbc <___vfprintf_internal_r+0x1e10>
   42f78:	d8800917 	ldw	r2,36(sp)
   42f7c:	a899883a 	add	r12,r21,r2
   42f80:	003f0406 	br	42b94 <___vfprintf_internal_r+0x19e8>
   42f84:	d9400417 	ldw	r5,16(sp)
   42f88:	d9000517 	ldw	r4,20(sp)
   42f8c:	d9801d04 	addi	r6,sp,116
   42f90:	db001015 	stw	r12,64(sp)
   42f94:	d8c00f15 	stw	r3,60(sp)
   42f98:	00489a00 	call	489a0 <__sprint_r>
   42f9c:	10398e1e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   42fa0:	dd801f17 	ldw	r22,124(sp)
   42fa4:	db001017 	ldw	r12,64(sp)
   42fa8:	d8c00f17 	ldw	r3,60(sp)
   42fac:	8825883a 	mov	r18,r17
   42fb0:	003d1106 	br	423f8 <___vfprintf_internal_r+0x124c>
   42fb4:	da000915 	stw	r8,36(sp)
   42fb8:	003feb06 	br	42f68 <___vfprintf_internal_r+0x1dbc>
   42fbc:	d8801b17 	ldw	r2,108(sp)
   42fc0:	d9c01717 	ldw	r7,92(sp)
   42fc4:	1545c83a 	sub	r2,r2,r21
   42fc8:	d8800915 	stw	r2,36(sp)
   42fcc:	38bfff48 	cmpgei	r2,r7,-3
   42fd0:	d9c00815 	stw	r7,32(sp)
   42fd4:	1000b31e 	bne	r2,zero,432a4 <___vfprintf_internal_r+0x20f8>
   42fd8:	e73fff84 	addi	fp,fp,-2
   42fdc:	397fffc4 	addi	r5,r7,-1
   42fe0:	e005883a 	mov	r2,fp
   42fe4:	01000044 	movi	r4,1
   42fe8:	21efc83a 	sub	r23,r4,r7
   42fec:	01000b44 	movi	r4,45
   42ff0:	21003fcc 	andi	r4,r4,255
   42ff4:	2008923a 	slli	r4,r4,8
   42ff8:	10803fcc 	andi	r2,r2,255
   42ffc:	d9401715 	stw	r5,92(sp)
   43000:	1104b03a 	or	r2,r2,r4
   43004:	d880190d 	sth	r2,100(sp)
   43008:	b8800290 	cmplti	r2,r23,10
   4300c:	1000c71e 	bne	r2,zero,4332c <___vfprintf_internal_r+0x2180>
   43010:	dd801cc4 	addi	r22,sp,115
   43014:	9805883a 	mov	r2,r19
   43018:	db400815 	stw	r13,32(sp)
   4301c:	b027883a 	mov	r19,r22
   43020:	d8c01015 	stw	r3,64(sp)
   43024:	a02d883a 	mov	r22,r20
   43028:	dc001115 	stw	r16,68(sp)
   4302c:	9029883a 	mov	r20,r18
   43030:	b825883a 	mov	r18,r23
   43034:	102f883a 	mov	r23,r2
   43038:	9009883a 	mov	r4,r18
   4303c:	01400284 	movi	r5,10
   43040:	0040e980 	call	40e98 <__modsi3>
   43044:	10800c04 	addi	r2,r2,48
   43048:	9009883a 	mov	r4,r18
   4304c:	01400284 	movi	r5,10
   43050:	98bfffc5 	stb	r2,-1(r19)
   43054:	0040e180 	call	40e18 <__divsi3>
   43058:	91401908 	cmpgei	r5,r18,100
   4305c:	9821883a 	mov	r16,r19
   43060:	1025883a 	mov	r18,r2
   43064:	9cffffc4 	addi	r19,r19,-1
   43068:	283ff31e 	bne	r5,zero,43038 <___vfprintf_internal_r+0x1e8c>
   4306c:	b805883a 	mov	r2,r23
   43070:	902f883a 	mov	r23,r18
   43074:	8009883a 	mov	r4,r16
   43078:	a025883a 	mov	r18,r20
   4307c:	b029883a 	mov	r20,r22
   43080:	982d883a 	mov	r22,r19
   43084:	1027883a 	mov	r19,r2
   43088:	b8800c04 	addi	r2,r23,48
   4308c:	b0bfffc5 	stb	r2,-1(r22)
   43090:	217fff84 	addi	r5,r4,-2
   43094:	d8801cc4 	addi	r2,sp,115
   43098:	db400817 	ldw	r13,32(sp)
   4309c:	d8c01017 	ldw	r3,64(sp)
   430a0:	dc001117 	ldw	r16,68(sp)
   430a4:	28810e2e 	bgeu	r5,r2,434e0 <___vfprintf_internal_r+0x2334>
   430a8:	d8801d44 	addi	r2,sp,117
   430ac:	112dc83a 	sub	r22,r2,r4
   430b0:	b00d883a 	mov	r6,r22
   430b4:	d9001984 	addi	r4,sp,102
   430b8:	0046cac0 	call	46cac <memcpy>
   430bc:	d8801984 	addi	r2,sp,102
   430c0:	1585883a 	add	r2,r2,r22
   430c4:	d9001904 	addi	r4,sp,100
   430c8:	db400817 	ldw	r13,32(sp)
   430cc:	d8c01017 	ldw	r3,64(sp)
   430d0:	1105c83a 	sub	r2,r2,r4
   430d4:	d8801115 	stw	r2,68(sp)
   430d8:	d9000917 	ldw	r4,36(sp)
   430dc:	d9401117 	ldw	r5,68(sp)
   430e0:	20800088 	cmpgei	r2,r4,2
   430e4:	214f883a 	add	r7,r4,r5
   430e8:	10009726 	beq	r2,zero,43348 <___vfprintf_internal_r+0x219c>
   430ec:	d8800c17 	ldw	r2,48(sp)
   430f0:	388f883a 	add	r7,r7,r2
   430f4:	3819883a 	mov	r12,r7
   430f8:	3800010e 	bge	r7,zero,43100 <___vfprintf_internal_r+0x1f54>
   430fc:	0019883a 	mov	r12,zero
   43100:	d8000815 	stw	zero,32(sp)
   43104:	003ec906 	br	42c2c <___vfprintf_internal_r+0x1a80>
   43108:	d8800f17 	ldw	r2,60(sp)
   4310c:	d9001643 	ldbu	r4,89(sp)
   43110:	0011883a 	mov	r8,zero
   43114:	d8800715 	stw	r2,28(sp)
   43118:	0039b006 	br	417dc <___vfprintf_internal_r+0x630>
   4311c:	d8801b04 	addi	r2,sp,108
   43120:	d8800315 	stw	r2,12(sp)
   43124:	d9400a17 	ldw	r5,40(sp)
   43128:	d8801804 	addi	r2,sp,96
   4312c:	d9000517 	ldw	r4,20(sp)
   43130:	d8800215 	stw	r2,8(sp)
   43134:	d8801704 	addi	r2,sp,92
   43138:	da000015 	stw	r8,0(sp)
   4313c:	d8800115 	stw	r2,4(sp)
   43140:	01c000c4 	movi	r7,3
   43144:	b80d883a 	mov	r6,r23
   43148:	d8c01215 	stw	r3,72(sp)
   4314c:	db400915 	stw	r13,36(sp)
   43150:	da000815 	stw	r8,32(sp)
   43154:	004397c0 	call	4397c <_dtoa_r>
   43158:	102b883a 	mov	r21,r2
   4315c:	10800007 	ldb	r2,0(r2)
   43160:	da000817 	ldw	r8,32(sp)
   43164:	db400917 	ldw	r13,36(sp)
   43168:	10800c20 	cmpeqi	r2,r2,48
   4316c:	d8c01217 	ldw	r3,72(sp)
   43170:	10009c1e 	bne	r2,zero,433e4 <___vfprintf_internal_r+0x2238>
   43174:	d8801717 	ldw	r2,92(sp)
   43178:	d9000a17 	ldw	r4,40(sp)
   4317c:	1219883a 	add	r12,r2,r8
   43180:	000d883a 	mov	r6,zero
   43184:	000f883a 	mov	r7,zero
   43188:	b80b883a 	mov	r5,r23
   4318c:	d8c01315 	stw	r3,76(sp)
   43190:	db401215 	stw	r13,72(sp)
   43194:	da000915 	stw	r8,36(sp)
   43198:	db000815 	stw	r12,32(sp)
   4319c:	004c19c0 	call	4c19c <__eqdf2>
   431a0:	db000817 	ldw	r12,32(sp)
   431a4:	da000917 	ldw	r8,36(sp)
   431a8:	db401217 	ldw	r13,72(sp)
   431ac:	d8c01317 	ldw	r3,76(sp)
   431b0:	10008a1e 	bne	r2,zero,433dc <___vfprintf_internal_r+0x2230>
   431b4:	d8801717 	ldw	r2,92(sp)
   431b8:	db000915 	stw	r12,36(sp)
   431bc:	d8800815 	stw	r2,32(sp)
   431c0:	003e9206 	br	42c0c <___vfprintf_internal_r+0x1a60>
   431c4:	d9400417 	ldw	r5,16(sp)
   431c8:	d9000517 	ldw	r4,20(sp)
   431cc:	d9801d04 	addi	r6,sp,116
   431d0:	db001015 	stw	r12,64(sp)
   431d4:	d8c00f15 	stw	r3,60(sp)
   431d8:	00489a00 	call	489a0 <__sprint_r>
   431dc:	1038fe1e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   431e0:	ddc01717 	ldw	r23,92(sp)
   431e4:	d9001f17 	ldw	r4,124(sp)
   431e8:	db001017 	ldw	r12,64(sp)
   431ec:	d8c00f17 	ldw	r3,60(sp)
   431f0:	8825883a 	mov	r18,r17
   431f4:	003c8f06 	br	42434 <___vfprintf_internal_r+0x1288>
   431f8:	b80b883a 	mov	r5,r23
   431fc:	a019883a 	mov	r12,r20
   43200:	802f883a 	mov	r23,r16
   43204:	b029883a 	mov	r20,r22
   43208:	9821883a 	mov	r16,r19
   4320c:	902d883a 	mov	r22,r18
   43210:	2827883a 	mov	r19,r5
   43214:	1825883a 	mov	r18,r3
   43218:	d8c00817 	ldw	r3,32(sp)
   4321c:	003c2706 	br	422bc <___vfprintf_internal_r+0x1110>
   43220:	403e3a1e 	bne	r8,zero,42b0c <___vfprintf_internal_r+0x1960>
   43224:	02000044 	movi	r8,1
   43228:	003e3806 	br	42b0c <___vfprintf_internal_r+0x1960>
   4322c:	d9400417 	ldw	r5,16(sp)
   43230:	d9000517 	ldw	r4,20(sp)
   43234:	d9801d04 	addi	r6,sp,116
   43238:	db001015 	stw	r12,64(sp)
   4323c:	d8c00f15 	stw	r3,60(sp)
   43240:	00489a00 	call	489a0 <__sprint_r>
   43244:	1038e41e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   43248:	dd801f17 	ldw	r22,124(sp)
   4324c:	db001017 	ldw	r12,64(sp)
   43250:	d8c00f17 	ldw	r3,60(sp)
   43254:	8825883a 	mov	r18,r17
   43258:	b83c640e 	bge	r23,zero,423ec <___vfprintf_internal_r+0x1240>
   4325c:	003d3306 	br	4272c <___vfprintf_internal_r+0x1580>
   43260:	02000184 	movi	r8,6
   43264:	003e2906 	br	42b0c <___vfprintf_internal_r+0x1960>
   43268:	d9400417 	ldw	r5,16(sp)
   4326c:	d9000517 	ldw	r4,20(sp)
   43270:	d9801d04 	addi	r6,sp,116
   43274:	db000f15 	stw	r12,60(sp)
   43278:	d8c00815 	stw	r3,32(sp)
   4327c:	00489a00 	call	489a0 <__sprint_r>
   43280:	1038d51e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   43284:	ddc01717 	ldw	r23,92(sp)
   43288:	d8800917 	ldw	r2,36(sp)
   4328c:	d9001f17 	ldw	r4,124(sp)
   43290:	db000f17 	ldw	r12,60(sp)
   43294:	d8c00817 	ldw	r3,32(sp)
   43298:	8825883a 	mov	r18,r17
   4329c:	15efc83a 	sub	r23,r2,r23
   432a0:	003c7706 	br	42480 <___vfprintf_internal_r+0x12d4>
   432a4:	41c0060e 	bge	r8,r7,432c0 <___vfprintf_internal_r+0x2114>
   432a8:	e73fff84 	addi	fp,fp,-2
   432ac:	3dffffc4 	addi	r23,r7,-1
   432b0:	e005883a 	mov	r2,fp
   432b4:	b80b883a 	mov	r5,r23
   432b8:	01000ac4 	movi	r4,43
   432bc:	003f4c06 	br	42ff0 <___vfprintf_internal_r+0x1e44>
   432c0:	d9000917 	ldw	r4,36(sp)
   432c4:	39000916 	blt	r7,r4,432ec <___vfprintf_internal_r+0x2140>
   432c8:	6b40004c 	andi	r13,r13,1
   432cc:	68000f26 	beq	r13,zero,4330c <___vfprintf_internal_r+0x2160>
   432d0:	d8800817 	ldw	r2,32(sp)
   432d4:	d9000c17 	ldw	r4,48(sp)
   432d8:	110f883a 	add	r7,r2,r4
   432dc:	3819883a 	mov	r12,r7
   432e0:	38000c16 	blt	r7,zero,43314 <___vfprintf_internal_r+0x2168>
   432e4:	070019c4 	movi	fp,103
   432e8:	003e5006 	br	42c2c <___vfprintf_internal_r+0x1a80>
   432ec:	d8800917 	ldw	r2,36(sp)
   432f0:	d9000c17 	ldw	r4,48(sp)
   432f4:	110f883a 	add	r7,r2,r4
   432f8:	d8800817 	ldw	r2,32(sp)
   432fc:	00800316 	blt	zero,r2,4330c <___vfprintf_internal_r+0x2160>
   43300:	d8800817 	ldw	r2,32(sp)
   43304:	388fc83a 	sub	r7,r7,r2
   43308:	39c00044 	addi	r7,r7,1
   4330c:	3819883a 	mov	r12,r7
   43310:	383ff40e 	bge	r7,zero,432e4 <___vfprintf_internal_r+0x2138>
   43314:	0019883a 	mov	r12,zero
   43318:	003ff206 	br	432e4 <___vfprintf_internal_r+0x2138>
   4331c:	4019883a 	mov	r12,r8
   43320:	dd800715 	stw	r22,28(sp)
   43324:	400f883a 	mov	r7,r8
   43328:	00386506 	br	414c0 <___vfprintf_internal_r+0x314>
   4332c:	b8800c04 	addi	r2,r23,48
   43330:	01000c04 	movi	r4,48
   43334:	d88019c5 	stb	r2,103(sp)
   43338:	00800104 	movi	r2,4
   4333c:	d9001985 	stb	r4,102(sp)
   43340:	d8801115 	stw	r2,68(sp)
   43344:	003f6406 	br	430d8 <___vfprintf_internal_r+0x1f2c>
   43348:	6880004c 	andi	r2,r13,1
   4334c:	d8800815 	stw	r2,32(sp)
   43350:	103f661e 	bne	r2,zero,430ec <___vfprintf_internal_r+0x1f40>
   43354:	3819883a 	mov	r12,r7
   43358:	383e340e 	bge	r7,zero,42c2c <___vfprintf_internal_r+0x1a80>
   4335c:	0019883a 	mov	r12,zero
   43360:	003e3206 	br	42c2c <___vfprintf_internal_r+0x1a80>
   43364:	00bfffc4 	movi	r2,-1
   43368:	d8800615 	stw	r2,24(sp)
   4336c:	00389e06 	br	415e8 <___vfprintf_internal_r+0x43c>
   43370:	9819883a 	mov	r12,r19
   43374:	b027883a 	mov	r19,r22
   43378:	802d883a 	mov	r22,r16
   4337c:	9021883a 	mov	r16,r18
   43380:	1825883a 	mov	r18,r3
   43384:	d8c00817 	ldw	r3,32(sp)
   43388:	10800044 	addi	r2,r2,1
   4338c:	25c9883a 	add	r4,r4,r23
   43390:	95800015 	stw	r22,0(r18)
   43394:	95c00115 	stw	r23,4(r18)
   43398:	d9001f15 	stw	r4,124(sp)
   4339c:	d8801e15 	stw	r2,120(sp)
   433a0:	11400208 	cmpgei	r5,r2,8
   433a4:	283dbe26 	beq	r5,zero,42aa0 <___vfprintf_internal_r+0x18f4>
   433a8:	d9400417 	ldw	r5,16(sp)
   433ac:	d9000517 	ldw	r4,20(sp)
   433b0:	d9801d04 	addi	r6,sp,116
   433b4:	db000f15 	stw	r12,60(sp)
   433b8:	d8c00815 	stw	r3,32(sp)
   433bc:	00489a00 	call	489a0 <__sprint_r>
   433c0:	1038851e 	bne	r2,zero,415d8 <___vfprintf_internal_r+0x42c>
   433c4:	d9001f17 	ldw	r4,124(sp)
   433c8:	d8801e17 	ldw	r2,120(sp)
   433cc:	db000f17 	ldw	r12,60(sp)
   433d0:	d8c00817 	ldw	r3,32(sp)
   433d4:	8825883a 	mov	r18,r17
   433d8:	003db206 	br	42aa4 <___vfprintf_internal_r+0x18f8>
   433dc:	ab19883a 	add	r12,r21,r12
   433e0:	003dfa06 	br	42bcc <___vfprintf_internal_r+0x1a20>
   433e4:	d9000a17 	ldw	r4,40(sp)
   433e8:	000d883a 	mov	r6,zero
   433ec:	000f883a 	mov	r7,zero
   433f0:	b80b883a 	mov	r5,r23
   433f4:	da001215 	stw	r8,72(sp)
   433f8:	d8c00915 	stw	r3,36(sp)
   433fc:	db400815 	stw	r13,32(sp)
   43400:	004c19c0 	call	4c19c <__eqdf2>
   43404:	db400817 	ldw	r13,32(sp)
   43408:	d8c00917 	ldw	r3,36(sp)
   4340c:	da001217 	ldw	r8,72(sp)
   43410:	103f5826 	beq	r2,zero,43174 <___vfprintf_internal_r+0x1fc8>
   43414:	00800044 	movi	r2,1
   43418:	1205c83a 	sub	r2,r2,r8
   4341c:	d8801715 	stw	r2,92(sp)
   43420:	003f5506 	br	43178 <___vfprintf_internal_r+0x1fcc>
   43424:	d8800b17 	ldw	r2,44(sp)
   43428:	10002916 	blt	r2,zero,434d0 <___vfprintf_internal_r+0x2324>
   4342c:	d9001643 	ldbu	r4,89(sp)
   43430:	e0801210 	cmplti	r2,fp,72
   43434:	1000231e 	bne	r2,zero,434c4 <___vfprintf_internal_r+0x2318>
   43438:	05400174 	movhi	r21,5
   4343c:	ad404604 	addi	r21,r21,280
   43440:	00396806 	br	419e4 <___vfprintf_internal_r+0x838>
   43444:	d9000a17 	ldw	r4,40(sp)
   43448:	000d883a 	mov	r6,zero
   4344c:	000f883a 	mov	r7,zero
   43450:	b80b883a 	mov	r5,r23
   43454:	da001315 	stw	r8,76(sp)
   43458:	d8c01215 	stw	r3,72(sp)
   4345c:	db400815 	stw	r13,32(sp)
   43460:	004c19c0 	call	4c19c <__eqdf2>
   43464:	db400817 	ldw	r13,32(sp)
   43468:	d8c01217 	ldw	r3,72(sp)
   4346c:	da001317 	ldw	r8,76(sp)
   43470:	10002a1e 	bne	r2,zero,4351c <___vfprintf_internal_r+0x2370>
   43474:	b08011e0 	cmpeqi	r2,r22,71
   43478:	d9c01717 	ldw	r7,92(sp)
   4347c:	103ed31e 	bne	r2,zero,42fcc <___vfprintf_internal_r+0x1e20>
   43480:	397fffc4 	addi	r5,r7,-1
   43484:	e005883a 	mov	r2,fp
   43488:	283ed616 	blt	r5,zero,42fe4 <___vfprintf_internal_r+0x1e38>
   4348c:	282f883a 	mov	r23,r5
   43490:	01000ac4 	movi	r4,43
   43494:	003ed606 	br	42ff0 <___vfprintf_internal_r+0x1e44>
   43498:	6545c83a 	sub	r2,r12,r21
   4349c:	d9c01717 	ldw	r7,92(sp)
   434a0:	d8800915 	stw	r2,36(sp)
   434a4:	003ec906 	br	42fcc <___vfprintf_internal_r+0x1e20>
   434a8:	d8800c17 	ldw	r2,48(sp)
   434ac:	208f883a 	add	r7,r4,r2
   434b0:	3a0f883a 	add	r7,r7,r8
   434b4:	3819883a 	mov	r12,r7
   434b8:	383ddb0e 	bge	r7,zero,42c28 <___vfprintf_internal_r+0x1a7c>
   434bc:	0019883a 	mov	r12,zero
   434c0:	003dd906 	br	42c28 <___vfprintf_internal_r+0x1a7c>
   434c4:	05400174 	movhi	r21,5
   434c8:	ad404504 	addi	r21,r21,276
   434cc:	00394506 	br	419e4 <___vfprintf_internal_r+0x838>
   434d0:	00800b44 	movi	r2,45
   434d4:	d8801645 	stb	r2,89(sp)
   434d8:	01000b44 	movi	r4,45
   434dc:	003fd406 	br	43430 <___vfprintf_internal_r+0x2284>
   434e0:	00800084 	movi	r2,2
   434e4:	d8801115 	stw	r2,68(sp)
   434e8:	003efb06 	br	430d8 <___vfprintf_internal_r+0x1f2c>
   434ec:	d8800717 	ldw	r2,28(sp)
   434f0:	12000017 	ldw	r8,0(r2)
   434f4:	10800104 	addi	r2,r2,4
   434f8:	4000010e 	bge	r8,zero,43500 <___vfprintf_internal_r+0x2354>
   434fc:	023fffc4 	movi	r8,-1
   43500:	a7000043 	ldbu	fp,1(r20)
   43504:	d8800715 	stw	r2,28(sp)
   43508:	1829883a 	mov	r20,r3
   4350c:	e2c03fcc 	andi	r11,fp,255
   43510:	5ac0201c 	xori	r11,r11,128
   43514:	5affe004 	addi	r11,r11,-128
   43518:	00377406 	br	412ec <___vfprintf_internal_r+0x140>
   4351c:	d8800917 	ldw	r2,36(sp)
   43520:	a899883a 	add	r12,r21,r2
   43524:	003da906 	br	42bcc <___vfprintf_internal_r+0x1a20>
   43528:	1000041e 	bne	r2,zero,4353c <___vfprintf_internal_r+0x2390>
   4352c:	03000044 	movi	r12,1
   43530:	07001984 	movi	fp,102
   43534:	01c00044 	movi	r7,1
   43538:	003dbc06 	br	42c2c <___vfprintf_internal_r+0x1a80>
   4353c:	d8800c17 	ldw	r2,48(sp)
   43540:	11c00044 	addi	r7,r2,1
   43544:	3a0f883a 	add	r7,r7,r8
   43548:	3819883a 	mov	r12,r7
   4354c:	383db60e 	bge	r7,zero,42c28 <___vfprintf_internal_r+0x1a7c>
   43550:	003fda06 	br	434bc <___vfprintf_internal_r+0x2310>

00043554 <__vfprintf_internal>:
   43554:	00c00174 	movhi	r3,5
   43558:	2005883a 	mov	r2,r4
   4355c:	19087d17 	ldw	r4,8692(r3)
   43560:	300f883a 	mov	r7,r6
   43564:	280d883a 	mov	r6,r5
   43568:	100b883a 	mov	r5,r2
   4356c:	00411ac1 	jmpi	411ac <___vfprintf_internal_r>

00043570 <__sbprintf>:
   43570:	28c0038b 	ldhu	r3,14(r5)
   43574:	2880030b 	ldhu	r2,12(r5)
   43578:	2ac01917 	ldw	r11,100(r5)
   4357c:	1806943a 	slli	r3,r3,16
   43580:	2a800717 	ldw	r10,28(r5)
   43584:	2a400917 	ldw	r9,36(r5)
   43588:	defee204 	addi	sp,sp,-1144
   4358c:	10bfff4c 	andi	r2,r2,65533
   43590:	10c4b03a 	or	r2,r2,r3
   43594:	da001a04 	addi	r8,sp,104
   43598:	00c10004 	movi	r3,1024
   4359c:	dc011a15 	stw	r16,1128(sp)
   435a0:	2821883a 	mov	r16,r5
   435a4:	d80b883a 	mov	r5,sp
   435a8:	dc811c15 	stw	r18,1136(sp)
   435ac:	dc411b15 	stw	r17,1132(sp)
   435b0:	dfc11d15 	stw	ra,1140(sp)
   435b4:	2025883a 	mov	r18,r4
   435b8:	dac01915 	stw	r11,100(sp)
   435bc:	d8800315 	stw	r2,12(sp)
   435c0:	da800715 	stw	r10,28(sp)
   435c4:	da400915 	stw	r9,36(sp)
   435c8:	da000015 	stw	r8,0(sp)
   435cc:	da000415 	stw	r8,16(sp)
   435d0:	d8c00215 	stw	r3,8(sp)
   435d4:	d8c00515 	stw	r3,20(sp)
   435d8:	d8000615 	stw	zero,24(sp)
   435dc:	00411ac0 	call	411ac <___vfprintf_internal_r>
   435e0:	1023883a 	mov	r17,r2
   435e4:	10000d0e 	bge	r2,zero,4361c <__sbprintf+0xac>
   435e8:	d880030b 	ldhu	r2,12(sp)
   435ec:	1080100c 	andi	r2,r2,64
   435f0:	10000326 	beq	r2,zero,43600 <__sbprintf+0x90>
   435f4:	8080030b 	ldhu	r2,12(r16)
   435f8:	10801014 	ori	r2,r2,64
   435fc:	8080030d 	sth	r2,12(r16)
   43600:	8805883a 	mov	r2,r17
   43604:	dfc11d17 	ldw	ra,1140(sp)
   43608:	dc811c17 	ldw	r18,1136(sp)
   4360c:	dc411b17 	ldw	r17,1132(sp)
   43610:	dc011a17 	ldw	r16,1128(sp)
   43614:	dec11e04 	addi	sp,sp,1144
   43618:	f800283a 	ret
   4361c:	d80b883a 	mov	r5,sp
   43620:	9009883a 	mov	r4,r18
   43624:	004536c0 	call	4536c <_fflush_r>
   43628:	103fef26 	beq	r2,zero,435e8 <__sbprintf+0x78>
   4362c:	047fffc4 	movi	r17,-1
   43630:	003fed06 	br	435e8 <__sbprintf+0x78>

00043634 <__swsetup_r>:
   43634:	00800174 	movhi	r2,5
   43638:	10887d17 	ldw	r2,8692(r2)
   4363c:	defffd04 	addi	sp,sp,-12
   43640:	dc400115 	stw	r17,4(sp)
   43644:	dc000015 	stw	r16,0(sp)
   43648:	dfc00215 	stw	ra,8(sp)
   4364c:	2023883a 	mov	r17,r4
   43650:	2821883a 	mov	r16,r5
   43654:	10000226 	beq	r2,zero,43660 <__swsetup_r+0x2c>
   43658:	10c00e17 	ldw	r3,56(r2)
   4365c:	18001d26 	beq	r3,zero,436d4 <__swsetup_r+0xa0>
   43660:	80c0030b 	ldhu	r3,12(r16)
   43664:	1880020c 	andi	r2,r3,8
   43668:	10001f26 	beq	r2,zero,436e8 <__swsetup_r+0xb4>
   4366c:	80800417 	ldw	r2,16(r16)
   43670:	10002626 	beq	r2,zero,4370c <__swsetup_r+0xd8>
   43674:	1900004c 	andi	r4,r3,1
   43678:	20000b1e 	bne	r4,zero,436a8 <__swsetup_r+0x74>
   4367c:	1900008c 	andi	r4,r3,2
   43680:	20002b1e 	bne	r4,zero,43730 <__swsetup_r+0xfc>
   43684:	81000517 	ldw	r4,20(r16)
   43688:	81000215 	stw	r4,8(r16)
   4368c:	10000b26 	beq	r2,zero,436bc <__swsetup_r+0x88>
   43690:	0005883a 	mov	r2,zero
   43694:	dfc00217 	ldw	ra,8(sp)
   43698:	dc400117 	ldw	r17,4(sp)
   4369c:	dc000017 	ldw	r16,0(sp)
   436a0:	dec00304 	addi	sp,sp,12
   436a4:	f800283a 	ret
   436a8:	81000517 	ldw	r4,20(r16)
   436ac:	80000215 	stw	zero,8(r16)
   436b0:	0109c83a 	sub	r4,zero,r4
   436b4:	81000615 	stw	r4,24(r16)
   436b8:	103ff51e 	bne	r2,zero,43690 <__swsetup_r+0x5c>
   436bc:	1900200c 	andi	r4,r3,128
   436c0:	203ff426 	beq	r4,zero,43694 <__swsetup_r+0x60>
   436c4:	18c01014 	ori	r3,r3,64
   436c8:	80c0030d 	sth	r3,12(r16)
   436cc:	00bfffc4 	movi	r2,-1
   436d0:	003ff006 	br	43694 <__swsetup_r+0x60>
   436d4:	1009883a 	mov	r4,r2
   436d8:	00457840 	call	45784 <__sinit>
   436dc:	80c0030b 	ldhu	r3,12(r16)
   436e0:	1880020c 	andi	r2,r3,8
   436e4:	103fe11e 	bne	r2,zero,4366c <__swsetup_r+0x38>
   436e8:	1880040c 	andi	r2,r3,16
   436ec:	10002026 	beq	r2,zero,43770 <__swsetup_r+0x13c>
   436f0:	1880010c 	andi	r2,r3,4
   436f4:	1000101e 	bne	r2,zero,43738 <__swsetup_r+0x104>
   436f8:	80800417 	ldw	r2,16(r16)
   436fc:	19000214 	ori	r4,r3,8
   43700:	8100030d 	sth	r4,12(r16)
   43704:	2007883a 	mov	r3,r4
   43708:	103fda1e 	bne	r2,zero,43674 <__swsetup_r+0x40>
   4370c:	1900a00c 	andi	r4,r3,640
   43710:	21008020 	cmpeqi	r4,r4,512
   43714:	203fd71e 	bne	r4,zero,43674 <__swsetup_r+0x40>
   43718:	800b883a 	mov	r5,r16
   4371c:	8809883a 	mov	r4,r17
   43720:	00461fc0 	call	461fc <__smakebuf_r>
   43724:	80c0030b 	ldhu	r3,12(r16)
   43728:	80800417 	ldw	r2,16(r16)
   4372c:	003fd106 	br	43674 <__swsetup_r+0x40>
   43730:	0009883a 	mov	r4,zero
   43734:	003fd406 	br	43688 <__swsetup_r+0x54>
   43738:	81400c17 	ldw	r5,48(r16)
   4373c:	28000626 	beq	r5,zero,43758 <__swsetup_r+0x124>
   43740:	80801004 	addi	r2,r16,64
   43744:	28800326 	beq	r5,r2,43754 <__swsetup_r+0x120>
   43748:	8809883a 	mov	r4,r17
   4374c:	00458f00 	call	458f0 <_free_r>
   43750:	80c0030b 	ldhu	r3,12(r16)
   43754:	80000c15 	stw	zero,48(r16)
   43758:	80800417 	ldw	r2,16(r16)
   4375c:	013ff6c4 	movi	r4,-37
   43760:	20c6703a 	and	r3,r4,r3
   43764:	80000115 	stw	zero,4(r16)
   43768:	80800015 	stw	r2,0(r16)
   4376c:	003fe306 	br	436fc <__swsetup_r+0xc8>
   43770:	00800244 	movi	r2,9
   43774:	88800015 	stw	r2,0(r17)
   43778:	18c01014 	ori	r3,r3,64
   4377c:	003fd206 	br	436c8 <__swsetup_r+0x94>

00043780 <quorem>:
   43780:	defff504 	addi	sp,sp,-44
   43784:	dc800315 	stw	r18,12(sp)
   43788:	20800417 	ldw	r2,16(r4)
   4378c:	2c800417 	ldw	r18,16(r5)
   43790:	dfc00a15 	stw	ra,40(sp)
   43794:	df000915 	stw	fp,36(sp)
   43798:	ddc00815 	stw	r23,32(sp)
   4379c:	dd800715 	stw	r22,28(sp)
   437a0:	dd400615 	stw	r21,24(sp)
   437a4:	dd000515 	stw	r20,20(sp)
   437a8:	dcc00415 	stw	r19,16(sp)
   437ac:	dc400215 	stw	r17,8(sp)
   437b0:	dc000115 	stw	r16,4(sp)
   437b4:	14806f16 	blt	r2,r18,43974 <quorem+0x1f4>
   437b8:	94bfffc4 	addi	r18,r18,-1
   437bc:	902c90ba 	slli	r22,r18,2
   437c0:	2c000504 	addi	r16,r5,20
   437c4:	25000504 	addi	r20,r4,20
   437c8:	85a7883a 	add	r19,r16,r22
   437cc:	9f000017 	ldw	fp,0(r19)
   437d0:	a5ad883a 	add	r22,r20,r22
   437d4:	202b883a 	mov	r21,r4
   437d8:	b1000017 	ldw	r4,0(r22)
   437dc:	e7000044 	addi	fp,fp,1
   437e0:	282f883a 	mov	r23,r5
   437e4:	e00b883a 	mov	r5,fp
   437e8:	d9000015 	stw	r4,0(sp)
   437ec:	0040f0c0 	call	40f0c <__udivsi3>
   437f0:	d9000017 	ldw	r4,0(sp)
   437f4:	1023883a 	mov	r17,r2
   437f8:	27002a36 	bltu	r4,fp,438a4 <quorem+0x124>
   437fc:	800f883a 	mov	r7,r16
   43800:	a00d883a 	mov	r6,r20
   43804:	0013883a 	mov	r9,zero
   43808:	0009883a 	mov	r4,zero
   4380c:	38800017 	ldw	r2,0(r7)
   43810:	32000017 	ldw	r8,0(r6)
   43814:	31800104 	addi	r6,r6,4
   43818:	117fffcc 	andi	r5,r2,65535
   4381c:	2c4b383a 	mul	r5,r5,r17
   43820:	1004d43a 	srli	r2,r2,16
   43824:	40ffffcc 	andi	r3,r8,65535
   43828:	2a4b883a 	add	r5,r5,r9
   4382c:	2a7fffcc 	andi	r9,r5,65535
   43830:	1a47c83a 	sub	r3,r3,r9
   43834:	280ad43a 	srli	r5,r5,16
   43838:	1445383a 	mul	r2,r2,r17
   4383c:	1907883a 	add	r3,r3,r4
   43840:	1809d43a 	srai	r4,r3,16
   43844:	1145883a 	add	r2,r2,r5
   43848:	4010d43a 	srli	r8,r8,16
   4384c:	117fffcc 	andi	r5,r2,65535
   43850:	2149c83a 	sub	r4,r4,r5
   43854:	2209883a 	add	r4,r4,r8
   43858:	200a943a 	slli	r5,r4,16
   4385c:	18ffffcc 	andi	r3,r3,65535
   43860:	39c00104 	addi	r7,r7,4
   43864:	1946b03a 	or	r3,r3,r5
   43868:	30ffff15 	stw	r3,-4(r6)
   4386c:	1012d43a 	srli	r9,r2,16
   43870:	2009d43a 	srai	r4,r4,16
   43874:	99ffe52e 	bgeu	r19,r7,4380c <quorem+0x8c>
   43878:	b0800017 	ldw	r2,0(r22)
   4387c:	1000091e 	bne	r2,zero,438a4 <quorem+0x124>
   43880:	b5bfff04 	addi	r22,r22,-4
   43884:	a5800336 	bltu	r20,r22,43894 <quorem+0x114>
   43888:	00000506 	br	438a0 <quorem+0x120>
   4388c:	94bfffc4 	addi	r18,r18,-1
   43890:	a580032e 	bgeu	r20,r22,438a0 <quorem+0x120>
   43894:	b0800017 	ldw	r2,0(r22)
   43898:	b5bfff04 	addi	r22,r22,-4
   4389c:	103ffb26 	beq	r2,zero,4388c <quorem+0x10c>
   438a0:	ac800415 	stw	r18,16(r21)
   438a4:	b80b883a 	mov	r5,r23
   438a8:	a809883a 	mov	r4,r21
   438ac:	00479ec0 	call	479ec <__mcmp>
   438b0:	10002316 	blt	r2,zero,43940 <quorem+0x1c0>
   438b4:	a00d883a 	mov	r6,r20
   438b8:	000b883a 	mov	r5,zero
   438bc:	30800017 	ldw	r2,0(r6)
   438c0:	81000017 	ldw	r4,0(r16)
   438c4:	31800104 	addi	r6,r6,4
   438c8:	10ffffcc 	andi	r3,r2,65535
   438cc:	21ffffcc 	andi	r7,r4,65535
   438d0:	19c7c83a 	sub	r3,r3,r7
   438d4:	1947883a 	add	r3,r3,r5
   438d8:	180bd43a 	srai	r5,r3,16
   438dc:	2008d43a 	srli	r4,r4,16
   438e0:	1004d43a 	srli	r2,r2,16
   438e4:	18ffffcc 	andi	r3,r3,65535
   438e8:	290bc83a 	sub	r5,r5,r4
   438ec:	288b883a 	add	r5,r5,r2
   438f0:	2804943a 	slli	r2,r5,16
   438f4:	84000104 	addi	r16,r16,4
   438f8:	280bd43a 	srai	r5,r5,16
   438fc:	1886b03a 	or	r3,r3,r2
   43900:	30ffff15 	stw	r3,-4(r6)
   43904:	9c3fed2e 	bgeu	r19,r16,438bc <quorem+0x13c>
   43908:	900490ba 	slli	r2,r18,2
   4390c:	a085883a 	add	r2,r20,r2
   43910:	10c00017 	ldw	r3,0(r2)
   43914:	1800091e 	bne	r3,zero,4393c <quorem+0x1bc>
   43918:	10bfff04 	addi	r2,r2,-4
   4391c:	a0800336 	bltu	r20,r2,4392c <quorem+0x1ac>
   43920:	00000506 	br	43938 <quorem+0x1b8>
   43924:	94bfffc4 	addi	r18,r18,-1
   43928:	a080032e 	bgeu	r20,r2,43938 <quorem+0x1b8>
   4392c:	10c00017 	ldw	r3,0(r2)
   43930:	10bfff04 	addi	r2,r2,-4
   43934:	183ffb26 	beq	r3,zero,43924 <quorem+0x1a4>
   43938:	ac800415 	stw	r18,16(r21)
   4393c:	8c400044 	addi	r17,r17,1
   43940:	8805883a 	mov	r2,r17
   43944:	dfc00a17 	ldw	ra,40(sp)
   43948:	df000917 	ldw	fp,36(sp)
   4394c:	ddc00817 	ldw	r23,32(sp)
   43950:	dd800717 	ldw	r22,28(sp)
   43954:	dd400617 	ldw	r21,24(sp)
   43958:	dd000517 	ldw	r20,20(sp)
   4395c:	dcc00417 	ldw	r19,16(sp)
   43960:	dc800317 	ldw	r18,12(sp)
   43964:	dc400217 	ldw	r17,8(sp)
   43968:	dc000117 	ldw	r16,4(sp)
   4396c:	dec00b04 	addi	sp,sp,44
   43970:	f800283a 	ret
   43974:	0005883a 	mov	r2,zero
   43978:	003ff206 	br	43944 <quorem+0x1c4>

0004397c <_dtoa_r>:
   4397c:	20801017 	ldw	r2,64(r4)
   43980:	deffe104 	addi	sp,sp,-124
   43984:	dd401a15 	stw	r21,104(sp)
   43988:	dc801715 	stw	r18,92(sp)
   4398c:	dc401615 	stw	r17,88(sp)
   43990:	dc001515 	stw	r16,84(sp)
   43994:	dfc01e15 	stw	ra,120(sp)
   43998:	df001d15 	stw	fp,116(sp)
   4399c:	ddc01c15 	stw	r23,112(sp)
   439a0:	dd801b15 	stw	r22,108(sp)
   439a4:	dd001915 	stw	r20,100(sp)
   439a8:	dcc01815 	stw	r19,96(sp)
   439ac:	d9400215 	stw	r5,8(sp)
   439b0:	d9c00115 	stw	r7,4(sp)
   439b4:	dc402117 	ldw	r17,132(sp)
   439b8:	2021883a 	mov	r16,r4
   439bc:	3025883a 	mov	r18,r6
   439c0:	302b883a 	mov	r21,r6
   439c4:	10000826 	beq	r2,zero,439e8 <_dtoa_r+0x6c>
   439c8:	21801117 	ldw	r6,68(r4)
   439cc:	00c00044 	movi	r3,1
   439d0:	100b883a 	mov	r5,r2
   439d4:	1986983a 	sll	r3,r3,r6
   439d8:	11800115 	stw	r6,4(r2)
   439dc:	10c00215 	stw	r3,8(r2)
   439e0:	00470700 	call	47070 <_Bfree>
   439e4:	80001015 	stw	zero,64(r16)
   439e8:	90019316 	blt	r18,zero,44038 <_dtoa_r+0x6bc>
   439ec:	88000015 	stw	zero,0(r17)
   439f0:	909ffc2c 	andhi	r2,r18,32752
   439f4:	00dffc34 	movhi	r3,32752
   439f8:	10c19826 	beq	r2,r3,4405c <_dtoa_r+0x6e0>
   439fc:	d9000217 	ldw	r4,8(sp)
   43a00:	000d883a 	mov	r6,zero
   43a04:	000f883a 	mov	r7,zero
   43a08:	a80b883a 	mov	r5,r21
   43a0c:	004c19c0 	call	4c19c <__eqdf2>
   43a10:	1000181e 	bne	r2,zero,43a74 <_dtoa_r+0xf8>
   43a14:	d8c02017 	ldw	r3,128(sp)
   43a18:	00800044 	movi	r2,1
   43a1c:	18800015 	stw	r2,0(r3)
   43a20:	d8802217 	ldw	r2,136(sp)
   43a24:	10000426 	beq	r2,zero,43a38 <_dtoa_r+0xbc>
   43a28:	d8c02217 	ldw	r3,136(sp)
   43a2c:	00800174 	movhi	r2,5
   43a30:	10805344 	addi	r2,r2,333
   43a34:	18800015 	stw	r2,0(r3)
   43a38:	07000174 	movhi	fp,5
   43a3c:	e7005304 	addi	fp,fp,332
   43a40:	e005883a 	mov	r2,fp
   43a44:	dfc01e17 	ldw	ra,120(sp)
   43a48:	df001d17 	ldw	fp,116(sp)
   43a4c:	ddc01c17 	ldw	r23,112(sp)
   43a50:	dd801b17 	ldw	r22,108(sp)
   43a54:	dd401a17 	ldw	r21,104(sp)
   43a58:	dd001917 	ldw	r20,100(sp)
   43a5c:	dcc01817 	ldw	r19,96(sp)
   43a60:	dc801717 	ldw	r18,92(sp)
   43a64:	dc401617 	ldw	r17,88(sp)
   43a68:	dc001517 	ldw	r16,84(sp)
   43a6c:	dec01f04 	addi	sp,sp,124
   43a70:	f800283a 	ret
   43a74:	dcc00217 	ldw	r19,8(sp)
   43a78:	d8801304 	addi	r2,sp,76
   43a7c:	9022d53a 	srli	r17,r18,20
   43a80:	d8800015 	stw	r2,0(sp)
   43a84:	d9c01404 	addi	r7,sp,80
   43a88:	980b883a 	mov	r5,r19
   43a8c:	a80d883a 	mov	r6,r21
   43a90:	8009883a 	mov	r4,r16
   43a94:	0047dd40 	call	47dd4 <__d2b>
   43a98:	102f883a 	mov	r23,r2
   43a9c:	8801811e 	bne	r17,zero,440a4 <_dtoa_r+0x728>
   43aa0:	dd001317 	ldw	r20,76(sp)
   43aa4:	dc401417 	ldw	r17,80(sp)
   43aa8:	a463883a 	add	r17,r20,r17
   43aac:	88810c84 	addi	r2,r17,1074
   43ab0:	10c00850 	cmplti	r3,r2,33
   43ab4:	1803101e 	bne	r3,zero,446f8 <_dtoa_r+0xd7c>
   43ab8:	00c01004 	movi	r3,64
   43abc:	1887c83a 	sub	r3,r3,r2
   43ac0:	90c8983a 	sll	r4,r18,r3
   43ac4:	d8c00217 	ldw	r3,8(sp)
   43ac8:	88810484 	addi	r2,r17,1042
   43acc:	1884d83a 	srl	r2,r3,r2
   43ad0:	2088b03a 	or	r4,r4,r2
   43ad4:	004d6240 	call	4d624 <__floatunsidf>
   43ad8:	1009883a 	mov	r4,r2
   43adc:	00bf8434 	movhi	r2,65040
   43ae0:	188b883a 	add	r5,r3,r2
   43ae4:	00800044 	movi	r2,1
   43ae8:	8c7fffc4 	addi	r17,r17,-1
   43aec:	d8800915 	stw	r2,36(sp)
   43af0:	000d883a 	mov	r6,zero
   43af4:	01cffe34 	movhi	r7,16376
   43af8:	004cafc0 	call	4cafc <__subdf3>
   43afc:	0198dbf4 	movhi	r6,25455
   43b00:	01cff4f4 	movhi	r7,16339
   43b04:	3190d844 	addi	r6,r6,17249
   43b08:	39e1e9c4 	addi	r7,r7,-30809
   43b0c:	1009883a 	mov	r4,r2
   43b10:	180b883a 	mov	r5,r3
   43b14:	004c4240 	call	4c424 <__muldf3>
   43b18:	01a2d874 	movhi	r6,35681
   43b1c:	01cff1f4 	movhi	r7,16327
   43b20:	31b22cc4 	addi	r6,r6,-14157
   43b24:	39e28a04 	addi	r7,r7,-30168
   43b28:	180b883a 	mov	r5,r3
   43b2c:	1009883a 	mov	r4,r2
   43b30:	004b8980 	call	4b898 <__adddf3>
   43b34:	8809883a 	mov	r4,r17
   43b38:	1027883a 	mov	r19,r2
   43b3c:	1825883a 	mov	r18,r3
   43b40:	004d56c0 	call	4d56c <__floatsidf>
   43b44:	019427f4 	movhi	r6,20639
   43b48:	01cff4f4 	movhi	r7,16339
   43b4c:	319e7ec4 	addi	r6,r6,31227
   43b50:	39d104c4 	addi	r7,r7,17427
   43b54:	1009883a 	mov	r4,r2
   43b58:	180b883a 	mov	r5,r3
   43b5c:	004c4240 	call	4c424 <__muldf3>
   43b60:	100d883a 	mov	r6,r2
   43b64:	180f883a 	mov	r7,r3
   43b68:	9809883a 	mov	r4,r19
   43b6c:	900b883a 	mov	r5,r18
   43b70:	004b8980 	call	4b898 <__adddf3>
   43b74:	1009883a 	mov	r4,r2
   43b78:	180b883a 	mov	r5,r3
   43b7c:	1027883a 	mov	r19,r2
   43b80:	1825883a 	mov	r18,r3
   43b84:	004d4ec0 	call	4d4ec <__fixdfsi>
   43b88:	000d883a 	mov	r6,zero
   43b8c:	000f883a 	mov	r7,zero
   43b90:	9809883a 	mov	r4,r19
   43b94:	900b883a 	mov	r5,r18
   43b98:	102d883a 	mov	r22,r2
   43b9c:	004c32c0 	call	4c32c <__ledf2>
   43ba0:	1002a616 	blt	r2,zero,4463c <_dtoa_r+0xcc0>
   43ba4:	a469c83a 	sub	r20,r20,r17
   43ba8:	a0ffffc4 	addi	r3,r20,-1
   43bac:	b08005e8 	cmpgeui	r2,r22,23
   43bb0:	d8c00415 	stw	r3,16(sp)
   43bb4:	1002981e 	bne	r2,zero,44618 <_dtoa_r+0xc9c>
   43bb8:	b00490fa 	slli	r2,r22,3
   43bbc:	02c00174 	movhi	r11,5
   43bc0:	5ac09a04 	addi	r11,r11,616
   43bc4:	5885883a 	add	r2,r11,r2
   43bc8:	11800017 	ldw	r6,0(r2)
   43bcc:	11c00117 	ldw	r7,4(r2)
   43bd0:	d9000217 	ldw	r4,8(sp)
   43bd4:	a80b883a 	mov	r5,r21
   43bd8:	004c32c0 	call	4c32c <__ledf2>
   43bdc:	1001d60e 	bge	r2,zero,44338 <_dtoa_r+0x9bc>
   43be0:	d8000815 	stw	zero,32(sp)
   43be4:	a0bfffc4 	addi	r2,r20,-1
   43be8:	b5bfffc4 	addi	r22,r22,-1
   43bec:	10028e16 	blt	r2,zero,44628 <_dtoa_r+0xcac>
   43bf0:	d8000515 	stw	zero,20(sp)
   43bf4:	b001d30e 	bge	r22,zero,44344 <_dtoa_r+0x9c8>
   43bf8:	d8800517 	ldw	r2,20(sp)
   43bfc:	d8c00117 	ldw	r3,4(sp)
   43c00:	dd800615 	stw	r22,24(sp)
   43c04:	1585c83a 	sub	r2,r2,r22
   43c08:	d8800515 	stw	r2,20(sp)
   43c0c:	0585c83a 	sub	r2,zero,r22
   43c10:	d8800315 	stw	r2,12(sp)
   43c14:	188002a8 	cmpgeui	r2,r3,10
   43c18:	002d883a 	mov	r22,zero
   43c1c:	1001d11e 	bne	r2,zero,44364 <_dtoa_r+0x9e8>
   43c20:	18800190 	cmplti	r2,r3,6
   43c24:	1002a31e 	bne	r2,zero,446b4 <_dtoa_r+0xd38>
   43c28:	18ffff04 	addi	r3,r3,-4
   43c2c:	d8c00115 	stw	r3,4(sp)
   43c30:	188000e0 	cmpeqi	r2,r3,3
   43c34:	0023883a 	mov	r17,zero
   43c38:	1003b71e 	bne	r2,zero,44b18 <_dtoa_r+0x119c>
   43c3c:	18800108 	cmpgei	r2,r3,4
   43c40:	1003a626 	beq	r2,zero,44adc <_dtoa_r+0x1160>
   43c44:	d8800117 	ldw	r2,4(sp)
   43c48:	10800120 	cmpeqi	r2,r2,4
   43c4c:	1003611e 	bne	r2,zero,449d4 <_dtoa_r+0x1058>
   43c50:	00800144 	movi	r2,5
   43c54:	d8800115 	stw	r2,4(sp)
   43c58:	00800044 	movi	r2,1
   43c5c:	d8800715 	stw	r2,28(sp)
   43c60:	d8801f17 	ldw	r2,124(sp)
   43c64:	d8c00617 	ldw	r3,24(sp)
   43c68:	10c5883a 	add	r2,r2,r3
   43c6c:	14800044 	addi	r18,r2,1
   43c70:	d8800a15 	stw	r2,40(sp)
   43c74:	900d883a 	mov	r6,r18
   43c78:	0485320e 	bge	zero,r18,45144 <_dtoa_r+0x17c8>
   43c7c:	30800608 	cmpgei	r2,r6,24
   43c80:	10053026 	beq	r2,zero,45144 <_dtoa_r+0x17c8>
   43c84:	00c00044 	movi	r3,1
   43c88:	00800104 	movi	r2,4
   43c8c:	1085883a 	add	r2,r2,r2
   43c90:	11000504 	addi	r4,r2,20
   43c94:	180b883a 	mov	r5,r3
   43c98:	18c00044 	addi	r3,r3,1
   43c9c:	313ffb2e 	bgeu	r6,r4,43c8c <_dtoa_r+0x310>
   43ca0:	81401115 	stw	r5,68(r16)
   43ca4:	8009883a 	mov	r4,r16
   43ca8:	0046fcc0 	call	46fcc <_Balloc>
   43cac:	1039883a 	mov	fp,r2
   43cb0:	10050d26 	beq	r2,zero,450e8 <_dtoa_r+0x176c>
   43cb4:	80801015 	stw	r2,64(r16)
   43cb8:	908003e8 	cmpgeui	r2,r18,15
   43cbc:	1001291e 	bne	r2,zero,44164 <_dtoa_r+0x7e8>
   43cc0:	88012826 	beq	r17,zero,44164 <_dtoa_r+0x7e8>
   43cc4:	d8c00617 	ldw	r3,24(sp)
   43cc8:	00c3b40e 	bge	zero,r3,44b9c <_dtoa_r+0x1220>
   43ccc:	188003cc 	andi	r2,r3,15
   43cd0:	100490fa 	slli	r2,r2,3
   43cd4:	1823d13a 	srai	r17,r3,4
   43cd8:	02c00174 	movhi	r11,5
   43cdc:	5ac09a04 	addi	r11,r11,616
   43ce0:	5885883a 	add	r2,r11,r2
   43ce4:	88c0040c 	andi	r3,r17,16
   43ce8:	12400017 	ldw	r9,0(r2)
   43cec:	12000117 	ldw	r8,4(r2)
   43cf0:	18037626 	beq	r3,zero,44acc <_dtoa_r+0x1150>
   43cf4:	00800174 	movhi	r2,5
   43cf8:	10809004 	addi	r2,r2,576
   43cfc:	d9000217 	ldw	r4,8(sp)
   43d00:	11800817 	ldw	r6,32(r2)
   43d04:	11c00917 	ldw	r7,36(r2)
   43d08:	a80b883a 	mov	r5,r21
   43d0c:	da000c15 	stw	r8,48(sp)
   43d10:	da400b15 	stw	r9,44(sp)
   43d14:	00404840 	call	40484 <__divdf3>
   43d18:	da400b17 	ldw	r9,44(sp)
   43d1c:	da000c17 	ldw	r8,48(sp)
   43d20:	8c4003cc 	andi	r17,r17,15
   43d24:	1009883a 	mov	r4,r2
   43d28:	180b883a 	mov	r5,r3
   43d2c:	04c000c4 	movi	r19,3
   43d30:	88001c26 	beq	r17,zero,43da4 <_dtoa_r+0x428>
   43d34:	05000174 	movhi	r20,5
   43d38:	a5009004 	addi	r20,r20,576
   43d3c:	dc800b15 	stw	r18,44(sp)
   43d40:	dc000c15 	stw	r16,48(sp)
   43d44:	9825883a 	mov	r18,r19
   43d48:	a021883a 	mov	r16,r20
   43d4c:	2827883a 	mov	r19,r5
   43d50:	2029883a 	mov	r20,r4
   43d54:	400b883a 	mov	r5,r8
   43d58:	4809883a 	mov	r4,r9
   43d5c:	8980004c 	andi	r6,r17,1
   43d60:	30000626 	beq	r6,zero,43d7c <_dtoa_r+0x400>
   43d64:	81800017 	ldw	r6,0(r16)
   43d68:	81c00117 	ldw	r7,4(r16)
   43d6c:	94800044 	addi	r18,r18,1
   43d70:	004c4240 	call	4c424 <__muldf3>
   43d74:	1009883a 	mov	r4,r2
   43d78:	180b883a 	mov	r5,r3
   43d7c:	8823d07a 	srai	r17,r17,1
   43d80:	84000204 	addi	r16,r16,8
   43d84:	883ff51e 	bne	r17,zero,43d5c <_dtoa_r+0x3e0>
   43d88:	2811883a 	mov	r8,r5
   43d8c:	dc000c17 	ldw	r16,48(sp)
   43d90:	980b883a 	mov	r5,r19
   43d94:	9027883a 	mov	r19,r18
   43d98:	dc800b17 	ldw	r18,44(sp)
   43d9c:	2013883a 	mov	r9,r4
   43da0:	a009883a 	mov	r4,r20
   43da4:	480d883a 	mov	r6,r9
   43da8:	400f883a 	mov	r7,r8
   43dac:	00404840 	call	40484 <__divdf3>
   43db0:	1023883a 	mov	r17,r2
   43db4:	1829883a 	mov	r20,r3
   43db8:	d8800817 	ldw	r2,32(sp)
   43dbc:	10000626 	beq	r2,zero,43dd8 <_dtoa_r+0x45c>
   43dc0:	000d883a 	mov	r6,zero
   43dc4:	01cffc34 	movhi	r7,16368
   43dc8:	8809883a 	mov	r4,r17
   43dcc:	a00b883a 	mov	r5,r20
   43dd0:	004c32c0 	call	4c32c <__ledf2>
   43dd4:	10045a16 	blt	r2,zero,44f40 <_dtoa_r+0x15c4>
   43dd8:	9809883a 	mov	r4,r19
   43ddc:	004d56c0 	call	4d56c <__floatsidf>
   43de0:	880d883a 	mov	r6,r17
   43de4:	a00f883a 	mov	r7,r20
   43de8:	1009883a 	mov	r4,r2
   43dec:	180b883a 	mov	r5,r3
   43df0:	004c4240 	call	4c424 <__muldf3>
   43df4:	000d883a 	mov	r6,zero
   43df8:	01d00734 	movhi	r7,16412
   43dfc:	1009883a 	mov	r4,r2
   43e00:	180b883a 	mov	r5,r3
   43e04:	004b8980 	call	4b898 <__adddf3>
   43e08:	d8800b15 	stw	r2,44(sp)
   43e0c:	00bf3034 	movhi	r2,64704
   43e10:	18a7883a 	add	r19,r3,r2
   43e14:	9000c026 	beq	r18,zero,44118 <_dtoa_r+0x79c>
   43e18:	d8800617 	ldw	r2,24(sp)
   43e1c:	dc800c15 	stw	r18,48(sp)
   43e20:	d8801115 	stw	r2,68(sp)
   43e24:	d8800c17 	ldw	r2,48(sp)
   43e28:	02c00174 	movhi	r11,5
   43e2c:	5ac09a04 	addi	r11,r11,616
   43e30:	10bfffc4 	addi	r2,r2,-1
   43e34:	100490fa 	slli	r2,r2,3
   43e38:	8809883a 	mov	r4,r17
   43e3c:	a00b883a 	mov	r5,r20
   43e40:	5885883a 	add	r2,r11,r2
   43e44:	10c00017 	ldw	r3,0(r2)
   43e48:	10800117 	ldw	r2,4(r2)
   43e4c:	dac00d15 	stw	r11,52(sp)
   43e50:	d8c00f15 	stw	r3,60(sp)
   43e54:	d8801015 	stw	r2,64(sp)
   43e58:	004d4ec0 	call	4d4ec <__fixdfsi>
   43e5c:	11400c04 	addi	r5,r2,48
   43e60:	1009883a 	mov	r4,r2
   43e64:	d9400e15 	stw	r5,56(sp)
   43e68:	004d56c0 	call	4d56c <__floatsidf>
   43e6c:	8809883a 	mov	r4,r17
   43e70:	a00b883a 	mov	r5,r20
   43e74:	100d883a 	mov	r6,r2
   43e78:	180f883a 	mov	r7,r3
   43e7c:	004cafc0 	call	4cafc <__subdf3>
   43e80:	d9000717 	ldw	r4,28(sp)
   43e84:	dac00d17 	ldw	r11,52(sp)
   43e88:	e2000044 	addi	r8,fp,1
   43e8c:	1029883a 	mov	r20,r2
   43e90:	1823883a 	mov	r17,r3
   43e94:	2003ce26 	beq	r4,zero,44dd0 <_dtoa_r+0x1454>
   43e98:	d9800f17 	ldw	r6,60(sp)
   43e9c:	d9c01017 	ldw	r7,64(sp)
   43ea0:	0009883a 	mov	r4,zero
   43ea4:	014ff834 	movhi	r5,16352
   43ea8:	da001215 	stw	r8,72(sp)
   43eac:	00404840 	call	40484 <__divdf3>
   43eb0:	d9800b17 	ldw	r6,44(sp)
   43eb4:	980f883a 	mov	r7,r19
   43eb8:	1009883a 	mov	r4,r2
   43ebc:	180b883a 	mov	r5,r3
   43ec0:	004cafc0 	call	4cafc <__subdf3>
   43ec4:	1009883a 	mov	r4,r2
   43ec8:	d8800e17 	ldw	r2,56(sp)
   43ecc:	180b883a 	mov	r5,r3
   43ed0:	a00d883a 	mov	r6,r20
   43ed4:	e0800005 	stb	r2,0(fp)
   43ed8:	880f883a 	mov	r7,r17
   43edc:	d9000d15 	stw	r4,52(sp)
   43ee0:	d8c00b15 	stw	r3,44(sp)
   43ee4:	004c2300 	call	4c230 <__gedf2>
   43ee8:	d9400b17 	ldw	r5,44(sp)
   43eec:	d9000d17 	ldw	r4,52(sp)
   43ef0:	da001217 	ldw	r8,72(sp)
   43ef4:	00840b16 	blt	zero,r2,44f24 <_dtoa_r+0x15a8>
   43ef8:	0005883a 	mov	r2,zero
   43efc:	dc800d15 	stw	r18,52(sp)
   43f00:	dd800e15 	stw	r22,56(sp)
   43f04:	ddc00b15 	stw	r23,44(sp)
   43f08:	dd400f15 	stw	r21,60(sp)
   43f0c:	ddc00c17 	ldw	r23,48(sp)
   43f10:	402d883a 	mov	r22,r8
   43f14:	dc000c15 	stw	r16,48(sp)
   43f18:	2025883a 	mov	r18,r4
   43f1c:	2827883a 	mov	r19,r5
   43f20:	102b883a 	mov	r21,r2
   43f24:	00002606 	br	43fc0 <_dtoa_r+0x644>
   43f28:	ad400044 	addi	r21,r21,1
   43f2c:	adc4460e 	bge	r21,r23,45048 <_dtoa_r+0x16cc>
   43f30:	9009883a 	mov	r4,r18
   43f34:	980b883a 	mov	r5,r19
   43f38:	000d883a 	mov	r6,zero
   43f3c:	01d00934 	movhi	r7,16420
   43f40:	004c4240 	call	4c424 <__muldf3>
   43f44:	000d883a 	mov	r6,zero
   43f48:	01d00934 	movhi	r7,16420
   43f4c:	a009883a 	mov	r4,r20
   43f50:	880b883a 	mov	r5,r17
   43f54:	1025883a 	mov	r18,r2
   43f58:	1827883a 	mov	r19,r3
   43f5c:	004c4240 	call	4c424 <__muldf3>
   43f60:	180b883a 	mov	r5,r3
   43f64:	1009883a 	mov	r4,r2
   43f68:	1823883a 	mov	r17,r3
   43f6c:	1029883a 	mov	r20,r2
   43f70:	004d4ec0 	call	4d4ec <__fixdfsi>
   43f74:	1009883a 	mov	r4,r2
   43f78:	1021883a 	mov	r16,r2
   43f7c:	004d56c0 	call	4d56c <__floatsidf>
   43f80:	a009883a 	mov	r4,r20
   43f84:	880b883a 	mov	r5,r17
   43f88:	100d883a 	mov	r6,r2
   43f8c:	180f883a 	mov	r7,r3
   43f90:	004cafc0 	call	4cafc <__subdf3>
   43f94:	b5800044 	addi	r22,r22,1
   43f98:	82000c04 	addi	r8,r16,48
   43f9c:	b23fffc5 	stb	r8,-1(r22)
   43fa0:	900d883a 	mov	r6,r18
   43fa4:	980f883a 	mov	r7,r19
   43fa8:	1009883a 	mov	r4,r2
   43fac:	180b883a 	mov	r5,r3
   43fb0:	1029883a 	mov	r20,r2
   43fb4:	1823883a 	mov	r17,r3
   43fb8:	004c32c0 	call	4c32c <__ledf2>
   43fbc:	10041e16 	blt	r2,zero,45038 <_dtoa_r+0x16bc>
   43fc0:	a00d883a 	mov	r6,r20
   43fc4:	880f883a 	mov	r7,r17
   43fc8:	0009883a 	mov	r4,zero
   43fcc:	014ffc34 	movhi	r5,16368
   43fd0:	004cafc0 	call	4cafc <__subdf3>
   43fd4:	900d883a 	mov	r6,r18
   43fd8:	980f883a 	mov	r7,r19
   43fdc:	1009883a 	mov	r4,r2
   43fe0:	180b883a 	mov	r5,r3
   43fe4:	004c32c0 	call	4c32c <__ledf2>
   43fe8:	103fcf0e 	bge	r2,zero,43f28 <_dtoa_r+0x5ac>
   43fec:	d8801117 	ldw	r2,68(sp)
   43ff0:	b027883a 	mov	r19,r22
   43ff4:	ddc00b17 	ldw	r23,44(sp)
   43ff8:	dc000c17 	ldw	r16,48(sp)
   43ffc:	15800044 	addi	r22,r2,1
   44000:	00000106 	br	44008 <_dtoa_r+0x68c>
   44004:	e4c3ed26 	beq	fp,r19,44fbc <_dtoa_r+0x1640>
   44008:	98ffffc3 	ldbu	r3,-1(r19)
   4400c:	9811883a 	mov	r8,r19
   44010:	9cffffc4 	addi	r19,r19,-1
   44014:	18803fcc 	andi	r2,r3,255
   44018:	1080201c 	xori	r2,r2,128
   4401c:	10bfe004 	addi	r2,r2,-128
   44020:	10800e60 	cmpeqi	r2,r2,57
   44024:	103ff71e 	bne	r2,zero,44004 <_dtoa_r+0x688>
   44028:	18c00044 	addi	r3,r3,1
   4402c:	98c00005 	stb	r3,0(r19)
   44030:	b02b883a 	mov	r21,r22
   44034:	00015a06 	br	445a0 <_dtoa_r+0xc24>
   44038:	00a00034 	movhi	r2,32768
   4403c:	10bfffc4 	addi	r2,r2,-1
   44040:	90aa703a 	and	r21,r18,r2
   44044:	a825883a 	mov	r18,r21
   44048:	00800044 	movi	r2,1
   4404c:	88800015 	stw	r2,0(r17)
   44050:	00dffc34 	movhi	r3,32752
   44054:	909ffc2c 	andhi	r2,r18,32752
   44058:	10fe681e 	bne	r2,r3,439fc <_dtoa_r+0x80>
   4405c:	d9002017 	ldw	r4,128(sp)
   44060:	00c9c3c4 	movi	r3,9999
   44064:	00800434 	movhi	r2,16
   44068:	20c00015 	stw	r3,0(r4)
   4406c:	d8c00217 	ldw	r3,8(sp)
   44070:	10bfffc4 	addi	r2,r2,-1
   44074:	9084703a 	and	r2,r18,r2
   44078:	10c4b03a 	or	r2,r2,r3
   4407c:	1000121e 	bne	r2,zero,440c8 <_dtoa_r+0x74c>
   44080:	d8802217 	ldw	r2,136(sp)
   44084:	07000174 	movhi	fp,5
   44088:	10041e26 	beq	r2,zero,45104 <_dtoa_r+0x1788>
   4408c:	00800174 	movhi	r2,5
   44090:	e7005c04 	addi	fp,fp,368
   44094:	10805e04 	addi	r2,r2,376
   44098:	d8c02217 	ldw	r3,136(sp)
   4409c:	18800015 	stw	r2,0(r3)
   440a0:	003e6706 	br	43a40 <_dtoa_r+0xc4>
   440a4:	01400434 	movhi	r5,16
   440a8:	297fffc4 	addi	r5,r5,-1
   440ac:	a94a703a 	and	r5,r21,r5
   440b0:	dd001317 	ldw	r20,76(sp)
   440b4:	9809883a 	mov	r4,r19
   440b8:	294ffc34 	orhi	r5,r5,16368
   440bc:	8c7f0044 	addi	r17,r17,-1023
   440c0:	d8000915 	stw	zero,36(sp)
   440c4:	003e8a06 	br	43af0 <_dtoa_r+0x174>
   440c8:	d8802217 	ldw	r2,136(sp)
   440cc:	07000174 	movhi	fp,5
   440d0:	10023c1e 	bne	r2,zero,449c4 <_dtoa_r+0x1048>
   440d4:	e7005f04 	addi	fp,fp,380
   440d8:	003e5906 	br	43a40 <_dtoa_r+0xc4>
   440dc:	9809883a 	mov	r4,r19
   440e0:	004d56c0 	call	4d56c <__floatsidf>
   440e4:	880d883a 	mov	r6,r17
   440e8:	a00f883a 	mov	r7,r20
   440ec:	1009883a 	mov	r4,r2
   440f0:	180b883a 	mov	r5,r3
   440f4:	004c4240 	call	4c424 <__muldf3>
   440f8:	000d883a 	mov	r6,zero
   440fc:	01d00734 	movhi	r7,16412
   44100:	1009883a 	mov	r4,r2
   44104:	180b883a 	mov	r5,r3
   44108:	004b8980 	call	4b898 <__adddf3>
   4410c:	d8800b15 	stw	r2,44(sp)
   44110:	00bf3034 	movhi	r2,64704
   44114:	18a7883a 	add	r19,r3,r2
   44118:	8809883a 	mov	r4,r17
   4411c:	a00b883a 	mov	r5,r20
   44120:	000d883a 	mov	r6,zero
   44124:	01d00534 	movhi	r7,16404
   44128:	004cafc0 	call	4cafc <__subdf3>
   4412c:	d9800b17 	ldw	r6,44(sp)
   44130:	980f883a 	mov	r7,r19
   44134:	1009883a 	mov	r4,r2
   44138:	180b883a 	mov	r5,r3
   4413c:	1029883a 	mov	r20,r2
   44140:	1823883a 	mov	r17,r3
   44144:	004c2300 	call	4c230 <__gedf2>
   44148:	0083a716 	blt	zero,r2,44fe8 <_dtoa_r+0x166c>
   4414c:	d9800b17 	ldw	r6,44(sp)
   44150:	99e0003c 	xorhi	r7,r19,32768
   44154:	a009883a 	mov	r4,r20
   44158:	880b883a 	mov	r5,r17
   4415c:	004c32c0 	call	4c32c <__ledf2>
   44160:	10001d16 	blt	r2,zero,441d8 <_dtoa_r+0x85c>
   44164:	d8801417 	ldw	r2,80(sp)
   44168:	10008816 	blt	r2,zero,4438c <_dtoa_r+0xa10>
   4416c:	d8c00617 	ldw	r3,24(sp)
   44170:	18c003d0 	cmplti	r3,r3,15
   44174:	18008526 	beq	r3,zero,4438c <_dtoa_r+0xa10>
   44178:	02c00174 	movhi	r11,5
   4417c:	5ac09a04 	addi	r11,r11,616
   44180:	d8800617 	ldw	r2,24(sp)
   44184:	100490fa 	slli	r2,r2,3
   44188:	5885883a 	add	r2,r11,r2
   4418c:	10c00017 	ldw	r3,0(r2)
   44190:	10800117 	ldw	r2,4(r2)
   44194:	d8c00115 	stw	r3,4(sp)
   44198:	d8800315 	stw	r2,12(sp)
   4419c:	d8801f17 	ldw	r2,124(sp)
   441a0:	1000130e 	bge	r2,zero,441f0 <_dtoa_r+0x874>
   441a4:	04801216 	blt	zero,r18,441f0 <_dtoa_r+0x874>
   441a8:	90000b1e 	bne	r18,zero,441d8 <_dtoa_r+0x85c>
   441ac:	d9000117 	ldw	r4,4(sp)
   441b0:	d9400317 	ldw	r5,12(sp)
   441b4:	000d883a 	mov	r6,zero
   441b8:	01d00534 	movhi	r7,16404
   441bc:	004c4240 	call	4c424 <__muldf3>
   441c0:	d9000217 	ldw	r4,8(sp)
   441c4:	100d883a 	mov	r6,r2
   441c8:	180f883a 	mov	r7,r3
   441cc:	a80b883a 	mov	r5,r21
   441d0:	004c32c0 	call	4c32c <__ledf2>
   441d4:	00838416 	blt	zero,r2,44fe8 <_dtoa_r+0x166c>
   441d8:	e011883a 	mov	r8,fp
   441dc:	d8000315 	stw	zero,12(sp)
   441e0:	0023883a 	mov	r17,zero
   441e4:	d8801f17 	ldw	r2,124(sp)
   441e8:	00a4303a 	nor	r18,zero,r2
   441ec:	0001da06 	br	44958 <_dtoa_r+0xfdc>
   441f0:	dcc00117 	ldw	r19,4(sp)
   441f4:	dd000317 	ldw	r20,12(sp)
   441f8:	dd800217 	ldw	r22,8(sp)
   441fc:	980d883a 	mov	r6,r19
   44200:	a00f883a 	mov	r7,r20
   44204:	b009883a 	mov	r4,r22
   44208:	a80b883a 	mov	r5,r21
   4420c:	00404840 	call	40484 <__divdf3>
   44210:	180b883a 	mov	r5,r3
   44214:	1009883a 	mov	r4,r2
   44218:	004d4ec0 	call	4d4ec <__fixdfsi>
   4421c:	1009883a 	mov	r4,r2
   44220:	1023883a 	mov	r17,r2
   44224:	004d56c0 	call	4d56c <__floatsidf>
   44228:	980d883a 	mov	r6,r19
   4422c:	a00f883a 	mov	r7,r20
   44230:	1009883a 	mov	r4,r2
   44234:	180b883a 	mov	r5,r3
   44238:	004c4240 	call	4c424 <__muldf3>
   4423c:	100d883a 	mov	r6,r2
   44240:	b009883a 	mov	r4,r22
   44244:	a80b883a 	mov	r5,r21
   44248:	180f883a 	mov	r7,r3
   4424c:	004cafc0 	call	4cafc <__subdf3>
   44250:	89000c04 	addi	r4,r17,48
   44254:	e1000005 	stb	r4,0(fp)
   44258:	91800060 	cmpeqi	r6,r18,1
   4425c:	1009883a 	mov	r4,r2
   44260:	180b883a 	mov	r5,r3
   44264:	e4c00044 	addi	r19,fp,1
   44268:	3002891e 	bne	r6,zero,44c90 <_dtoa_r+0x1314>
   4426c:	ddc00215 	stw	r23,8(sp)
   44270:	05800044 	movi	r22,1
   44274:	ddc00117 	ldw	r23,4(sp)
   44278:	dc000415 	stw	r16,16(sp)
   4427c:	a023883a 	mov	r17,r20
   44280:	00001c06 	br	442f4 <_dtoa_r+0x978>
   44284:	b80d883a 	mov	r6,r23
   44288:	880f883a 	mov	r7,r17
   4428c:	a809883a 	mov	r4,r21
   44290:	a00b883a 	mov	r5,r20
   44294:	00404840 	call	40484 <__divdf3>
   44298:	180b883a 	mov	r5,r3
   4429c:	1009883a 	mov	r4,r2
   442a0:	004d4ec0 	call	4d4ec <__fixdfsi>
   442a4:	1009883a 	mov	r4,r2
   442a8:	1021883a 	mov	r16,r2
   442ac:	004d56c0 	call	4d56c <__floatsidf>
   442b0:	b80d883a 	mov	r6,r23
   442b4:	880f883a 	mov	r7,r17
   442b8:	1009883a 	mov	r4,r2
   442bc:	180b883a 	mov	r5,r3
   442c0:	004c4240 	call	4c424 <__muldf3>
   442c4:	a809883a 	mov	r4,r21
   442c8:	a00b883a 	mov	r5,r20
   442cc:	100d883a 	mov	r6,r2
   442d0:	180f883a 	mov	r7,r3
   442d4:	004cafc0 	call	4cafc <__subdf3>
   442d8:	81000c04 	addi	r4,r16,48
   442dc:	99000005 	stb	r4,0(r19)
   442e0:	b5800044 	addi	r22,r22,1
   442e4:	9cc00044 	addi	r19,r19,1
   442e8:	1009883a 	mov	r4,r2
   442ec:	180b883a 	mov	r5,r3
   442f0:	b4826426 	beq	r22,r18,44c84 <_dtoa_r+0x1308>
   442f4:	000d883a 	mov	r6,zero
   442f8:	01d00934 	movhi	r7,16420
   442fc:	004c4240 	call	4c424 <__muldf3>
   44300:	000d883a 	mov	r6,zero
   44304:	000f883a 	mov	r7,zero
   44308:	1009883a 	mov	r4,r2
   4430c:	180b883a 	mov	r5,r3
   44310:	102b883a 	mov	r21,r2
   44314:	1829883a 	mov	r20,r3
   44318:	004c19c0 	call	4c19c <__eqdf2>
   4431c:	103fd91e 	bne	r2,zero,44284 <_dtoa_r+0x908>
   44320:	d8800617 	ldw	r2,24(sp)
   44324:	ddc00217 	ldw	r23,8(sp)
   44328:	dc000417 	ldw	r16,16(sp)
   4432c:	15400044 	addi	r21,r2,1
   44330:	9811883a 	mov	r8,r19
   44334:	00009a06 	br	445a0 <_dtoa_r+0xc24>
   44338:	0502120e 	bge	zero,r20,44b84 <_dtoa_r+0x1208>
   4433c:	d8000815 	stw	zero,32(sp)
   44340:	d8000515 	stw	zero,20(sp)
   44344:	d8800417 	ldw	r2,16(sp)
   44348:	d8c00117 	ldw	r3,4(sp)
   4434c:	dd800615 	stw	r22,24(sp)
   44350:	1585883a 	add	r2,r2,r22
   44354:	d8800415 	stw	r2,16(sp)
   44358:	d8000315 	stw	zero,12(sp)
   4435c:	188002a8 	cmpgeui	r2,r3,10
   44360:	103e2f26 	beq	r2,zero,43c20 <_dtoa_r+0x2a4>
   44364:	00800044 	movi	r2,1
   44368:	04400044 	movi	r17,1
   4436c:	d8000115 	stw	zero,4(sp)
   44370:	d8800715 	stw	r2,28(sp)
   44374:	04bfffc4 	movi	r18,-1
   44378:	d8001f15 	stw	zero,124(sp)
   4437c:	80001115 	stw	zero,68(r16)
   44380:	dc800a15 	stw	r18,40(sp)
   44384:	000b883a 	mov	r5,zero
   44388:	003e4606 	br	43ca4 <_dtoa_r+0x328>
   4438c:	d8c00717 	ldw	r3,28(sp)
   44390:	1800b41e 	bne	r3,zero,44664 <_dtoa_r+0xce8>
   44394:	dd000317 	ldw	r20,12(sp)
   44398:	dcc00517 	ldw	r19,20(sp)
   4439c:	d8000715 	stw	zero,28(sp)
   443a0:	0023883a 	mov	r17,zero
   443a4:	98000b26 	beq	r19,zero,443d4 <_dtoa_r+0xa58>
   443a8:	d8c00417 	ldw	r3,16(sp)
   443ac:	00c0090e 	bge	zero,r3,443d4 <_dtoa_r+0xa58>
   443b0:	9805883a 	mov	r2,r19
   443b4:	1cc1ab16 	blt	r3,r19,44a64 <_dtoa_r+0x10e8>
   443b8:	d8c00517 	ldw	r3,20(sp)
   443bc:	98a7c83a 	sub	r19,r19,r2
   443c0:	1887c83a 	sub	r3,r3,r2
   443c4:	d8c00515 	stw	r3,20(sp)
   443c8:	d8c00417 	ldw	r3,16(sp)
   443cc:	1885c83a 	sub	r2,r3,r2
   443d0:	d8800415 	stw	r2,16(sp)
   443d4:	d8800317 	ldw	r2,12(sp)
   443d8:	10000826 	beq	r2,zero,443fc <_dtoa_r+0xa80>
   443dc:	d8800717 	ldw	r2,28(sp)
   443e0:	10000126 	beq	r2,zero,443e8 <_dtoa_r+0xa6c>
   443e4:	a0025a1e 	bne	r20,zero,44d50 <_dtoa_r+0x13d4>
   443e8:	d9800317 	ldw	r6,12(sp)
   443ec:	b80b883a 	mov	r5,r23
   443f0:	8009883a 	mov	r4,r16
   443f4:	00477240 	call	47724 <__pow5mult>
   443f8:	102f883a 	mov	r23,r2
   443fc:	01400044 	movi	r5,1
   44400:	8009883a 	mov	r4,r16
   44404:	00474200 	call	47420 <__i2b>
   44408:	d8800315 	stw	r2,12(sp)
   4440c:	b0015a1e 	bne	r22,zero,44978 <_dtoa_r+0xffc>
   44410:	d8800117 	ldw	r2,4(sp)
   44414:	10800090 	cmplti	r2,r2,2
   44418:	1001751e 	bne	r2,zero,449f0 <_dtoa_r+0x1074>
   4441c:	00800044 	movi	r2,1
   44420:	d9400417 	ldw	r5,16(sp)
   44424:	1145883a 	add	r2,r2,r5
   44428:	108007cc 	andi	r2,r2,31
   4442c:	10009826 	beq	r2,zero,44690 <_dtoa_r+0xd14>
   44430:	00c00804 	movi	r3,32
   44434:	1887c83a 	sub	r3,r3,r2
   44438:	19000150 	cmplti	r4,r3,5
   4443c:	20017e1e 	bne	r4,zero,44a38 <_dtoa_r+0x10bc>
   44440:	00c00704 	movi	r3,28
   44444:	1885c83a 	sub	r2,r3,r2
   44448:	d8c00517 	ldw	r3,20(sp)
   4444c:	98a7883a 	add	r19,r19,r2
   44450:	1887883a 	add	r3,r3,r2
   44454:	2885883a 	add	r2,r5,r2
   44458:	d8c00515 	stw	r3,20(sp)
   4445c:	d8800415 	stw	r2,16(sp)
   44460:	d8800517 	ldw	r2,20(sp)
   44464:	0080050e 	bge	zero,r2,4447c <_dtoa_r+0xb00>
   44468:	b80b883a 	mov	r5,r23
   4446c:	100d883a 	mov	r6,r2
   44470:	8009883a 	mov	r4,r16
   44474:	00478640 	call	47864 <__lshift>
   44478:	102f883a 	mov	r23,r2
   4447c:	d8800417 	ldw	r2,16(sp)
   44480:	0080050e 	bge	zero,r2,44498 <_dtoa_r+0xb1c>
   44484:	d9400317 	ldw	r5,12(sp)
   44488:	100d883a 	mov	r6,r2
   4448c:	8009883a 	mov	r4,r16
   44490:	00478640 	call	47864 <__lshift>
   44494:	d8800315 	stw	r2,12(sp)
   44498:	d8800817 	ldw	r2,32(sp)
   4449c:	10004c1e 	bne	r2,zero,445d0 <_dtoa_r+0xc54>
   444a0:	04811a0e 	bge	zero,r18,4490c <_dtoa_r+0xf90>
   444a4:	d8800717 	ldw	r2,28(sp)
   444a8:	1000a11e 	bne	r2,zero,44730 <_dtoa_r+0xdb4>
   444ac:	d8800617 	ldw	r2,24(sp)
   444b0:	15400044 	addi	r21,r2,1
   444b4:	dd800317 	ldw	r22,12(sp)
   444b8:	04c00044 	movi	r19,1
   444bc:	00000706 	br	444dc <_dtoa_r+0xb60>
   444c0:	b80b883a 	mov	r5,r23
   444c4:	000f883a 	mov	r7,zero
   444c8:	01800284 	movi	r6,10
   444cc:	8009883a 	mov	r4,r16
   444d0:	00470940 	call	47094 <__multadd>
   444d4:	102f883a 	mov	r23,r2
   444d8:	9cc00044 	addi	r19,r19,1
   444dc:	b00b883a 	mov	r5,r22
   444e0:	b809883a 	mov	r4,r23
   444e4:	00437800 	call	43780 <quorem>
   444e8:	15000c04 	addi	r20,r2,48
   444ec:	e4c5883a 	add	r2,fp,r19
   444f0:	153fffc5 	stb	r20,-1(r2)
   444f4:	9cbff216 	blt	r19,r18,444c0 <_dtoa_r+0xb44>
   444f8:	04800116 	blt	zero,r18,44500 <_dtoa_r+0xb84>
   444fc:	04800044 	movi	r18,1
   44500:	e4a5883a 	add	r18,fp,r18
   44504:	d8000215 	stw	zero,8(sp)
   44508:	b80b883a 	mov	r5,r23
   4450c:	8009883a 	mov	r4,r16
   44510:	01800044 	movi	r6,1
   44514:	00478640 	call	47864 <__lshift>
   44518:	d9400317 	ldw	r5,12(sp)
   4451c:	1009883a 	mov	r4,r2
   44520:	102f883a 	mov	r23,r2
   44524:	00479ec0 	call	479ec <__mcmp>
   44528:	00800216 	blt	zero,r2,44534 <_dtoa_r+0xbb8>
   4452c:	00017c06 	br	44b20 <_dtoa_r+0x11a4>
   44530:	e4819026 	beq	fp,r18,44b74 <_dtoa_r+0x11f8>
   44534:	90ffffc3 	ldbu	r3,-1(r18)
   44538:	9011883a 	mov	r8,r18
   4453c:	94bfffc4 	addi	r18,r18,-1
   44540:	18803fcc 	andi	r2,r3,255
   44544:	1080201c 	xori	r2,r2,128
   44548:	10bfe004 	addi	r2,r2,-128
   4454c:	10800e60 	cmpeqi	r2,r2,57
   44550:	103ff71e 	bne	r2,zero,44530 <_dtoa_r+0xbb4>
   44554:	18c00044 	addi	r3,r3,1
   44558:	90c00005 	stb	r3,0(r18)
   4455c:	d9400317 	ldw	r5,12(sp)
   44560:	8009883a 	mov	r4,r16
   44564:	da000115 	stw	r8,4(sp)
   44568:	00470700 	call	47070 <_Bfree>
   4456c:	da000117 	ldw	r8,4(sp)
   44570:	88000b26 	beq	r17,zero,445a0 <_dtoa_r+0xc24>
   44574:	d9400217 	ldw	r5,8(sp)
   44578:	28000426 	beq	r5,zero,4458c <_dtoa_r+0xc10>
   4457c:	2c400326 	beq	r5,r17,4458c <_dtoa_r+0xc10>
   44580:	8009883a 	mov	r4,r16
   44584:	00470700 	call	47070 <_Bfree>
   44588:	da000117 	ldw	r8,4(sp)
   4458c:	880b883a 	mov	r5,r17
   44590:	8009883a 	mov	r4,r16
   44594:	da000115 	stw	r8,4(sp)
   44598:	00470700 	call	47070 <_Bfree>
   4459c:	da000117 	ldw	r8,4(sp)
   445a0:	b80b883a 	mov	r5,r23
   445a4:	8009883a 	mov	r4,r16
   445a8:	da000115 	stw	r8,4(sp)
   445ac:	00470700 	call	47070 <_Bfree>
   445b0:	da000117 	ldw	r8,4(sp)
   445b4:	d8802017 	ldw	r2,128(sp)
   445b8:	40000005 	stb	zero,0(r8)
   445bc:	15400015 	stw	r21,0(r2)
   445c0:	d8802217 	ldw	r2,136(sp)
   445c4:	103d1e26 	beq	r2,zero,43a40 <_dtoa_r+0xc4>
   445c8:	12000015 	stw	r8,0(r2)
   445cc:	003d1c06 	br	43a40 <_dtoa_r+0xc4>
   445d0:	d9400317 	ldw	r5,12(sp)
   445d4:	b809883a 	mov	r4,r23
   445d8:	00479ec0 	call	479ec <__mcmp>
   445dc:	103fb00e 	bge	r2,zero,444a0 <_dtoa_r+0xb24>
   445e0:	b80b883a 	mov	r5,r23
   445e4:	000f883a 	mov	r7,zero
   445e8:	01800284 	movi	r6,10
   445ec:	8009883a 	mov	r4,r16
   445f0:	00470940 	call	47094 <__multadd>
   445f4:	d8c00617 	ldw	r3,24(sp)
   445f8:	102f883a 	mov	r23,r2
   445fc:	d8800717 	ldw	r2,28(sp)
   44600:	1d7fffc4 	addi	r21,r3,-1
   44604:	1000411e 	bne	r2,zero,4470c <_dtoa_r+0xd90>
   44608:	dc800a17 	ldw	r18,40(sp)
   4460c:	0482940e 	bge	zero,r18,45060 <_dtoa_r+0x16e4>
   44610:	dd400617 	ldw	r21,24(sp)
   44614:	003fa706 	br	444b4 <_dtoa_r+0xb38>
   44618:	00800044 	movi	r2,1
   4461c:	d8800815 	stw	r2,32(sp)
   44620:	a0bfffc4 	addi	r2,r20,-1
   44624:	103d720e 	bge	r2,zero,43bf0 <_dtoa_r+0x274>
   44628:	00800044 	movi	r2,1
   4462c:	1505c83a 	sub	r2,r2,r20
   44630:	d8800515 	stw	r2,20(sp)
   44634:	d8000415 	stw	zero,16(sp)
   44638:	003d6e06 	br	43bf4 <_dtoa_r+0x278>
   4463c:	b009883a 	mov	r4,r22
   44640:	004d56c0 	call	4d56c <__floatsidf>
   44644:	980d883a 	mov	r6,r19
   44648:	900f883a 	mov	r7,r18
   4464c:	1009883a 	mov	r4,r2
   44650:	180b883a 	mov	r5,r3
   44654:	004c19c0 	call	4c19c <__eqdf2>
   44658:	103d5226 	beq	r2,zero,43ba4 <_dtoa_r+0x228>
   4465c:	b5bfffc4 	addi	r22,r22,-1
   44660:	003d5006 	br	43ba4 <_dtoa_r+0x228>
   44664:	d8c00117 	ldw	r3,4(sp)
   44668:	18c00088 	cmpgei	r3,r3,2
   4466c:	18013526 	beq	r3,zero,44b44 <_dtoa_r+0x11c8>
   44670:	d8800317 	ldw	r2,12(sp)
   44674:	953fffc4 	addi	r20,r18,-1
   44678:	1500fc16 	blt	r2,r20,44a6c <_dtoa_r+0x10f0>
   4467c:	1529c83a 	sub	r20,r2,r20
   44680:	d8800517 	ldw	r2,20(sp)
   44684:	9002620e 	bge	r18,zero,45010 <_dtoa_r+0x1694>
   44688:	14a7c83a 	sub	r19,r2,r18
   4468c:	00010306 	br	44a9c <_dtoa_r+0x1120>
   44690:	00800704 	movi	r2,28
   44694:	d8c00517 	ldw	r3,20(sp)
   44698:	98a7883a 	add	r19,r19,r2
   4469c:	1887883a 	add	r3,r3,r2
   446a0:	d8c00515 	stw	r3,20(sp)
   446a4:	d8c00417 	ldw	r3,16(sp)
   446a8:	1885883a 	add	r2,r3,r2
   446ac:	d8800415 	stw	r2,16(sp)
   446b0:	003f6b06 	br	44460 <_dtoa_r+0xae4>
   446b4:	d8c00117 	ldw	r3,4(sp)
   446b8:	188000e0 	cmpeqi	r2,r3,3
   446bc:	1001151e 	bne	r2,zero,44b14 <_dtoa_r+0x1198>
   446c0:	18800108 	cmpgei	r2,r3,4
   446c4:	10000226 	beq	r2,zero,446d0 <_dtoa_r+0xd54>
   446c8:	04400044 	movi	r17,1
   446cc:	003d5d06 	br	43c44 <_dtoa_r+0x2c8>
   446d0:	188000a0 	cmpeqi	r2,r3,2
   446d4:	10028d26 	beq	r2,zero,4510c <_dtoa_r+0x1790>
   446d8:	04400044 	movi	r17,1
   446dc:	d8000715 	stw	zero,28(sp)
   446e0:	d8801f17 	ldw	r2,124(sp)
   446e4:	0080be0e 	bge	zero,r2,449e0 <_dtoa_r+0x1064>
   446e8:	d8800a15 	stw	r2,40(sp)
   446ec:	1025883a 	mov	r18,r2
   446f0:	100d883a 	mov	r6,r2
   446f4:	003d6106 	br	43c7c <_dtoa_r+0x300>
   446f8:	01000804 	movi	r4,32
   446fc:	2089c83a 	sub	r4,r4,r2
   44700:	d8800217 	ldw	r2,8(sp)
   44704:	1108983a 	sll	r4,r2,r4
   44708:	003cf206 	br	43ad4 <_dtoa_r+0x158>
   4470c:	880b883a 	mov	r5,r17
   44710:	000f883a 	mov	r7,zero
   44714:	01800284 	movi	r6,10
   44718:	8009883a 	mov	r4,r16
   4471c:	00470940 	call	47094 <__multadd>
   44720:	dc800a17 	ldw	r18,40(sp)
   44724:	1023883a 	mov	r17,r2
   44728:	04825d0e 	bge	zero,r18,450a0 <_dtoa_r+0x1724>
   4472c:	dd400615 	stw	r21,24(sp)
   44730:	04c0c616 	blt	zero,r19,44a4c <_dtoa_r+0x10d0>
   44734:	b0016e1e 	bne	r22,zero,44cf0 <_dtoa_r+0x1374>
   44738:	8827883a 	mov	r19,r17
   4473c:	e0bfffc4 	addi	r2,fp,-1
   44740:	1485883a 	add	r2,r2,r18
   44744:	d8800515 	stw	r2,20(sp)
   44748:	d8800217 	ldw	r2,8(sp)
   4474c:	e02d883a 	mov	r22,fp
   44750:	df000815 	stw	fp,32(sp)
   44754:	1080004c 	andi	r2,r2,1
   44758:	d8800715 	stw	r2,28(sp)
   4475c:	dc800317 	ldw	r18,12(sp)
   44760:	b809883a 	mov	r4,r23
   44764:	900b883a 	mov	r5,r18
   44768:	00437800 	call	43780 <quorem>
   4476c:	880b883a 	mov	r5,r17
   44770:	b809883a 	mov	r4,r23
   44774:	102b883a 	mov	r21,r2
   44778:	00479ec0 	call	479ec <__mcmp>
   4477c:	900b883a 	mov	r5,r18
   44780:	980d883a 	mov	r6,r19
   44784:	8009883a 	mov	r4,r16
   44788:	1025883a 	mov	r18,r2
   4478c:	0047a440 	call	47a44 <__mdiff>
   44790:	100b883a 	mov	r5,r2
   44794:	10800317 	ldw	r2,12(r2)
   44798:	af000c04 	addi	fp,r21,48
   4479c:	1000261e 	bne	r2,zero,44838 <_dtoa_r+0xebc>
   447a0:	b809883a 	mov	r4,r23
   447a4:	d9400415 	stw	r5,16(sp)
   447a8:	00479ec0 	call	479ec <__mcmp>
   447ac:	d9400417 	ldw	r5,16(sp)
   447b0:	1029883a 	mov	r20,r2
   447b4:	8009883a 	mov	r4,r16
   447b8:	00470700 	call	47070 <_Bfree>
   447bc:	a000401e 	bne	r20,zero,448c0 <_dtoa_r+0xf44>
   447c0:	d8800117 	ldw	r2,4(sp)
   447c4:	1000021e 	bne	r2,zero,447d0 <_dtoa_r+0xe54>
   447c8:	d8800717 	ldw	r2,28(sp)
   447cc:	1000cb26 	beq	r2,zero,44afc <_dtoa_r+0x1180>
   447d0:	90020816 	blt	r18,zero,44ff4 <_dtoa_r+0x1678>
   447d4:	d8800517 	ldw	r2,20(sp)
   447d8:	b7000005 	stb	fp,0(r22)
   447dc:	b4800044 	addi	r18,r22,1
   447e0:	15815426 	beq	r2,r22,44d34 <_dtoa_r+0x13b8>
   447e4:	b80b883a 	mov	r5,r23
   447e8:	000f883a 	mov	r7,zero
   447ec:	01800284 	movi	r6,10
   447f0:	8009883a 	mov	r4,r16
   447f4:	00470940 	call	47094 <__multadd>
   447f8:	102f883a 	mov	r23,r2
   447fc:	880b883a 	mov	r5,r17
   44800:	000f883a 	mov	r7,zero
   44804:	01800284 	movi	r6,10
   44808:	8009883a 	mov	r4,r16
   4480c:	8cc02826 	beq	r17,r19,448b0 <_dtoa_r+0xf34>
   44810:	00470940 	call	47094 <__multadd>
   44814:	980b883a 	mov	r5,r19
   44818:	000f883a 	mov	r7,zero
   4481c:	01800284 	movi	r6,10
   44820:	8009883a 	mov	r4,r16
   44824:	1023883a 	mov	r17,r2
   44828:	00470940 	call	47094 <__multadd>
   4482c:	1027883a 	mov	r19,r2
   44830:	902d883a 	mov	r22,r18
   44834:	003fc906 	br	4475c <_dtoa_r+0xde0>
   44838:	8009883a 	mov	r4,r16
   4483c:	e029883a 	mov	r20,fp
   44840:	df000817 	ldw	fp,32(sp)
   44844:	00470700 	call	47070 <_Bfree>
   44848:	90000616 	blt	r18,zero,44864 <_dtoa_r+0xee8>
   4484c:	d8800217 	ldw	r2,8(sp)
   44850:	d8c00117 	ldw	r3,4(sp)
   44854:	1080004c 	andi	r2,r2,1
   44858:	1ca4b03a 	or	r18,r3,r18
   4485c:	1484b03a 	or	r2,r2,r18
   44860:	1000201e 	bne	r2,zero,448e4 <_dtoa_r+0xf68>
   44864:	b80b883a 	mov	r5,r23
   44868:	8009883a 	mov	r4,r16
   4486c:	01800044 	movi	r6,1
   44870:	00478640 	call	47864 <__lshift>
   44874:	d9400317 	ldw	r5,12(sp)
   44878:	1009883a 	mov	r4,r2
   4487c:	102f883a 	mov	r23,r2
   44880:	00479ec0 	call	479ec <__mcmp>
   44884:	0080990e 	bge	zero,r2,44aec <_dtoa_r+0x1170>
   44888:	a0c00e60 	cmpeqi	r3,r20,57
   4488c:	1801ce1e 	bne	r3,zero,44fc8 <_dtoa_r+0x164c>
   44890:	ad000c44 	addi	r20,r21,49
   44894:	d8800617 	ldw	r2,24(sp)
   44898:	dc400215 	stw	r17,8(sp)
   4489c:	b2000044 	addi	r8,r22,1
   448a0:	b5000005 	stb	r20,0(r22)
   448a4:	15400044 	addi	r21,r2,1
   448a8:	9823883a 	mov	r17,r19
   448ac:	003f2b06 	br	4455c <_dtoa_r+0xbe0>
   448b0:	00470940 	call	47094 <__multadd>
   448b4:	1023883a 	mov	r17,r2
   448b8:	1027883a 	mov	r19,r2
   448bc:	003fdc06 	br	44830 <_dtoa_r+0xeb4>
   448c0:	90022316 	blt	r18,zero,45150 <_dtoa_r+0x17d4>
   448c4:	d8800117 	ldw	r2,4(sp)
   448c8:	14a4b03a 	or	r18,r2,r18
   448cc:	d8800717 	ldw	r2,28(sp)
   448d0:	14a4b03a 	or	r18,r2,r18
   448d4:	90021e26 	beq	r18,zero,45150 <_dtoa_r+0x17d4>
   448d8:	053fbe0e 	bge	zero,r20,447d4 <_dtoa_r+0xe58>
   448dc:	e029883a 	mov	r20,fp
   448e0:	df000817 	ldw	fp,32(sp)
   448e4:	a0800e60 	cmpeqi	r2,r20,57
   448e8:	1001b71e 	bne	r2,zero,44fc8 <_dtoa_r+0x164c>
   448ec:	d8800617 	ldw	r2,24(sp)
   448f0:	a0c00044 	addi	r3,r20,1
   448f4:	dc400215 	stw	r17,8(sp)
   448f8:	b2000044 	addi	r8,r22,1
   448fc:	15400044 	addi	r21,r2,1
   44900:	b0c00005 	stb	r3,0(r22)
   44904:	9823883a 	mov	r17,r19
   44908:	003f1406 	br	4455c <_dtoa_r+0xbe0>
   4490c:	d8800117 	ldw	r2,4(sp)
   44910:	108000d0 	cmplti	r2,r2,3
   44914:	103ee31e 	bne	r2,zero,444a4 <_dtoa_r+0xb28>
   44918:	9000d81e 	bne	r18,zero,44c7c <_dtoa_r+0x1300>
   4491c:	d9400317 	ldw	r5,12(sp)
   44920:	8009883a 	mov	r4,r16
   44924:	000f883a 	mov	r7,zero
   44928:	01800144 	movi	r6,5
   4492c:	00470940 	call	47094 <__multadd>
   44930:	100b883a 	mov	r5,r2
   44934:	b809883a 	mov	r4,r23
   44938:	d8800315 	stw	r2,12(sp)
   4493c:	00479ec0 	call	479ec <__mcmp>
   44940:	0080ce0e 	bge	zero,r2,44c7c <_dtoa_r+0x1300>
   44944:	00800c44 	movi	r2,49
   44948:	e0800005 	stb	r2,0(fp)
   4494c:	d8800617 	ldw	r2,24(sp)
   44950:	e2000044 	addi	r8,fp,1
   44954:	14800044 	addi	r18,r2,1
   44958:	d9400317 	ldw	r5,12(sp)
   4495c:	8009883a 	mov	r4,r16
   44960:	da000115 	stw	r8,4(sp)
   44964:	00470700 	call	47070 <_Bfree>
   44968:	da000117 	ldw	r8,4(sp)
   4496c:	95400044 	addi	r21,r18,1
   44970:	883f061e 	bne	r17,zero,4458c <_dtoa_r+0xc10>
   44974:	003f0a06 	br	445a0 <_dtoa_r+0xc24>
   44978:	100b883a 	mov	r5,r2
   4497c:	b00d883a 	mov	r6,r22
   44980:	8009883a 	mov	r4,r16
   44984:	00477240 	call	47724 <__pow5mult>
   44988:	d8c00117 	ldw	r3,4(sp)
   4498c:	d8800315 	stw	r2,12(sp)
   44990:	18c00090 	cmplti	r3,r3,2
   44994:	1800461e 	bne	r3,zero,44ab0 <_dtoa_r+0x1134>
   44998:	002d883a 	mov	r22,zero
   4499c:	d8c00317 	ldw	r3,12(sp)
   449a0:	18800417 	ldw	r2,16(r3)
   449a4:	10800104 	addi	r2,r2,4
   449a8:	100490ba 	slli	r2,r2,2
   449ac:	1885883a 	add	r2,r3,r2
   449b0:	11000017 	ldw	r4,0(r2)
   449b4:	00472fc0 	call	472fc <__hi0bits>
   449b8:	00c00804 	movi	r3,32
   449bc:	1885c83a 	sub	r2,r3,r2
   449c0:	003e9706 	br	44420 <_dtoa_r+0xaa4>
   449c4:	00800174 	movhi	r2,5
   449c8:	e7005f04 	addi	fp,fp,380
   449cc:	10805fc4 	addi	r2,r2,383
   449d0:	003db106 	br	44098 <_dtoa_r+0x71c>
   449d4:	00800044 	movi	r2,1
   449d8:	d8800715 	stw	r2,28(sp)
   449dc:	003f4006 	br	446e0 <_dtoa_r+0xd64>
   449e0:	00800044 	movi	r2,1
   449e4:	04800044 	movi	r18,1
   449e8:	d8801f15 	stw	r2,124(sp)
   449ec:	003e6306 	br	4437c <_dtoa_r+0xa00>
   449f0:	d8800217 	ldw	r2,8(sp)
   449f4:	103e891e 	bne	r2,zero,4441c <_dtoa_r+0xaa0>
   449f8:	00800434 	movhi	r2,16
   449fc:	10bfffc4 	addi	r2,r2,-1
   44a00:	a884703a 	and	r2,r21,r2
   44a04:	103e851e 	bne	r2,zero,4441c <_dtoa_r+0xaa0>
   44a08:	a89ffc2c 	andhi	r2,r21,32752
   44a0c:	10017c26 	beq	r2,zero,45000 <_dtoa_r+0x1684>
   44a10:	d8800517 	ldw	r2,20(sp)
   44a14:	10800044 	addi	r2,r2,1
   44a18:	d8800515 	stw	r2,20(sp)
   44a1c:	d8800417 	ldw	r2,16(sp)
   44a20:	10800044 	addi	r2,r2,1
   44a24:	d8800415 	stw	r2,16(sp)
   44a28:	00800044 	movi	r2,1
   44a2c:	b001761e 	bne	r22,zero,45008 <_dtoa_r+0x168c>
   44a30:	102d883a 	mov	r22,r2
   44a34:	003e7906 	br	4441c <_dtoa_r+0xaa0>
   44a38:	18c00120 	cmpeqi	r3,r3,4
   44a3c:	183e881e 	bne	r3,zero,44460 <_dtoa_r+0xae4>
   44a40:	00c00f04 	movi	r3,60
   44a44:	1885c83a 	sub	r2,r3,r2
   44a48:	003f1206 	br	44694 <_dtoa_r+0xd18>
   44a4c:	880b883a 	mov	r5,r17
   44a50:	980d883a 	mov	r6,r19
   44a54:	8009883a 	mov	r4,r16
   44a58:	00478640 	call	47864 <__lshift>
   44a5c:	1023883a 	mov	r17,r2
   44a60:	003f3406 	br	44734 <_dtoa_r+0xdb8>
   44a64:	1805883a 	mov	r2,r3
   44a68:	003e5306 	br	443b8 <_dtoa_r+0xa3c>
   44a6c:	d8800317 	ldw	r2,12(sp)
   44a70:	d8c00517 	ldw	r3,20(sp)
   44a74:	dd000315 	stw	r20,12(sp)
   44a78:	a085c83a 	sub	r2,r20,r2
   44a7c:	b0ad883a 	add	r22,r22,r2
   44a80:	d8800417 	ldw	r2,16(sp)
   44a84:	1827883a 	mov	r19,r3
   44a88:	0029883a 	mov	r20,zero
   44a8c:	1485883a 	add	r2,r2,r18
   44a90:	d8800415 	stw	r2,16(sp)
   44a94:	1c85883a 	add	r2,r3,r18
   44a98:	d8800515 	stw	r2,20(sp)
   44a9c:	01400044 	movi	r5,1
   44aa0:	8009883a 	mov	r4,r16
   44aa4:	00474200 	call	47420 <__i2b>
   44aa8:	1023883a 	mov	r17,r2
   44aac:	003e3d06 	br	443a4 <_dtoa_r+0xa28>
   44ab0:	d8800217 	ldw	r2,8(sp)
   44ab4:	103fb81e 	bne	r2,zero,44998 <_dtoa_r+0x101c>
   44ab8:	00800434 	movhi	r2,16
   44abc:	10bfffc4 	addi	r2,r2,-1
   44ac0:	a884703a 	and	r2,r21,r2
   44ac4:	103fb41e 	bne	r2,zero,44998 <_dtoa_r+0x101c>
   44ac8:	003fcf06 	br	44a08 <_dtoa_r+0x108c>
   44acc:	d9000217 	ldw	r4,8(sp)
   44ad0:	a80b883a 	mov	r5,r21
   44ad4:	04c00084 	movi	r19,2
   44ad8:	003c9506 	br	43d30 <_dtoa_r+0x3b4>
   44adc:	00800084 	movi	r2,2
   44ae0:	d8800115 	stw	r2,4(sp)
   44ae4:	d8000715 	stw	zero,28(sp)
   44ae8:	003efd06 	br	446e0 <_dtoa_r+0xd64>
   44aec:	103f691e 	bne	r2,zero,44894 <_dtoa_r+0xf18>
   44af0:	a080004c 	andi	r2,r20,1
   44af4:	103f641e 	bne	r2,zero,44888 <_dtoa_r+0xf0c>
   44af8:	003f6606 	br	44894 <_dtoa_r+0xf18>
   44afc:	e029883a 	mov	r20,fp
   44b00:	a0800e60 	cmpeqi	r2,r20,57
   44b04:	df000817 	ldw	fp,32(sp)
   44b08:	10012f1e 	bne	r2,zero,44fc8 <_dtoa_r+0x164c>
   44b0c:	04bf6016 	blt	zero,r18,44890 <_dtoa_r+0xf14>
   44b10:	003f6006 	br	44894 <_dtoa_r+0xf18>
   44b14:	04400044 	movi	r17,1
   44b18:	d8000715 	stw	zero,28(sp)
   44b1c:	003c5006 	br	43c60 <_dtoa_r+0x2e4>
   44b20:	1000021e 	bne	r2,zero,44b2c <_dtoa_r+0x11b0>
   44b24:	a0c0004c 	andi	r3,r20,1
   44b28:	183e821e 	bne	r3,zero,44534 <_dtoa_r+0xbb8>
   44b2c:	90bfffc7 	ldb	r2,-1(r18)
   44b30:	9011883a 	mov	r8,r18
   44b34:	94bfffc4 	addi	r18,r18,-1
   44b38:	10800c20 	cmpeqi	r2,r2,48
   44b3c:	103ffb1e 	bne	r2,zero,44b2c <_dtoa_r+0x11b0>
   44b40:	003e8606 	br	4455c <_dtoa_r+0xbe0>
   44b44:	d8c00917 	ldw	r3,36(sp)
   44b48:	18009526 	beq	r3,zero,44da0 <_dtoa_r+0x1424>
   44b4c:	d8c00517 	ldw	r3,20(sp)
   44b50:	d9000417 	ldw	r4,16(sp)
   44b54:	10810cc4 	addi	r2,r2,1075
   44b58:	dd000317 	ldw	r20,12(sp)
   44b5c:	2089883a 	add	r4,r4,r2
   44b60:	1885883a 	add	r2,r3,r2
   44b64:	1827883a 	mov	r19,r3
   44b68:	d9000415 	stw	r4,16(sp)
   44b6c:	d8800515 	stw	r2,20(sp)
   44b70:	003fca06 	br	44a9c <_dtoa_r+0x1120>
   44b74:	00800c44 	movi	r2,49
   44b78:	e0800005 	stb	r2,0(fp)
   44b7c:	ad400044 	addi	r21,r21,1
   44b80:	003e7606 	br	4455c <_dtoa_r+0xbe0>
   44b84:	00800044 	movi	r2,1
   44b88:	1505c83a 	sub	r2,r2,r20
   44b8c:	d8800515 	stw	r2,20(sp)
   44b90:	d8000415 	stw	zero,16(sp)
   44b94:	d8000815 	stw	zero,32(sp)
   44b98:	003dea06 	br	44344 <_dtoa_r+0x9c8>
   44b9c:	d8800617 	ldw	r2,24(sp)
   44ba0:	1000e326 	beq	r2,zero,44f30 <_dtoa_r+0x15b4>
   44ba4:	0091c83a 	sub	r8,zero,r2
   44ba8:	408003cc 	andi	r2,r8,15
   44bac:	100490fa 	slli	r2,r2,3
   44bb0:	02c00174 	movhi	r11,5
   44bb4:	5ac09a04 	addi	r11,r11,616
   44bb8:	5885883a 	add	r2,r11,r2
   44bbc:	4011d13a 	srai	r8,r8,4
   44bc0:	11800017 	ldw	r6,0(r2)
   44bc4:	11c00117 	ldw	r7,4(r2)
   44bc8:	d9000217 	ldw	r4,8(sp)
   44bcc:	a80b883a 	mov	r5,r21
   44bd0:	da000b15 	stw	r8,44(sp)
   44bd4:	004c4240 	call	4c424 <__muldf3>
   44bd8:	da000b17 	ldw	r8,44(sp)
   44bdc:	40013726 	beq	r8,zero,450bc <_dtoa_r+0x1740>
   44be0:	02400174 	movhi	r9,5
   44be4:	000b883a 	mov	r5,zero
   44be8:	04c00084 	movi	r19,2
   44bec:	4a409004 	addi	r9,r9,576
   44bf0:	dc800b15 	stw	r18,44(sp)
   44bf4:	1009883a 	mov	r4,r2
   44bf8:	9825883a 	mov	r18,r19
   44bfc:	d8800c15 	stw	r2,48(sp)
   44c00:	8027883a 	mov	r19,r16
   44c04:	2805883a 	mov	r2,r5
   44c08:	1829883a 	mov	r20,r3
   44c0c:	4021883a 	mov	r16,r8
   44c10:	4823883a 	mov	r17,r9
   44c14:	180b883a 	mov	r5,r3
   44c18:	8180004c 	andi	r6,r16,1
   44c1c:	30000726 	beq	r6,zero,44c3c <_dtoa_r+0x12c0>
   44c20:	89800017 	ldw	r6,0(r17)
   44c24:	89c00117 	ldw	r7,4(r17)
   44c28:	94800044 	addi	r18,r18,1
   44c2c:	004c4240 	call	4c424 <__muldf3>
   44c30:	1009883a 	mov	r4,r2
   44c34:	180b883a 	mov	r5,r3
   44c38:	00800044 	movi	r2,1
   44c3c:	8021d07a 	srai	r16,r16,1
   44c40:	8c400204 	addi	r17,r17,8
   44c44:	803ff41e 	bne	r16,zero,44c18 <_dtoa_r+0x129c>
   44c48:	a007883a 	mov	r3,r20
   44c4c:	2829883a 	mov	r20,r5
   44c50:	100b883a 	mov	r5,r2
   44c54:	29403fcc 	andi	r5,r5,255
   44c58:	9821883a 	mov	r16,r19
   44c5c:	d8800c17 	ldw	r2,48(sp)
   44c60:	9027883a 	mov	r19,r18
   44c64:	2023883a 	mov	r17,r4
   44c68:	dc800b17 	ldw	r18,44(sp)
   44c6c:	283c521e 	bne	r5,zero,43db8 <_dtoa_r+0x43c>
   44c70:	1023883a 	mov	r17,r2
   44c74:	1829883a 	mov	r20,r3
   44c78:	003c4f06 	br	43db8 <_dtoa_r+0x43c>
   44c7c:	e011883a 	mov	r8,fp
   44c80:	003d5806 	br	441e4 <_dtoa_r+0x868>
   44c84:	8023883a 	mov	r17,r16
   44c88:	ddc00217 	ldw	r23,8(sp)
   44c8c:	dc000417 	ldw	r16,16(sp)
   44c90:	200d883a 	mov	r6,r4
   44c94:	280f883a 	mov	r7,r5
   44c98:	004b8980 	call	4b898 <__adddf3>
   44c9c:	1009883a 	mov	r4,r2
   44ca0:	d9800117 	ldw	r6,4(sp)
   44ca4:	d9c00317 	ldw	r7,12(sp)
   44ca8:	1029883a 	mov	r20,r2
   44cac:	d8800617 	ldw	r2,24(sp)
   44cb0:	180b883a 	mov	r5,r3
   44cb4:	1825883a 	mov	r18,r3
   44cb8:	15400044 	addi	r21,r2,1
   44cbc:	004c2300 	call	4c230 <__gedf2>
   44cc0:	a82d883a 	mov	r22,r21
   44cc4:	00bcd016 	blt	zero,r2,44008 <_dtoa_r+0x68c>
   44cc8:	d9800117 	ldw	r6,4(sp)
   44ccc:	d9c00317 	ldw	r7,12(sp)
   44cd0:	a009883a 	mov	r4,r20
   44cd4:	900b883a 	mov	r5,r18
   44cd8:	004c19c0 	call	4c19c <__eqdf2>
   44cdc:	1000021e 	bne	r2,zero,44ce8 <_dtoa_r+0x136c>
   44ce0:	8880004c 	andi	r2,r17,1
   44ce4:	103cc81e 	bne	r2,zero,44008 <_dtoa_r+0x68c>
   44ce8:	9811883a 	mov	r8,r19
   44cec:	003e2c06 	br	445a0 <_dtoa_r+0xc24>
   44cf0:	89400117 	ldw	r5,4(r17)
   44cf4:	8009883a 	mov	r4,r16
   44cf8:	0046fcc0 	call	46fcc <_Balloc>
   44cfc:	1027883a 	mov	r19,r2
   44d00:	1000f226 	beq	r2,zero,450cc <_dtoa_r+0x1750>
   44d04:	89800417 	ldw	r6,16(r17)
   44d08:	89400304 	addi	r5,r17,12
   44d0c:	11000304 	addi	r4,r2,12
   44d10:	31800084 	addi	r6,r6,2
   44d14:	300c90ba 	slli	r6,r6,2
   44d18:	0046cac0 	call	46cac <memcpy>
   44d1c:	980b883a 	mov	r5,r19
   44d20:	01800044 	movi	r6,1
   44d24:	8009883a 	mov	r4,r16
   44d28:	00478640 	call	47864 <__lshift>
   44d2c:	1027883a 	mov	r19,r2
   44d30:	003e8206 	br	4473c <_dtoa_r+0xdc0>
   44d34:	d8800617 	ldw	r2,24(sp)
   44d38:	e029883a 	mov	r20,fp
   44d3c:	dc400215 	stw	r17,8(sp)
   44d40:	df000817 	ldw	fp,32(sp)
   44d44:	15400044 	addi	r21,r2,1
   44d48:	9823883a 	mov	r17,r19
   44d4c:	003dee06 	br	44508 <_dtoa_r+0xb8c>
   44d50:	880b883a 	mov	r5,r17
   44d54:	a00d883a 	mov	r6,r20
   44d58:	8009883a 	mov	r4,r16
   44d5c:	00477240 	call	47724 <__pow5mult>
   44d60:	b80d883a 	mov	r6,r23
   44d64:	100b883a 	mov	r5,r2
   44d68:	8009883a 	mov	r4,r16
   44d6c:	1023883a 	mov	r17,r2
   44d70:	00474d00 	call	474d0 <__multiply>
   44d74:	d8800915 	stw	r2,36(sp)
   44d78:	d8800317 	ldw	r2,12(sp)
   44d7c:	b80b883a 	mov	r5,r23
   44d80:	8009883a 	mov	r4,r16
   44d84:	1529c83a 	sub	r20,r2,r20
   44d88:	dd000315 	stw	r20,12(sp)
   44d8c:	00470700 	call	47070 <_Bfree>
   44d90:	d8800917 	ldw	r2,36(sp)
   44d94:	102f883a 	mov	r23,r2
   44d98:	a03d9826 	beq	r20,zero,443fc <_dtoa_r+0xa80>
   44d9c:	003d9206 	br	443e8 <_dtoa_r+0xa6c>
   44da0:	d8c01317 	ldw	r3,76(sp)
   44da4:	00800d84 	movi	r2,54
   44da8:	d9000517 	ldw	r4,20(sp)
   44dac:	10c5c83a 	sub	r2,r2,r3
   44db0:	d8c00417 	ldw	r3,16(sp)
   44db4:	dd000317 	ldw	r20,12(sp)
   44db8:	2027883a 	mov	r19,r4
   44dbc:	1887883a 	add	r3,r3,r2
   44dc0:	2085883a 	add	r2,r4,r2
   44dc4:	d8c00415 	stw	r3,16(sp)
   44dc8:	d8800515 	stw	r2,20(sp)
   44dcc:	003f3306 	br	44a9c <_dtoa_r+0x1120>
   44dd0:	d9000b17 	ldw	r4,44(sp)
   44dd4:	d9800f17 	ldw	r6,60(sp)
   44dd8:	d9c01017 	ldw	r7,64(sp)
   44ddc:	980b883a 	mov	r5,r19
   44de0:	dac01215 	stw	r11,72(sp)
   44de4:	da000d15 	stw	r8,52(sp)
   44de8:	004c4240 	call	4c424 <__muldf3>
   44dec:	d9000e17 	ldw	r4,56(sp)
   44df0:	d9400c17 	ldw	r5,48(sp)
   44df4:	d8800715 	stw	r2,28(sp)
   44df8:	e1000005 	stb	r4,0(fp)
   44dfc:	d8c00915 	stw	r3,36(sp)
   44e00:	29000058 	cmpnei	r4,r5,1
   44e04:	da000d17 	ldw	r8,52(sp)
   44e08:	dac01217 	ldw	r11,72(sp)
   44e0c:	e167883a 	add	r19,fp,r5
   44e10:	2000a126 	beq	r4,zero,45098 <_dtoa_r+0x171c>
   44e14:	dc000c15 	stw	r16,48(sp)
   44e18:	dc800b15 	stw	r18,44(sp)
   44e1c:	4021883a 	mov	r16,r8
   44e20:	a009883a 	mov	r4,r20
   44e24:	880b883a 	mov	r5,r17
   44e28:	dac00d15 	stw	r11,52(sp)
   44e2c:	000d883a 	mov	r6,zero
   44e30:	01d00934 	movhi	r7,16420
   44e34:	004c4240 	call	4c424 <__muldf3>
   44e38:	180b883a 	mov	r5,r3
   44e3c:	1009883a 	mov	r4,r2
   44e40:	1825883a 	mov	r18,r3
   44e44:	1029883a 	mov	r20,r2
   44e48:	004d4ec0 	call	4d4ec <__fixdfsi>
   44e4c:	1009883a 	mov	r4,r2
   44e50:	1023883a 	mov	r17,r2
   44e54:	004d56c0 	call	4d56c <__floatsidf>
   44e58:	a009883a 	mov	r4,r20
   44e5c:	900b883a 	mov	r5,r18
   44e60:	100d883a 	mov	r6,r2
   44e64:	180f883a 	mov	r7,r3
   44e68:	84000044 	addi	r16,r16,1
   44e6c:	8c400c04 	addi	r17,r17,48
   44e70:	004cafc0 	call	4cafc <__subdf3>
   44e74:	847fffc5 	stb	r17,-1(r16)
   44e78:	1009883a 	mov	r4,r2
   44e7c:	180b883a 	mov	r5,r3
   44e80:	9c3fea1e 	bne	r19,r16,44e2c <_dtoa_r+0x14b0>
   44e84:	dc800b17 	ldw	r18,44(sp)
   44e88:	dc000c17 	ldw	r16,48(sp)
   44e8c:	dac00d17 	ldw	r11,52(sp)
   44e90:	1029883a 	mov	r20,r2
   44e94:	1823883a 	mov	r17,r3
   44e98:	d9000717 	ldw	r4,28(sp)
   44e9c:	d9400917 	ldw	r5,36(sp)
   44ea0:	000d883a 	mov	r6,zero
   44ea4:	01cff834 	movhi	r7,16352
   44ea8:	dac00b15 	stw	r11,44(sp)
   44eac:	004b8980 	call	4b898 <__adddf3>
   44eb0:	100d883a 	mov	r6,r2
   44eb4:	180f883a 	mov	r7,r3
   44eb8:	a009883a 	mov	r4,r20
   44ebc:	880b883a 	mov	r5,r17
   44ec0:	004c2300 	call	4c230 <__gedf2>
   44ec4:	00805916 	blt	zero,r2,4502c <_dtoa_r+0x16b0>
   44ec8:	d9800717 	ldw	r6,28(sp)
   44ecc:	d9c00917 	ldw	r7,36(sp)
   44ed0:	0009883a 	mov	r4,zero
   44ed4:	014ff834 	movhi	r5,16352
   44ed8:	004cafc0 	call	4cafc <__subdf3>
   44edc:	100d883a 	mov	r6,r2
   44ee0:	180f883a 	mov	r7,r3
   44ee4:	a009883a 	mov	r4,r20
   44ee8:	880b883a 	mov	r5,r17
   44eec:	004c32c0 	call	4c32c <__ledf2>
   44ef0:	dac00b17 	ldw	r11,44(sp)
   44ef4:	10000616 	blt	r2,zero,44f10 <_dtoa_r+0x1594>
   44ef8:	d8801417 	ldw	r2,80(sp)
   44efc:	103d2516 	blt	r2,zero,44394 <_dtoa_r+0xa18>
   44f00:	d8800617 	ldw	r2,24(sp)
   44f04:	108003c8 	cmpgei	r2,r2,15
   44f08:	103d221e 	bne	r2,zero,44394 <_dtoa_r+0xa18>
   44f0c:	003c9c06 	br	44180 <_dtoa_r+0x804>
   44f10:	98bfffc7 	ldb	r2,-1(r19)
   44f14:	9811883a 	mov	r8,r19
   44f18:	9cffffc4 	addi	r19,r19,-1
   44f1c:	10800c20 	cmpeqi	r2,r2,48
   44f20:	103ffb1e 	bne	r2,zero,44f10 <_dtoa_r+0x1594>
   44f24:	d8801117 	ldw	r2,68(sp)
   44f28:	15400044 	addi	r21,r2,1
   44f2c:	003d9c06 	br	445a0 <_dtoa_r+0xc24>
   44f30:	dc400217 	ldw	r17,8(sp)
   44f34:	a829883a 	mov	r20,r21
   44f38:	04c00084 	movi	r19,2
   44f3c:	003b9e06 	br	43db8 <_dtoa_r+0x43c>
   44f40:	903c6626 	beq	r18,zero,440dc <_dtoa_r+0x760>
   44f44:	d8800a17 	ldw	r2,40(sp)
   44f48:	00bc860e 	bge	zero,r2,44164 <_dtoa_r+0x7e8>
   44f4c:	a00b883a 	mov	r5,r20
   44f50:	8809883a 	mov	r4,r17
   44f54:	000d883a 	mov	r6,zero
   44f58:	01d00934 	movhi	r7,16420
   44f5c:	004c4240 	call	4c424 <__muldf3>
   44f60:	99000044 	addi	r4,r19,1
   44f64:	1023883a 	mov	r17,r2
   44f68:	1829883a 	mov	r20,r3
   44f6c:	004d56c0 	call	4d56c <__floatsidf>
   44f70:	880d883a 	mov	r6,r17
   44f74:	a00f883a 	mov	r7,r20
   44f78:	1009883a 	mov	r4,r2
   44f7c:	180b883a 	mov	r5,r3
   44f80:	004c4240 	call	4c424 <__muldf3>
   44f84:	1009883a 	mov	r4,r2
   44f88:	000d883a 	mov	r6,zero
   44f8c:	01d00734 	movhi	r7,16412
   44f90:	180b883a 	mov	r5,r3
   44f94:	004b8980 	call	4b898 <__adddf3>
   44f98:	d9000617 	ldw	r4,24(sp)
   44f9c:	d8800b15 	stw	r2,44(sp)
   44fa0:	00bf3034 	movhi	r2,64704
   44fa4:	18a7883a 	add	r19,r3,r2
   44fa8:	d8800a17 	ldw	r2,40(sp)
   44fac:	213fffc4 	addi	r4,r4,-1
   44fb0:	d9001115 	stw	r4,68(sp)
   44fb4:	d8800c15 	stw	r2,48(sp)
   44fb8:	003b9a06 	br	43e24 <_dtoa_r+0x4a8>
   44fbc:	00c00c44 	movi	r3,49
   44fc0:	b5800044 	addi	r22,r22,1
   44fc4:	003c1906 	br	4402c <_dtoa_r+0x6b0>
   44fc8:	00800e44 	movi	r2,57
   44fcc:	b0800005 	stb	r2,0(r22)
   44fd0:	d8800617 	ldw	r2,24(sp)
   44fd4:	dc400215 	stw	r17,8(sp)
   44fd8:	b4800044 	addi	r18,r22,1
   44fdc:	15400044 	addi	r21,r2,1
   44fe0:	9823883a 	mov	r17,r19
   44fe4:	003d5306 	br	44534 <_dtoa_r+0xbb8>
   44fe8:	d8000315 	stw	zero,12(sp)
   44fec:	0023883a 	mov	r17,zero
   44ff0:	003e5406 	br	44944 <_dtoa_r+0xfc8>
   44ff4:	e029883a 	mov	r20,fp
   44ff8:	df000817 	ldw	fp,32(sp)
   44ffc:	003e2506 	br	44894 <_dtoa_r+0xf18>
   45000:	0005883a 	mov	r2,zero
   45004:	003e8906 	br	44a2c <_dtoa_r+0x10b0>
   45008:	102d883a 	mov	r22,r2
   4500c:	003e6306 	br	4499c <_dtoa_r+0x1020>
   45010:	d8c00417 	ldw	r3,16(sp)
   45014:	1027883a 	mov	r19,r2
   45018:	1485883a 	add	r2,r2,r18
   4501c:	1c87883a 	add	r3,r3,r18
   45020:	d8c00415 	stw	r3,16(sp)
   45024:	d8800515 	stw	r2,20(sp)
   45028:	003e9c06 	br	44a9c <_dtoa_r+0x1120>
   4502c:	d8801117 	ldw	r2,68(sp)
   45030:	15800044 	addi	r22,r2,1
   45034:	003bf406 	br	44008 <_dtoa_r+0x68c>
   45038:	ddc00b17 	ldw	r23,44(sp)
   4503c:	dc000c17 	ldw	r16,48(sp)
   45040:	b011883a 	mov	r8,r22
   45044:	003fb706 	br	44f24 <_dtoa_r+0x15a8>
   45048:	dc800d17 	ldw	r18,52(sp)
   4504c:	dd800e17 	ldw	r22,56(sp)
   45050:	ddc00b17 	ldw	r23,44(sp)
   45054:	dc000c17 	ldw	r16,48(sp)
   45058:	dd400f17 	ldw	r21,60(sp)
   4505c:	003c4106 	br	44164 <_dtoa_r+0x7e8>
   45060:	d8800117 	ldw	r2,4(sp)
   45064:	108000c8 	cmpgei	r2,r2,3
   45068:	1000081e 	bne	r2,zero,4508c <_dtoa_r+0x1710>
   4506c:	d9400317 	ldw	r5,12(sp)
   45070:	b809883a 	mov	r4,r23
   45074:	00437800 	call	43780 <quorem>
   45078:	15000c04 	addi	r20,r2,48
   4507c:	dd400617 	ldw	r21,24(sp)
   45080:	dc800a17 	ldw	r18,40(sp)
   45084:	e5000005 	stb	r20,0(fp)
   45088:	003d1b06 	br	444f8 <_dtoa_r+0xb7c>
   4508c:	dc800a17 	ldw	r18,40(sp)
   45090:	dd400615 	stw	r21,24(sp)
   45094:	003e2006 	br	44918 <_dtoa_r+0xf9c>
   45098:	4027883a 	mov	r19,r8
   4509c:	003f7e06 	br	44e98 <_dtoa_r+0x151c>
   450a0:	d8800117 	ldw	r2,4(sp)
   450a4:	108000c8 	cmpgei	r2,r2,3
   450a8:	103ff81e 	bne	r2,zero,4508c <_dtoa_r+0x1710>
   450ac:	dd400615 	stw	r21,24(sp)
   450b0:	dc800a17 	ldw	r18,40(sp)
   450b4:	04fd9f0e 	bge	zero,r19,44734 <_dtoa_r+0xdb8>
   450b8:	003e6406 	br	44a4c <_dtoa_r+0x10d0>
   450bc:	1023883a 	mov	r17,r2
   450c0:	1829883a 	mov	r20,r3
   450c4:	04c00084 	movi	r19,2
   450c8:	003b3b06 	br	43db8 <_dtoa_r+0x43c>
   450cc:	01c00174 	movhi	r7,5
   450d0:	01000174 	movhi	r4,5
   450d4:	39c06004 	addi	r7,r7,384
   450d8:	000d883a 	mov	r6,zero
   450dc:	0140ba84 	movi	r5,746
   450e0:	21006504 	addi	r4,r4,404
   450e4:	0049dc40 	call	49dc4 <__assert_func>
   450e8:	01c00174 	movhi	r7,5
   450ec:	01000174 	movhi	r4,5
   450f0:	39c06004 	addi	r7,r7,384
   450f4:	000d883a 	mov	r6,zero
   450f8:	01406a84 	movi	r5,426
   450fc:	21006504 	addi	r4,r4,404
   45100:	0049dc40 	call	49dc4 <__assert_func>
   45104:	e7005c04 	addi	fp,fp,368
   45108:	003a4d06 	br	43a40 <_dtoa_r+0xc4>
   4510c:	80001115 	stw	zero,68(r16)
   45110:	000b883a 	mov	r5,zero
   45114:	8009883a 	mov	r4,r16
   45118:	0046fcc0 	call	46fcc <_Balloc>
   4511c:	1039883a 	mov	fp,r2
   45120:	103ff126 	beq	r2,zero,450e8 <_dtoa_r+0x176c>
   45124:	80801015 	stw	r2,64(r16)
   45128:	00bfffc4 	movi	r2,-1
   4512c:	d8800a15 	stw	r2,40(sp)
   45130:	00800044 	movi	r2,1
   45134:	04bfffc4 	movi	r18,-1
   45138:	d8800715 	stw	r2,28(sp)
   4513c:	d8001f15 	stw	zero,124(sp)
   45140:	003c0806 	br	44164 <_dtoa_r+0x7e8>
   45144:	80001115 	stw	zero,68(r16)
   45148:	000b883a 	mov	r5,zero
   4514c:	003ad506 	br	43ca4 <_dtoa_r+0x328>
   45150:	a005883a 	mov	r2,r20
   45154:	e029883a 	mov	r20,fp
   45158:	df000817 	ldw	fp,32(sp)
   4515c:	00bdcd0e 	bge	zero,r2,44894 <_dtoa_r+0xf18>
   45160:	003dc006 	br	44864 <_dtoa_r+0xee8>

00045164 <__sflush_r>:
   45164:	2880030b 	ldhu	r2,12(r5)
   45168:	defffb04 	addi	sp,sp,-20
   4516c:	dcc00315 	stw	r19,12(sp)
   45170:	dc000015 	stw	r16,0(sp)
   45174:	dfc00415 	stw	ra,16(sp)
   45178:	dc800215 	stw	r18,8(sp)
   4517c:	dc400115 	stw	r17,4(sp)
   45180:	10c0020c 	andi	r3,r2,8
   45184:	2821883a 	mov	r16,r5
   45188:	2027883a 	mov	r19,r4
   4518c:	18003c1e 	bne	r3,zero,45280 <__sflush_r+0x11c>
   45190:	29000117 	ldw	r4,4(r5)
   45194:	10c20014 	ori	r3,r2,2048
   45198:	28c0030d 	sth	r3,12(r5)
   4519c:	0100580e 	bge	zero,r4,45300 <__sflush_r+0x19c>
   451a0:	82000a17 	ldw	r8,40(r16)
   451a4:	40003426 	beq	r8,zero,45278 <__sflush_r+0x114>
   451a8:	9c400017 	ldw	r17,0(r19)
   451ac:	1084000c 	andi	r2,r2,4096
   451b0:	98000015 	stw	zero,0(r19)
   451b4:	81400717 	ldw	r5,28(r16)
   451b8:	1000561e 	bne	r2,zero,45314 <__sflush_r+0x1b0>
   451bc:	000d883a 	mov	r6,zero
   451c0:	01c00044 	movi	r7,1
   451c4:	9809883a 	mov	r4,r19
   451c8:	403ee83a 	callr	r8
   451cc:	100d883a 	mov	r6,r2
   451d0:	10bfffd8 	cmpnei	r2,r2,-1
   451d4:	10005b26 	beq	r2,zero,45344 <__sflush_r+0x1e0>
   451d8:	80c0030b 	ldhu	r3,12(r16)
   451dc:	82000a17 	ldw	r8,40(r16)
   451e0:	18c0010c 	andi	r3,r3,4
   451e4:	18000626 	beq	r3,zero,45200 <__sflush_r+0x9c>
   451e8:	80c00117 	ldw	r3,4(r16)
   451ec:	80800c17 	ldw	r2,48(r16)
   451f0:	30cdc83a 	sub	r6,r6,r3
   451f4:	10000226 	beq	r2,zero,45200 <__sflush_r+0x9c>
   451f8:	80800f17 	ldw	r2,60(r16)
   451fc:	308dc83a 	sub	r6,r6,r2
   45200:	81400717 	ldw	r5,28(r16)
   45204:	000f883a 	mov	r7,zero
   45208:	9809883a 	mov	r4,r19
   4520c:	403ee83a 	callr	r8
   45210:	10ffffd8 	cmpnei	r3,r2,-1
   45214:	1800411e 	bne	r3,zero,4531c <__sflush_r+0x1b8>
   45218:	99400017 	ldw	r5,0(r19)
   4521c:	28c007b0 	cmpltui	r3,r5,30
   45220:	18002c26 	beq	r3,zero,452d4 <__sflush_r+0x170>
   45224:	00f7f034 	movhi	r3,57280
   45228:	18ffff84 	addi	r3,r3,-2
   4522c:	1949d83a 	sra	r4,r3,r5
   45230:	80c0030b 	ldhu	r3,12(r16)
   45234:	2100004c 	andi	r4,r4,1
   45238:	2000271e 	bne	r4,zero,452d8 <__sflush_r+0x174>
   4523c:	81000417 	ldw	r4,16(r16)
   45240:	19bdffcc 	andi	r6,r3,63487
   45244:	8180030d 	sth	r6,12(r16)
   45248:	80000115 	stw	zero,4(r16)
   4524c:	81000015 	stw	r4,0(r16)
   45250:	18c4000c 	andi	r3,r3,4096
   45254:	1800431e 	bne	r3,zero,45364 <__sflush_r+0x200>
   45258:	81400c17 	ldw	r5,48(r16)
   4525c:	9c400015 	stw	r17,0(r19)
   45260:	28000526 	beq	r5,zero,45278 <__sflush_r+0x114>
   45264:	80801004 	addi	r2,r16,64
   45268:	28800226 	beq	r5,r2,45274 <__sflush_r+0x110>
   4526c:	9809883a 	mov	r4,r19
   45270:	00458f00 	call	458f0 <_free_r>
   45274:	80000c15 	stw	zero,48(r16)
   45278:	0005883a 	mov	r2,zero
   4527c:	00001906 	br	452e4 <__sflush_r+0x180>
   45280:	2c800417 	ldw	r18,16(r5)
   45284:	903ffc26 	beq	r18,zero,45278 <__sflush_r+0x114>
   45288:	2c400017 	ldw	r17,0(r5)
   4528c:	108000cc 	andi	r2,r2,3
   45290:	2c800015 	stw	r18,0(r5)
   45294:	8ca3c83a 	sub	r17,r17,r18
   45298:	10001c1e 	bne	r2,zero,4530c <__sflush_r+0x1a8>
   4529c:	28800517 	ldw	r2,20(r5)
   452a0:	80800215 	stw	r2,8(r16)
   452a4:	04400316 	blt	zero,r17,452b4 <__sflush_r+0x150>
   452a8:	003ff306 	br	45278 <__sflush_r+0x114>
   452ac:	90a5883a 	add	r18,r18,r2
   452b0:	047ff10e 	bge	zero,r17,45278 <__sflush_r+0x114>
   452b4:	80800917 	ldw	r2,36(r16)
   452b8:	81400717 	ldw	r5,28(r16)
   452bc:	880f883a 	mov	r7,r17
   452c0:	900d883a 	mov	r6,r18
   452c4:	9809883a 	mov	r4,r19
   452c8:	103ee83a 	callr	r2
   452cc:	88a3c83a 	sub	r17,r17,r2
   452d0:	00bff616 	blt	zero,r2,452ac <__sflush_r+0x148>
   452d4:	80c0030b 	ldhu	r3,12(r16)
   452d8:	18c01014 	ori	r3,r3,64
   452dc:	80c0030d 	sth	r3,12(r16)
   452e0:	00bfffc4 	movi	r2,-1
   452e4:	dfc00417 	ldw	ra,16(sp)
   452e8:	dcc00317 	ldw	r19,12(sp)
   452ec:	dc800217 	ldw	r18,8(sp)
   452f0:	dc400117 	ldw	r17,4(sp)
   452f4:	dc000017 	ldw	r16,0(sp)
   452f8:	dec00504 	addi	sp,sp,20
   452fc:	f800283a 	ret
   45300:	29000f17 	ldw	r4,60(r5)
   45304:	013fa616 	blt	zero,r4,451a0 <__sflush_r+0x3c>
   45308:	003fdb06 	br	45278 <__sflush_r+0x114>
   4530c:	0005883a 	mov	r2,zero
   45310:	003fe306 	br	452a0 <__sflush_r+0x13c>
   45314:	81801417 	ldw	r6,80(r16)
   45318:	003fb106 	br	451e0 <__sflush_r+0x7c>
   4531c:	80c0030b 	ldhu	r3,12(r16)
   45320:	81000417 	ldw	r4,16(r16)
   45324:	80000115 	stw	zero,4(r16)
   45328:	197dffcc 	andi	r5,r3,63487
   4532c:	8140030d 	sth	r5,12(r16)
   45330:	81000015 	stw	r4,0(r16)
   45334:	18c4000c 	andi	r3,r3,4096
   45338:	183fc726 	beq	r3,zero,45258 <__sflush_r+0xf4>
   4533c:	80801415 	stw	r2,80(r16)
   45340:	003fc506 	br	45258 <__sflush_r+0xf4>
   45344:	98800017 	ldw	r2,0(r19)
   45348:	103fa326 	beq	r2,zero,451d8 <__sflush_r+0x74>
   4534c:	10c00760 	cmpeqi	r3,r2,29
   45350:	1800021e 	bne	r3,zero,4535c <__sflush_r+0x1f8>
   45354:	10800598 	cmpnei	r2,r2,22
   45358:	103fde1e 	bne	r2,zero,452d4 <__sflush_r+0x170>
   4535c:	9c400015 	stw	r17,0(r19)
   45360:	003fc506 	br	45278 <__sflush_r+0x114>
   45364:	283fbc1e 	bne	r5,zero,45258 <__sflush_r+0xf4>
   45368:	003ff406 	br	4533c <__sflush_r+0x1d8>

0004536c <_fflush_r>:
   4536c:	defffd04 	addi	sp,sp,-12
   45370:	dc000115 	stw	r16,4(sp)
   45374:	dfc00215 	stw	ra,8(sp)
   45378:	2021883a 	mov	r16,r4
   4537c:	20000226 	beq	r4,zero,45388 <_fflush_r+0x1c>
   45380:	20800e17 	ldw	r2,56(r4)
   45384:	10000726 	beq	r2,zero,453a4 <_fflush_r+0x38>
   45388:	2880030f 	ldh	r2,12(r5)
   4538c:	10000a1e 	bne	r2,zero,453b8 <_fflush_r+0x4c>
   45390:	0005883a 	mov	r2,zero
   45394:	dfc00217 	ldw	ra,8(sp)
   45398:	dc000117 	ldw	r16,4(sp)
   4539c:	dec00304 	addi	sp,sp,12
   453a0:	f800283a 	ret
   453a4:	d9400015 	stw	r5,0(sp)
   453a8:	00457840 	call	45784 <__sinit>
   453ac:	d9400017 	ldw	r5,0(sp)
   453b0:	2880030f 	ldh	r2,12(r5)
   453b4:	103ff626 	beq	r2,zero,45390 <_fflush_r+0x24>
   453b8:	8009883a 	mov	r4,r16
   453bc:	dfc00217 	ldw	ra,8(sp)
   453c0:	dc000117 	ldw	r16,4(sp)
   453c4:	dec00304 	addi	sp,sp,12
   453c8:	00451641 	jmpi	45164 <__sflush_r>

000453cc <fflush>:
   453cc:	20001726 	beq	r4,zero,4542c <fflush+0x60>
   453d0:	00800174 	movhi	r2,5
   453d4:	200b883a 	mov	r5,r4
   453d8:	11087d17 	ldw	r4,8692(r2)
   453dc:	20000226 	beq	r4,zero,453e8 <fflush+0x1c>
   453e0:	20800e17 	ldw	r2,56(r4)
   453e4:	10000526 	beq	r2,zero,453fc <fflush+0x30>
   453e8:	2880030f 	ldh	r2,12(r5)
   453ec:	1000021e 	bne	r2,zero,453f8 <fflush+0x2c>
   453f0:	0005883a 	mov	r2,zero
   453f4:	f800283a 	ret
   453f8:	00451641 	jmpi	45164 <__sflush_r>
   453fc:	defffd04 	addi	sp,sp,-12
   45400:	d9400115 	stw	r5,4(sp)
   45404:	d9000015 	stw	r4,0(sp)
   45408:	dfc00215 	stw	ra,8(sp)
   4540c:	00457840 	call	45784 <__sinit>
   45410:	d9400117 	ldw	r5,4(sp)
   45414:	d9000017 	ldw	r4,0(sp)
   45418:	2880030f 	ldh	r2,12(r5)
   4541c:	10000826 	beq	r2,zero,45440 <fflush+0x74>
   45420:	dfc00217 	ldw	ra,8(sp)
   45424:	dec00304 	addi	sp,sp,12
   45428:	00451641 	jmpi	45164 <__sflush_r>
   4542c:	00800174 	movhi	r2,5
   45430:	11087c17 	ldw	r4,8688(r2)
   45434:	01400134 	movhi	r5,4
   45438:	2954db04 	addi	r5,r5,21356
   4543c:	00461341 	jmpi	46134 <_fwalk_reent>
   45440:	0005883a 	mov	r2,zero
   45444:	dfc00217 	ldw	ra,8(sp)
   45448:	dec00304 	addi	sp,sp,12
   4544c:	f800283a 	ret

00045450 <__fp_lock>:
   45450:	0005883a 	mov	r2,zero
   45454:	f800283a 	ret

00045458 <_cleanup_r>:
   45458:	01400174 	movhi	r5,5
   4545c:	2967e304 	addi	r5,r5,-24692
   45460:	00461341 	jmpi	46134 <_fwalk_reent>

00045464 <__fp_unlock>:
   45464:	0005883a 	mov	r2,zero
   45468:	f800283a 	ret

0004546c <__sinit.part.0>:
   4546c:	00c00134 	movhi	r3,4
   45470:	20800117 	ldw	r2,4(r4)
   45474:	18d51604 	addi	r3,r3,21592
   45478:	20c00f15 	stw	r3,60(r4)
   4547c:	2140bb04 	addi	r5,r4,748
   45480:	00c000c4 	movi	r3,3
   45484:	20c0b915 	stw	r3,740(r4)
   45488:	2140ba15 	stw	r5,744(r4)
   4548c:	2000b815 	stw	zero,736(r4)
   45490:	10001705 	stb	zero,92(r2)
   45494:	10001745 	stb	zero,93(r2)
   45498:	10001785 	stb	zero,94(r2)
   4549c:	100017c5 	stb	zero,95(r2)
   454a0:	10001805 	stb	zero,96(r2)
   454a4:	10001845 	stb	zero,97(r2)
   454a8:	10001885 	stb	zero,98(r2)
   454ac:	100018c5 	stb	zero,99(r2)
   454b0:	00c00104 	movi	r3,4
   454b4:	10c00315 	stw	r3,12(r2)
   454b8:	02000174 	movhi	r8,5
   454bc:	20c00217 	ldw	r3,8(r4)
   454c0:	01c00174 	movhi	r7,5
   454c4:	01800174 	movhi	r6,5
   454c8:	01400174 	movhi	r5,5
   454cc:	4221db04 	addi	r8,r8,-30868
   454d0:	39e1f204 	addi	r7,r7,-30776
   454d4:	31a21204 	addi	r6,r6,-30648
   454d8:	29622904 	addi	r5,r5,-30556
   454dc:	02400074 	movhi	r9,1
   454e0:	10000015 	stw	zero,0(r2)
   454e4:	10000115 	stw	zero,4(r2)
   454e8:	10000215 	stw	zero,8(r2)
   454ec:	10001915 	stw	zero,100(r2)
   454f0:	10000415 	stw	zero,16(r2)
   454f4:	10000515 	stw	zero,20(r2)
   454f8:	10000615 	stw	zero,24(r2)
   454fc:	10800715 	stw	r2,28(r2)
   45500:	12000815 	stw	r8,32(r2)
   45504:	11c00915 	stw	r7,36(r2)
   45508:	11800a15 	stw	r6,40(r2)
   4550c:	11400b15 	stw	r5,44(r2)
   45510:	4a400284 	addi	r9,r9,10
   45514:	1a400315 	stw	r9,12(r3)
   45518:	18000015 	stw	zero,0(r3)
   4551c:	18000115 	stw	zero,4(r3)
   45520:	18000215 	stw	zero,8(r3)
   45524:	18001915 	stw	zero,100(r3)
   45528:	18000415 	stw	zero,16(r3)
   4552c:	18001705 	stb	zero,92(r3)
   45530:	18001745 	stb	zero,93(r3)
   45534:	18001785 	stb	zero,94(r3)
   45538:	180017c5 	stb	zero,95(r3)
   4553c:	18001805 	stb	zero,96(r3)
   45540:	18001845 	stb	zero,97(r3)
   45544:	18001885 	stb	zero,98(r3)
   45548:	180018c5 	stb	zero,99(r3)
   4554c:	20800317 	ldw	r2,12(r4)
   45550:	024000b4 	movhi	r9,2
   45554:	18000515 	stw	zero,20(r3)
   45558:	18000615 	stw	zero,24(r3)
   4555c:	18c00715 	stw	r3,28(r3)
   45560:	1a000815 	stw	r8,32(r3)
   45564:	19c00915 	stw	r7,36(r3)
   45568:	19800a15 	stw	r6,40(r3)
   4556c:	19400b15 	stw	r5,44(r3)
   45570:	4a400484 	addi	r9,r9,18
   45574:	10000015 	stw	zero,0(r2)
   45578:	10000115 	stw	zero,4(r2)
   4557c:	10000215 	stw	zero,8(r2)
   45580:	10001915 	stw	zero,100(r2)
   45584:	12400315 	stw	r9,12(r2)
   45588:	10000415 	stw	zero,16(r2)
   4558c:	10000515 	stw	zero,20(r2)
   45590:	10000615 	stw	zero,24(r2)
   45594:	10001705 	stb	zero,92(r2)
   45598:	10001745 	stb	zero,93(r2)
   4559c:	10001785 	stb	zero,94(r2)
   455a0:	100017c5 	stb	zero,95(r2)
   455a4:	10001805 	stb	zero,96(r2)
   455a8:	10001845 	stb	zero,97(r2)
   455ac:	10001885 	stb	zero,98(r2)
   455b0:	100018c5 	stb	zero,99(r2)
   455b4:	10800715 	stw	r2,28(r2)
   455b8:	12000815 	stw	r8,32(r2)
   455bc:	11c00915 	stw	r7,36(r2)
   455c0:	11800a15 	stw	r6,40(r2)
   455c4:	11400b15 	stw	r5,44(r2)
   455c8:	00800044 	movi	r2,1
   455cc:	20800e15 	stw	r2,56(r4)
   455d0:	f800283a 	ret

000455d4 <__sfmoreglue>:
   455d4:	defffc04 	addi	sp,sp,-16
   455d8:	dc400115 	stw	r17,4(sp)
   455dc:	2c7fffc4 	addi	r17,r5,-1
   455e0:	8c401a24 	muli	r17,r17,104
   455e4:	dc800215 	stw	r18,8(sp)
   455e8:	2825883a 	mov	r18,r5
   455ec:	89401d04 	addi	r5,r17,116
   455f0:	dc000015 	stw	r16,0(sp)
   455f4:	dfc00315 	stw	ra,12(sp)
   455f8:	00464280 	call	46428 <_malloc_r>
   455fc:	1021883a 	mov	r16,r2
   45600:	10000726 	beq	r2,zero,45620 <__sfmoreglue+0x4c>
   45604:	11000304 	addi	r4,r2,12
   45608:	10000015 	stw	zero,0(r2)
   4560c:	14800115 	stw	r18,4(r2)
   45610:	11000215 	stw	r4,8(r2)
   45614:	89801a04 	addi	r6,r17,104
   45618:	000b883a 	mov	r5,zero
   4561c:	0046ed40 	call	46ed4 <memset>
   45620:	8005883a 	mov	r2,r16
   45624:	dfc00317 	ldw	ra,12(sp)
   45628:	dc800217 	ldw	r18,8(sp)
   4562c:	dc400117 	ldw	r17,4(sp)
   45630:	dc000017 	ldw	r16,0(sp)
   45634:	dec00404 	addi	sp,sp,16
   45638:	f800283a 	ret

0004563c <__sfp>:
   4563c:	defffc04 	addi	sp,sp,-16
   45640:	00800174 	movhi	r2,5
   45644:	dc400115 	stw	r17,4(sp)
   45648:	14487c17 	ldw	r17,8688(r2)
   4564c:	dc800215 	stw	r18,8(sp)
   45650:	dfc00315 	stw	ra,12(sp)
   45654:	88800e17 	ldw	r2,56(r17)
   45658:	dc000015 	stw	r16,0(sp)
   4565c:	2025883a 	mov	r18,r4
   45660:	10002d26 	beq	r2,zero,45718 <__sfp+0xdc>
   45664:	8c40b804 	addi	r17,r17,736
   45668:	88800117 	ldw	r2,4(r17)
   4566c:	8c000217 	ldw	r16,8(r17)
   45670:	10bfffc4 	addi	r2,r2,-1
   45674:	1000030e 	bge	r2,zero,45684 <__sfp+0x48>
   45678:	00002306 	br	45708 <__sfp+0xcc>
   4567c:	84001a04 	addi	r16,r16,104
   45680:	28002126 	beq	r5,zero,45708 <__sfp+0xcc>
   45684:	80c0030f 	ldh	r3,12(r16)
   45688:	10bfffc4 	addi	r2,r2,-1
   4568c:	117fffd8 	cmpnei	r5,r2,-1
   45690:	183ffa1e 	bne	r3,zero,4567c <__sfp+0x40>
   45694:	00bffff4 	movhi	r2,65535
   45698:	10800044 	addi	r2,r2,1
   4569c:	80800315 	stw	r2,12(r16)
   456a0:	80001915 	stw	zero,100(r16)
   456a4:	80000015 	stw	zero,0(r16)
   456a8:	80000215 	stw	zero,8(r16)
   456ac:	80000115 	stw	zero,4(r16)
   456b0:	80000415 	stw	zero,16(r16)
   456b4:	80000515 	stw	zero,20(r16)
   456b8:	80000615 	stw	zero,24(r16)
   456bc:	80001705 	stb	zero,92(r16)
   456c0:	80001745 	stb	zero,93(r16)
   456c4:	80001785 	stb	zero,94(r16)
   456c8:	800017c5 	stb	zero,95(r16)
   456cc:	80001805 	stb	zero,96(r16)
   456d0:	80001845 	stb	zero,97(r16)
   456d4:	80001885 	stb	zero,98(r16)
   456d8:	800018c5 	stb	zero,99(r16)
   456dc:	80000c15 	stw	zero,48(r16)
   456e0:	80000d15 	stw	zero,52(r16)
   456e4:	80001115 	stw	zero,68(r16)
   456e8:	80001215 	stw	zero,72(r16)
   456ec:	8005883a 	mov	r2,r16
   456f0:	dfc00317 	ldw	ra,12(sp)
   456f4:	dc800217 	ldw	r18,8(sp)
   456f8:	dc400117 	ldw	r17,4(sp)
   456fc:	dc000017 	ldw	r16,0(sp)
   45700:	dec00404 	addi	sp,sp,16
   45704:	f800283a 	ret
   45708:	8c000017 	ldw	r16,0(r17)
   4570c:	80000526 	beq	r16,zero,45724 <__sfp+0xe8>
   45710:	8023883a 	mov	r17,r16
   45714:	003fd406 	br	45668 <__sfp+0x2c>
   45718:	8809883a 	mov	r4,r17
   4571c:	004546c0 	call	4546c <__sinit.part.0>
   45720:	003fd006 	br	45664 <__sfp+0x28>
   45724:	01406b04 	movi	r5,428
   45728:	9009883a 	mov	r4,r18
   4572c:	00464280 	call	46428 <_malloc_r>
   45730:	1021883a 	mov	r16,r2
   45734:	10000a26 	beq	r2,zero,45760 <__sfp+0x124>
   45738:	10000015 	stw	zero,0(r2)
   4573c:	11000304 	addi	r4,r2,12
   45740:	00800104 	movi	r2,4
   45744:	80800115 	stw	r2,4(r16)
   45748:	81000215 	stw	r4,8(r16)
   4574c:	01806804 	movi	r6,416
   45750:	000b883a 	mov	r5,zero
   45754:	0046ed40 	call	46ed4 <memset>
   45758:	8c000015 	stw	r16,0(r17)
   4575c:	003fec06 	br	45710 <__sfp+0xd4>
   45760:	88000015 	stw	zero,0(r17)
   45764:	00800304 	movi	r2,12
   45768:	90800015 	stw	r2,0(r18)
   4576c:	003fdf06 	br	456ec <__sfp+0xb0>

00045770 <_cleanup>:
   45770:	00800174 	movhi	r2,5
   45774:	11087c17 	ldw	r4,8688(r2)
   45778:	01400174 	movhi	r5,5
   4577c:	2967e304 	addi	r5,r5,-24692
   45780:	00461341 	jmpi	46134 <_fwalk_reent>

00045784 <__sinit>:
   45784:	20800e17 	ldw	r2,56(r4)
   45788:	10000126 	beq	r2,zero,45790 <__sinit+0xc>
   4578c:	f800283a 	ret
   45790:	004546c1 	jmpi	4546c <__sinit.part.0>

00045794 <__sfp_lock_acquire>:
   45794:	f800283a 	ret

00045798 <__sfp_lock_release>:
   45798:	f800283a 	ret

0004579c <__sinit_lock_acquire>:
   4579c:	f800283a 	ret

000457a0 <__sinit_lock_release>:
   457a0:	f800283a 	ret

000457a4 <__fp_lock_all>:
   457a4:	00800174 	movhi	r2,5
   457a8:	11087d17 	ldw	r4,8692(r2)
   457ac:	01400134 	movhi	r5,4
   457b0:	29551404 	addi	r5,r5,21584
   457b4:	004609c1 	jmpi	4609c <_fwalk>

000457b8 <__fp_unlock_all>:
   457b8:	00800174 	movhi	r2,5
   457bc:	11087d17 	ldw	r4,8692(r2)
   457c0:	01400134 	movhi	r5,4
   457c4:	29551904 	addi	r5,r5,21604
   457c8:	004609c1 	jmpi	4609c <_fwalk>

000457cc <_malloc_trim_r>:
   457cc:	defffa04 	addi	sp,sp,-24
   457d0:	dcc00315 	stw	r19,12(sp)
   457d4:	04c00174 	movhi	r19,5
   457d8:	dd000415 	stw	r20,16(sp)
   457dc:	dc800215 	stw	r18,8(sp)
   457e0:	dc400115 	stw	r17,4(sp)
   457e4:	dc000015 	stw	r16,0(sp)
   457e8:	2829883a 	mov	r20,r5
   457ec:	dfc00515 	stw	ra,20(sp)
   457f0:	9cc29d04 	addi	r19,r19,2676
   457f4:	2025883a 	mov	r18,r4
   457f8:	004ddf40 	call	4ddf4 <__malloc_lock>
   457fc:	98800217 	ldw	r2,8(r19)
   45800:	14400117 	ldw	r17,4(r2)
   45804:	00bfff04 	movi	r2,-4
   45808:	88a2703a 	and	r17,r17,r2
   4580c:	8c03fbc4 	addi	r16,r17,4079
   45810:	8521c83a 	sub	r16,r16,r20
   45814:	8020d33a 	srli	r16,r16,12
   45818:	843fffc4 	addi	r16,r16,-1
   4581c:	8020933a 	slli	r16,r16,12
   45820:	80840008 	cmpgei	r2,r16,4096
   45824:	10000626 	beq	r2,zero,45840 <_malloc_trim_r+0x74>
   45828:	000b883a 	mov	r5,zero
   4582c:	9009883a 	mov	r4,r18
   45830:	00487140 	call	48714 <_sbrk_r>
   45834:	98c00217 	ldw	r3,8(r19)
   45838:	1c47883a 	add	r3,r3,r17
   4583c:	10c00b26 	beq	r2,r3,4586c <_malloc_trim_r+0xa0>
   45840:	9009883a 	mov	r4,r18
   45844:	004de180 	call	4de18 <__malloc_unlock>
   45848:	0005883a 	mov	r2,zero
   4584c:	dfc00517 	ldw	ra,20(sp)
   45850:	dd000417 	ldw	r20,16(sp)
   45854:	dcc00317 	ldw	r19,12(sp)
   45858:	dc800217 	ldw	r18,8(sp)
   4585c:	dc400117 	ldw	r17,4(sp)
   45860:	dc000017 	ldw	r16,0(sp)
   45864:	dec00604 	addi	sp,sp,24
   45868:	f800283a 	ret
   4586c:	040bc83a 	sub	r5,zero,r16
   45870:	9009883a 	mov	r4,r18
   45874:	00487140 	call	48714 <_sbrk_r>
   45878:	10bfffd8 	cmpnei	r2,r2,-1
   4587c:	10000d26 	beq	r2,zero,458b4 <_malloc_trim_r+0xe8>
   45880:	00800174 	movhi	r2,5
   45884:	108f8c17 	ldw	r2,15920(r2)
   45888:	98c00217 	ldw	r3,8(r19)
   4588c:	8c23c83a 	sub	r17,r17,r16
   45890:	8c400054 	ori	r17,r17,1
   45894:	1405c83a 	sub	r2,r2,r16
   45898:	1c400115 	stw	r17,4(r3)
   4589c:	9009883a 	mov	r4,r18
   458a0:	00c00174 	movhi	r3,5
   458a4:	188f8c15 	stw	r2,15920(r3)
   458a8:	004de180 	call	4de18 <__malloc_unlock>
   458ac:	00800044 	movi	r2,1
   458b0:	003fe606 	br	4584c <_malloc_trim_r+0x80>
   458b4:	000b883a 	mov	r5,zero
   458b8:	9009883a 	mov	r4,r18
   458bc:	00487140 	call	48714 <_sbrk_r>
   458c0:	99000217 	ldw	r4,8(r19)
   458c4:	1107c83a 	sub	r3,r2,r4
   458c8:	19400410 	cmplti	r5,r3,16
   458cc:	283fdc1e 	bne	r5,zero,45840 <_malloc_trim_r+0x74>
   458d0:	01400174 	movhi	r5,5
   458d4:	29487e17 	ldw	r5,8696(r5)
   458d8:	18c00054 	ori	r3,r3,1
   458dc:	20c00115 	stw	r3,4(r4)
   458e0:	1145c83a 	sub	r2,r2,r5
   458e4:	01400174 	movhi	r5,5
   458e8:	288f8c15 	stw	r2,15920(r5)
   458ec:	003fd406 	br	45840 <_malloc_trim_r+0x74>

000458f0 <_free_r>:
   458f0:	28005f26 	beq	r5,zero,45a70 <_free_r+0x180>
   458f4:	defffd04 	addi	sp,sp,-12
   458f8:	dc400115 	stw	r17,4(sp)
   458fc:	dc000015 	stw	r16,0(sp)
   45900:	2023883a 	mov	r17,r4
   45904:	2821883a 	mov	r16,r5
   45908:	dfc00215 	stw	ra,8(sp)
   4590c:	004ddf40 	call	4ddf4 <__malloc_lock>
   45910:	81ffff17 	ldw	r7,-4(r16)
   45914:	00bfff84 	movi	r2,-2
   45918:	80fffe04 	addi	r3,r16,-8
   4591c:	3884703a 	and	r2,r7,r2
   45920:	01800174 	movhi	r6,5
   45924:	1889883a 	add	r4,r3,r2
   45928:	31829d04 	addi	r6,r6,2676
   4592c:	21400117 	ldw	r5,4(r4)
   45930:	32000217 	ldw	r8,8(r6)
   45934:	027fff04 	movi	r9,-4
   45938:	2a4a703a 	and	r5,r5,r9
   4593c:	41006526 	beq	r8,r4,45ad4 <_free_r+0x1e4>
   45940:	21400115 	stw	r5,4(r4)
   45944:	39c0004c 	andi	r7,r7,1
   45948:	2151883a 	add	r8,r4,r5
   4594c:	3800281e 	bne	r7,zero,459f0 <_free_r+0x100>
   45950:	82bffe17 	ldw	r10,-8(r16)
   45954:	42000117 	ldw	r8,4(r8)
   45958:	01c00174 	movhi	r7,5
   4595c:	1a87c83a 	sub	r3,r3,r10
   45960:	1a400217 	ldw	r9,8(r3)
   45964:	39c29f04 	addi	r7,r7,2684
   45968:	1285883a 	add	r2,r2,r10
   4596c:	4200004c 	andi	r8,r8,1
   45970:	49c04d26 	beq	r9,r7,45aa8 <_free_r+0x1b8>
   45974:	1a800317 	ldw	r10,12(r3)
   45978:	4a800315 	stw	r10,12(r9)
   4597c:	52400215 	stw	r9,8(r10)
   45980:	40006926 	beq	r8,zero,45b28 <_free_r+0x238>
   45984:	11400054 	ori	r5,r2,1
   45988:	19400115 	stw	r5,4(r3)
   4598c:	20800015 	stw	r2,0(r4)
   45990:	11008028 	cmpgeui	r4,r2,512
   45994:	20001e1e 	bne	r4,zero,45a10 <_free_r+0x120>
   45998:	1008d0fa 	srli	r4,r2,3
   4599c:	100ad17a 	srli	r5,r2,5
   459a0:	31c00117 	ldw	r7,4(r6)
   459a4:	20800044 	addi	r2,r4,1
   459a8:	100490fa 	slli	r2,r2,3
   459ac:	01000044 	movi	r4,1
   459b0:	2148983a 	sll	r4,r4,r5
   459b4:	3085883a 	add	r2,r6,r2
   459b8:	11400017 	ldw	r5,0(r2)
   459bc:	21c8b03a 	or	r4,r4,r7
   459c0:	11fffe04 	addi	r7,r2,-8
   459c4:	19c00315 	stw	r7,12(r3)
   459c8:	19400215 	stw	r5,8(r3)
   459cc:	31000115 	stw	r4,4(r6)
   459d0:	10c00015 	stw	r3,0(r2)
   459d4:	28c00315 	stw	r3,12(r5)
   459d8:	8809883a 	mov	r4,r17
   459dc:	dfc00217 	ldw	ra,8(sp)
   459e0:	dc400117 	ldw	r17,4(sp)
   459e4:	dc000017 	ldw	r16,0(sp)
   459e8:	dec00304 	addi	sp,sp,12
   459ec:	004de181 	jmpi	4de18 <__malloc_unlock>
   459f0:	41c00117 	ldw	r7,4(r8)
   459f4:	39c0004c 	andi	r7,r7,1
   459f8:	38001e26 	beq	r7,zero,45a74 <_free_r+0x184>
   459fc:	11400054 	ori	r5,r2,1
   45a00:	817fff15 	stw	r5,-4(r16)
   45a04:	20800015 	stw	r2,0(r4)
   45a08:	11008028 	cmpgeui	r4,r2,512
   45a0c:	203fe226 	beq	r4,zero,45998 <_free_r+0xa8>
   45a10:	1008d27a 	srli	r4,r2,9
   45a14:	21400168 	cmpgeui	r5,r4,5
   45a18:	2800451e 	bne	r5,zero,45b30 <_free_r+0x240>
   45a1c:	1008d1ba 	srli	r4,r2,6
   45a20:	21c00e44 	addi	r7,r4,57
   45a24:	380e90fa 	slli	r7,r7,3
   45a28:	21000e04 	addi	r4,r4,56
   45a2c:	31cf883a 	add	r7,r6,r7
   45a30:	39400017 	ldw	r5,0(r7)
   45a34:	39fffe04 	addi	r7,r7,-8
   45a38:	39405326 	beq	r7,r5,45b88 <_free_r+0x298>
   45a3c:	01bfff04 	movi	r6,-4
   45a40:	00000206 	br	45a4c <_free_r+0x15c>
   45a44:	29400217 	ldw	r5,8(r5)
   45a48:	39400326 	beq	r7,r5,45a58 <_free_r+0x168>
   45a4c:	29000117 	ldw	r4,4(r5)
   45a50:	2188703a 	and	r4,r4,r6
   45a54:	113ffb36 	bltu	r2,r4,45a44 <_free_r+0x154>
   45a58:	29c00317 	ldw	r7,12(r5)
   45a5c:	19c00315 	stw	r7,12(r3)
   45a60:	19400215 	stw	r5,8(r3)
   45a64:	38c00215 	stw	r3,8(r7)
   45a68:	28c00315 	stw	r3,12(r5)
   45a6c:	003fda06 	br	459d8 <_free_r+0xe8>
   45a70:	f800283a 	ret
   45a74:	01c00174 	movhi	r7,5
   45a78:	1145883a 	add	r2,r2,r5
   45a7c:	39c29f04 	addi	r7,r7,2684
   45a80:	21400217 	ldw	r5,8(r4)
   45a84:	29c03726 	beq	r5,r7,45b64 <_free_r+0x274>
   45a88:	22000317 	ldw	r8,12(r4)
   45a8c:	11c00054 	ori	r7,r2,1
   45a90:	1889883a 	add	r4,r3,r2
   45a94:	2a000315 	stw	r8,12(r5)
   45a98:	41400215 	stw	r5,8(r8)
   45a9c:	19c00115 	stw	r7,4(r3)
   45aa0:	20800015 	stw	r2,0(r4)
   45aa4:	003fba06 	br	45990 <_free_r+0xa0>
   45aa8:	40004f1e 	bne	r8,zero,45be8 <_free_r+0x2f8>
   45aac:	21800217 	ldw	r6,8(r4)
   45ab0:	21000317 	ldw	r4,12(r4)
   45ab4:	288b883a 	add	r5,r5,r2
   45ab8:	28800054 	ori	r2,r5,1
   45abc:	31000315 	stw	r4,12(r6)
   45ac0:	21800215 	stw	r6,8(r4)
   45ac4:	18800115 	stw	r2,4(r3)
   45ac8:	1947883a 	add	r3,r3,r5
   45acc:	19400015 	stw	r5,0(r3)
   45ad0:	003fc106 	br	459d8 <_free_r+0xe8>
   45ad4:	39c0004c 	andi	r7,r7,1
   45ad8:	114b883a 	add	r5,r2,r5
   45adc:	3800071e 	bne	r7,zero,45afc <_free_r+0x20c>
   45ae0:	81fffe17 	ldw	r7,-8(r16)
   45ae4:	19c7c83a 	sub	r3,r3,r7
   45ae8:	18800317 	ldw	r2,12(r3)
   45aec:	19000217 	ldw	r4,8(r3)
   45af0:	29cb883a 	add	r5,r5,r7
   45af4:	20800315 	stw	r2,12(r4)
   45af8:	11000215 	stw	r4,8(r2)
   45afc:	00800174 	movhi	r2,5
   45b00:	29000054 	ori	r4,r5,1
   45b04:	10887f17 	ldw	r2,8700(r2)
   45b08:	19000115 	stw	r4,4(r3)
   45b0c:	30c00215 	stw	r3,8(r6)
   45b10:	28bfb136 	bltu	r5,r2,459d8 <_free_r+0xe8>
   45b14:	00800174 	movhi	r2,5
   45b18:	114f8217 	ldw	r5,15880(r2)
   45b1c:	8809883a 	mov	r4,r17
   45b20:	00457cc0 	call	457cc <_malloc_trim_r>
   45b24:	003fac06 	br	459d8 <_free_r+0xe8>
   45b28:	1145883a 	add	r2,r2,r5
   45b2c:	003fd406 	br	45a80 <_free_r+0x190>
   45b30:	21400568 	cmpgeui	r5,r4,21
   45b34:	28000726 	beq	r5,zero,45b54 <_free_r+0x264>
   45b38:	21401568 	cmpgeui	r5,r4,85
   45b3c:	2800191e 	bne	r5,zero,45ba4 <_free_r+0x2b4>
   45b40:	1008d33a 	srli	r4,r2,12
   45b44:	21c01bc4 	addi	r7,r4,111
   45b48:	380e90fa 	slli	r7,r7,3
   45b4c:	21001b84 	addi	r4,r4,110
   45b50:	003fb606 	br	45a2c <_free_r+0x13c>
   45b54:	21c01704 	addi	r7,r4,92
   45b58:	380e90fa 	slli	r7,r7,3
   45b5c:	210016c4 	addi	r4,r4,91
   45b60:	003fb206 	br	45a2c <_free_r+0x13c>
   45b64:	30c00515 	stw	r3,20(r6)
   45b68:	30c00415 	stw	r3,16(r6)
   45b6c:	11000054 	ori	r4,r2,1
   45b70:	19c00315 	stw	r7,12(r3)
   45b74:	19c00215 	stw	r7,8(r3)
   45b78:	19000115 	stw	r4,4(r3)
   45b7c:	1887883a 	add	r3,r3,r2
   45b80:	18800015 	stw	r2,0(r3)
   45b84:	003f9406 	br	459d8 <_free_r+0xe8>
   45b88:	2009d0ba 	srai	r4,r4,2
   45b8c:	00800044 	movi	r2,1
   45b90:	32000117 	ldw	r8,4(r6)
   45b94:	1104983a 	sll	r2,r2,r4
   45b98:	1204b03a 	or	r2,r2,r8
   45b9c:	30800115 	stw	r2,4(r6)
   45ba0:	003fae06 	br	45a5c <_free_r+0x16c>
   45ba4:	21405568 	cmpgeui	r5,r4,341
   45ba8:	2800051e 	bne	r5,zero,45bc0 <_free_r+0x2d0>
   45bac:	1008d3fa 	srli	r4,r2,15
   45bb0:	21c01e04 	addi	r7,r4,120
   45bb4:	380e90fa 	slli	r7,r7,3
   45bb8:	21001dc4 	addi	r4,r4,119
   45bbc:	003f9b06 	br	45a2c <_free_r+0x13c>
   45bc0:	21015568 	cmpgeui	r4,r4,1365
   45bc4:	2000051e 	bne	r4,zero,45bdc <_free_r+0x2ec>
   45bc8:	1008d4ba 	srli	r4,r2,18
   45bcc:	21c01f44 	addi	r7,r4,125
   45bd0:	380e90fa 	slli	r7,r7,3
   45bd4:	21001f04 	addi	r4,r4,124
   45bd8:	003f9406 	br	45a2c <_free_r+0x13c>
   45bdc:	01c0fe04 	movi	r7,1016
   45be0:	01001f84 	movi	r4,126
   45be4:	003f9106 	br	45a2c <_free_r+0x13c>
   45be8:	11400054 	ori	r5,r2,1
   45bec:	19400115 	stw	r5,4(r3)
   45bf0:	20800015 	stw	r2,0(r4)
   45bf4:	003f7806 	br	459d8 <_free_r+0xe8>

00045bf8 <__sfvwrite_r>:
   45bf8:	30800217 	ldw	r2,8(r6)
   45bfc:	1000c326 	beq	r2,zero,45f0c <__sfvwrite_r+0x314>
   45c00:	2a80030b 	ldhu	r10,12(r5)
   45c04:	defff504 	addi	sp,sp,-44
   45c08:	df000915 	stw	fp,36(sp)
   45c0c:	dcc00415 	stw	r19,16(sp)
   45c10:	dc000115 	stw	r16,4(sp)
   45c14:	dfc00a15 	stw	ra,40(sp)
   45c18:	ddc00815 	stw	r23,32(sp)
   45c1c:	dd800715 	stw	r22,28(sp)
   45c20:	dd400615 	stw	r21,24(sp)
   45c24:	dd000515 	stw	r20,20(sp)
   45c28:	dc800315 	stw	r18,12(sp)
   45c2c:	dc400215 	stw	r17,8(sp)
   45c30:	5080020c 	andi	r2,r10,8
   45c34:	3039883a 	mov	fp,r6
   45c38:	2027883a 	mov	r19,r4
   45c3c:	2821883a 	mov	r16,r5
   45c40:	10002226 	beq	r2,zero,45ccc <__sfvwrite_r+0xd4>
   45c44:	28800417 	ldw	r2,16(r5)
   45c48:	10002026 	beq	r2,zero,45ccc <__sfvwrite_r+0xd4>
   45c4c:	5080008c 	andi	r2,r10,2
   45c50:	e4400017 	ldw	r17,0(fp)
   45c54:	10002526 	beq	r2,zero,45cec <__sfvwrite_r+0xf4>
   45c58:	80800917 	ldw	r2,36(r16)
   45c5c:	81400717 	ldw	r5,28(r16)
   45c60:	05600034 	movhi	r21,32768
   45c64:	0029883a 	mov	r20,zero
   45c68:	0025883a 	mov	r18,zero
   45c6c:	ad7f0004 	addi	r21,r21,-1024
   45c70:	a00d883a 	mov	r6,r20
   45c74:	9809883a 	mov	r4,r19
   45c78:	90001026 	beq	r18,zero,45cbc <__sfvwrite_r+0xc4>
   45c7c:	900f883a 	mov	r7,r18
   45c80:	ac80012e 	bgeu	r21,r18,45c88 <__sfvwrite_r+0x90>
   45c84:	a80f883a 	mov	r7,r21
   45c88:	103ee83a 	callr	r2
   45c8c:	00809a0e 	bge	zero,r2,45ef8 <__sfvwrite_r+0x300>
   45c90:	e0c00217 	ldw	r3,8(fp)
   45c94:	a0a9883a 	add	r20,r20,r2
   45c98:	90a5c83a 	sub	r18,r18,r2
   45c9c:	1885c83a 	sub	r2,r3,r2
   45ca0:	e0800215 	stw	r2,8(fp)
   45ca4:	10008326 	beq	r2,zero,45eb4 <__sfvwrite_r+0x2bc>
   45ca8:	80800917 	ldw	r2,36(r16)
   45cac:	81400717 	ldw	r5,28(r16)
   45cb0:	a00d883a 	mov	r6,r20
   45cb4:	9809883a 	mov	r4,r19
   45cb8:	903ff01e 	bne	r18,zero,45c7c <__sfvwrite_r+0x84>
   45cbc:	8d000017 	ldw	r20,0(r17)
   45cc0:	8c800117 	ldw	r18,4(r17)
   45cc4:	8c400204 	addi	r17,r17,8
   45cc8:	003fe906 	br	45c70 <__sfvwrite_r+0x78>
   45ccc:	800b883a 	mov	r5,r16
   45cd0:	9809883a 	mov	r4,r19
   45cd4:	00436340 	call	43634 <__swsetup_r>
   45cd8:	10008a1e 	bne	r2,zero,45f04 <__sfvwrite_r+0x30c>
   45cdc:	8280030b 	ldhu	r10,12(r16)
   45ce0:	e4400017 	ldw	r17,0(fp)
   45ce4:	5080008c 	andi	r2,r10,2
   45ce8:	103fdb1e 	bne	r2,zero,45c58 <__sfvwrite_r+0x60>
   45cec:	5080004c 	andi	r2,r10,1
   45cf0:	10004e1e 	bne	r2,zero,45e2c <__sfvwrite_r+0x234>
   45cf4:	00a00034 	movhi	r2,32768
   45cf8:	81c00017 	ldw	r7,0(r16)
   45cfc:	80c00217 	ldw	r3,8(r16)
   45d00:	10bfffc4 	addi	r2,r2,-1
   45d04:	002d883a 	mov	r22,zero
   45d08:	0025883a 	mov	r18,zero
   45d0c:	d8800015 	stw	r2,0(sp)
   45d10:	3809883a 	mov	r4,r7
   45d14:	1829883a 	mov	r20,r3
   45d18:	90004026 	beq	r18,zero,45e1c <__sfvwrite_r+0x224>
   45d1c:	5080800c 	andi	r2,r10,512
   45d20:	10009426 	beq	r2,zero,45f74 <__sfvwrite_r+0x37c>
   45d24:	182b883a 	mov	r21,r3
   45d28:	90c0b936 	bltu	r18,r3,46010 <__sfvwrite_r+0x418>
   45d2c:	5081200c 	andi	r2,r10,1152
   45d30:	10002426 	beq	r2,zero,45dc4 <__sfvwrite_r+0x1cc>
   45d34:	80800517 	ldw	r2,20(r16)
   45d38:	81000417 	ldw	r4,16(r16)
   45d3c:	108000e4 	muli	r2,r2,3
   45d40:	392fc83a 	sub	r23,r7,r4
   45d44:	b8c00044 	addi	r3,r23,1
   45d48:	1012d7fa 	srli	r9,r2,31
   45d4c:	1c87883a 	add	r3,r3,r18
   45d50:	4893883a 	add	r9,r9,r2
   45d54:	4829d07a 	srai	r20,r9,1
   45d58:	a00b883a 	mov	r5,r20
   45d5c:	a0c0022e 	bgeu	r20,r3,45d68 <__sfvwrite_r+0x170>
   45d60:	1829883a 	mov	r20,r3
   45d64:	180b883a 	mov	r5,r3
   45d68:	5281000c 	andi	r10,r10,1024
   45d6c:	5000b926 	beq	r10,zero,46054 <__sfvwrite_r+0x45c>
   45d70:	9809883a 	mov	r4,r19
   45d74:	00464280 	call	46428 <_malloc_r>
   45d78:	1000c426 	beq	r2,zero,4608c <__sfvwrite_r+0x494>
   45d7c:	81400417 	ldw	r5,16(r16)
   45d80:	1009883a 	mov	r4,r2
   45d84:	b80d883a 	mov	r6,r23
   45d88:	0046cac0 	call	46cac <memcpy>
   45d8c:	1007883a 	mov	r3,r2
   45d90:	8080030b 	ldhu	r2,12(r16)
   45d94:	013edfc4 	movi	r4,-1153
   45d98:	1104703a 	and	r2,r2,r4
   45d9c:	10802014 	ori	r2,r2,128
   45da0:	8080030d 	sth	r2,12(r16)
   45da4:	a5cfc83a 	sub	r7,r20,r23
   45da8:	1dc9883a 	add	r4,r3,r23
   45dac:	85000515 	stw	r20,20(r16)
   45db0:	80c00415 	stw	r3,16(r16)
   45db4:	81000015 	stw	r4,0(r16)
   45db8:	9029883a 	mov	r20,r18
   45dbc:	81c00215 	stw	r7,8(r16)
   45dc0:	902b883a 	mov	r21,r18
   45dc4:	a80d883a 	mov	r6,r21
   45dc8:	b00b883a 	mov	r5,r22
   45dcc:	0046dac0 	call	46dac <memmove>
   45dd0:	80c00217 	ldw	r3,8(r16)
   45dd4:	81c00017 	ldw	r7,0(r16)
   45dd8:	902f883a 	mov	r23,r18
   45ddc:	1d07c83a 	sub	r3,r3,r20
   45de0:	3d4d883a 	add	r6,r7,r21
   45de4:	80c00215 	stw	r3,8(r16)
   45de8:	81800015 	stw	r6,0(r16)
   45dec:	0025883a 	mov	r18,zero
   45df0:	e0800217 	ldw	r2,8(fp)
   45df4:	b5ed883a 	add	r22,r22,r23
   45df8:	15c5c83a 	sub	r2,r2,r23
   45dfc:	e0800215 	stw	r2,8(fp)
   45e00:	10002c26 	beq	r2,zero,45eb4 <__sfvwrite_r+0x2bc>
   45e04:	81c00017 	ldw	r7,0(r16)
   45e08:	80c00217 	ldw	r3,8(r16)
   45e0c:	8280030b 	ldhu	r10,12(r16)
   45e10:	3809883a 	mov	r4,r7
   45e14:	1829883a 	mov	r20,r3
   45e18:	903fc01e 	bne	r18,zero,45d1c <__sfvwrite_r+0x124>
   45e1c:	8d800017 	ldw	r22,0(r17)
   45e20:	8c800117 	ldw	r18,4(r17)
   45e24:	8c400204 	addi	r17,r17,8
   45e28:	003fb906 	br	45d10 <__sfvwrite_r+0x118>
   45e2c:	002f883a 	mov	r23,zero
   45e30:	0005883a 	mov	r2,zero
   45e34:	002b883a 	mov	r21,zero
   45e38:	0029883a 	mov	r20,zero
   45e3c:	a0003526 	beq	r20,zero,45f14 <__sfvwrite_r+0x31c>
   45e40:	10003926 	beq	r2,zero,45f28 <__sfvwrite_r+0x330>
   45e44:	b805883a 	mov	r2,r23
   45e48:	a02d883a 	mov	r22,r20
   45e4c:	1500012e 	bgeu	r2,r20,45e54 <__sfvwrite_r+0x25c>
   45e50:	102d883a 	mov	r22,r2
   45e54:	81000017 	ldw	r4,0(r16)
   45e58:	80800417 	ldw	r2,16(r16)
   45e5c:	84800217 	ldw	r18,8(r16)
   45e60:	81c00517 	ldw	r7,20(r16)
   45e64:	1100022e 	bgeu	r2,r4,45e70 <__sfvwrite_r+0x278>
   45e68:	91e5883a 	add	r18,r18,r7
   45e6c:	95803616 	blt	r18,r22,45f48 <__sfvwrite_r+0x350>
   45e70:	b1c06a16 	blt	r22,r7,4601c <__sfvwrite_r+0x424>
   45e74:	80800917 	ldw	r2,36(r16)
   45e78:	81400717 	ldw	r5,28(r16)
   45e7c:	a80d883a 	mov	r6,r21
   45e80:	9809883a 	mov	r4,r19
   45e84:	103ee83a 	callr	r2
   45e88:	1025883a 	mov	r18,r2
   45e8c:	00801a0e 	bge	zero,r2,45ef8 <__sfvwrite_r+0x300>
   45e90:	bcafc83a 	sub	r23,r23,r18
   45e94:	b8001426 	beq	r23,zero,45ee8 <__sfvwrite_r+0x2f0>
   45e98:	00800044 	movi	r2,1
   45e9c:	e0c00217 	ldw	r3,8(fp)
   45ea0:	acab883a 	add	r21,r21,r18
   45ea4:	a4a9c83a 	sub	r20,r20,r18
   45ea8:	1c87c83a 	sub	r3,r3,r18
   45eac:	e0c00215 	stw	r3,8(fp)
   45eb0:	183fe21e 	bne	r3,zero,45e3c <__sfvwrite_r+0x244>
   45eb4:	0005883a 	mov	r2,zero
   45eb8:	dfc00a17 	ldw	ra,40(sp)
   45ebc:	df000917 	ldw	fp,36(sp)
   45ec0:	ddc00817 	ldw	r23,32(sp)
   45ec4:	dd800717 	ldw	r22,28(sp)
   45ec8:	dd400617 	ldw	r21,24(sp)
   45ecc:	dd000517 	ldw	r20,20(sp)
   45ed0:	dcc00417 	ldw	r19,16(sp)
   45ed4:	dc800317 	ldw	r18,12(sp)
   45ed8:	dc400217 	ldw	r17,8(sp)
   45edc:	dc000117 	ldw	r16,4(sp)
   45ee0:	dec00b04 	addi	sp,sp,44
   45ee4:	f800283a 	ret
   45ee8:	800b883a 	mov	r5,r16
   45eec:	9809883a 	mov	r4,r19
   45ef0:	004536c0 	call	4536c <_fflush_r>
   45ef4:	103fe926 	beq	r2,zero,45e9c <__sfvwrite_r+0x2a4>
   45ef8:	8080030b 	ldhu	r2,12(r16)
   45efc:	10801014 	ori	r2,r2,64
   45f00:	8080030d 	sth	r2,12(r16)
   45f04:	00bfffc4 	movi	r2,-1
   45f08:	003feb06 	br	45eb8 <__sfvwrite_r+0x2c0>
   45f0c:	0005883a 	mov	r2,zero
   45f10:	f800283a 	ret
   45f14:	8d000117 	ldw	r20,4(r17)
   45f18:	8805883a 	mov	r2,r17
   45f1c:	8c400204 	addi	r17,r17,8
   45f20:	a03ffc26 	beq	r20,zero,45f14 <__sfvwrite_r+0x31c>
   45f24:	15400017 	ldw	r21,0(r2)
   45f28:	a00d883a 	mov	r6,r20
   45f2c:	01400284 	movi	r5,10
   45f30:	a809883a 	mov	r4,r21
   45f34:	0046bdc0 	call	46bdc <memchr>
   45f38:	10004326 	beq	r2,zero,46048 <__sfvwrite_r+0x450>
   45f3c:	10800044 	addi	r2,r2,1
   45f40:	156fc83a 	sub	r23,r2,r21
   45f44:	003fbf06 	br	45e44 <__sfvwrite_r+0x24c>
   45f48:	a80b883a 	mov	r5,r21
   45f4c:	900d883a 	mov	r6,r18
   45f50:	0046dac0 	call	46dac <memmove>
   45f54:	80800017 	ldw	r2,0(r16)
   45f58:	800b883a 	mov	r5,r16
   45f5c:	9809883a 	mov	r4,r19
   45f60:	1485883a 	add	r2,r2,r18
   45f64:	80800015 	stw	r2,0(r16)
   45f68:	004536c0 	call	4536c <_fflush_r>
   45f6c:	103fc826 	beq	r2,zero,45e90 <__sfvwrite_r+0x298>
   45f70:	003fe106 	br	45ef8 <__sfvwrite_r+0x300>
   45f74:	80800417 	ldw	r2,16(r16)
   45f78:	11c01236 	bltu	r2,r7,45fc4 <__sfvwrite_r+0x3cc>
   45f7c:	81400517 	ldw	r5,20(r16)
   45f80:	91401036 	bltu	r18,r5,45fc4 <__sfvwrite_r+0x3cc>
   45f84:	00a00034 	movhi	r2,32768
   45f88:	902f883a 	mov	r23,r18
   45f8c:	90800136 	bltu	r18,r2,45f94 <__sfvwrite_r+0x39c>
   45f90:	ddc00017 	ldw	r23,0(sp)
   45f94:	b809883a 	mov	r4,r23
   45f98:	0040e980 	call	40e98 <__modsi3>
   45f9c:	80c00917 	ldw	r3,36(r16)
   45fa0:	81400717 	ldw	r5,28(r16)
   45fa4:	b88fc83a 	sub	r7,r23,r2
   45fa8:	b00d883a 	mov	r6,r22
   45fac:	9809883a 	mov	r4,r19
   45fb0:	183ee83a 	callr	r3
   45fb4:	102f883a 	mov	r23,r2
   45fb8:	00bfcf0e 	bge	zero,r2,45ef8 <__sfvwrite_r+0x300>
   45fbc:	95e5c83a 	sub	r18,r18,r23
   45fc0:	003f8b06 	br	45df0 <__sfvwrite_r+0x1f8>
   45fc4:	182f883a 	mov	r23,r3
   45fc8:	90c0012e 	bgeu	r18,r3,45fd0 <__sfvwrite_r+0x3d8>
   45fcc:	902f883a 	mov	r23,r18
   45fd0:	3809883a 	mov	r4,r7
   45fd4:	b80d883a 	mov	r6,r23
   45fd8:	b00b883a 	mov	r5,r22
   45fdc:	0046dac0 	call	46dac <memmove>
   45fe0:	80c00217 	ldw	r3,8(r16)
   45fe4:	81c00017 	ldw	r7,0(r16)
   45fe8:	1dc7c83a 	sub	r3,r3,r23
   45fec:	3dcf883a 	add	r7,r7,r23
   45ff0:	80c00215 	stw	r3,8(r16)
   45ff4:	81c00015 	stw	r7,0(r16)
   45ff8:	183ff01e 	bne	r3,zero,45fbc <__sfvwrite_r+0x3c4>
   45ffc:	800b883a 	mov	r5,r16
   46000:	9809883a 	mov	r4,r19
   46004:	004536c0 	call	4536c <_fflush_r>
   46008:	103fec26 	beq	r2,zero,45fbc <__sfvwrite_r+0x3c4>
   4600c:	003fba06 	br	45ef8 <__sfvwrite_r+0x300>
   46010:	9029883a 	mov	r20,r18
   46014:	902b883a 	mov	r21,r18
   46018:	003f6a06 	br	45dc4 <__sfvwrite_r+0x1cc>
   4601c:	b00d883a 	mov	r6,r22
   46020:	a80b883a 	mov	r5,r21
   46024:	0046dac0 	call	46dac <memmove>
   46028:	80c00217 	ldw	r3,8(r16)
   4602c:	80800017 	ldw	r2,0(r16)
   46030:	b025883a 	mov	r18,r22
   46034:	1d87c83a 	sub	r3,r3,r22
   46038:	1585883a 	add	r2,r2,r22
   4603c:	80c00215 	stw	r3,8(r16)
   46040:	80800015 	stw	r2,0(r16)
   46044:	003f9206 	br	45e90 <__sfvwrite_r+0x298>
   46048:	a0800044 	addi	r2,r20,1
   4604c:	102f883a 	mov	r23,r2
   46050:	003f7d06 	br	45e48 <__sfvwrite_r+0x250>
   46054:	280d883a 	mov	r6,r5
   46058:	200b883a 	mov	r5,r4
   4605c:	9809883a 	mov	r4,r19
   46060:	00481200 	call	48120 <_realloc_r>
   46064:	1007883a 	mov	r3,r2
   46068:	103f4e1e 	bne	r2,zero,45da4 <__sfvwrite_r+0x1ac>
   4606c:	81400417 	ldw	r5,16(r16)
   46070:	9809883a 	mov	r4,r19
   46074:	00458f00 	call	458f0 <_free_r>
   46078:	8080030b 	ldhu	r2,12(r16)
   4607c:	00c00304 	movi	r3,12
   46080:	98c00015 	stw	r3,0(r19)
   46084:	10bfdfcc 	andi	r2,r2,65407
   46088:	003f9c06 	br	45efc <__sfvwrite_r+0x304>
   4608c:	00c00304 	movi	r3,12
   46090:	8080030b 	ldhu	r2,12(r16)
   46094:	98c00015 	stw	r3,0(r19)
   46098:	003f9806 	br	45efc <__sfvwrite_r+0x304>

0004609c <_fwalk>:
   4609c:	defffa04 	addi	sp,sp,-24
   460a0:	dd000415 	stw	r20,16(sp)
   460a4:	dcc00315 	stw	r19,12(sp)
   460a8:	dc800215 	stw	r18,8(sp)
   460ac:	dfc00515 	stw	ra,20(sp)
   460b0:	dc400115 	stw	r17,4(sp)
   460b4:	dc000015 	stw	r16,0(sp)
   460b8:	2827883a 	mov	r19,r5
   460bc:	2480b804 	addi	r18,r4,736
   460c0:	0029883a 	mov	r20,zero
   460c4:	94400117 	ldw	r17,4(r18)
   460c8:	94000217 	ldw	r16,8(r18)
   460cc:	8c7fffc4 	addi	r17,r17,-1
   460d0:	88000d16 	blt	r17,zero,46108 <_fwalk+0x6c>
   460d4:	8080030b 	ldhu	r2,12(r16)
   460d8:	8c7fffc4 	addi	r17,r17,-1
   460dc:	108000b0 	cmpltui	r2,r2,2
   460e0:	1000061e 	bne	r2,zero,460fc <_fwalk+0x60>
   460e4:	8080038f 	ldh	r2,14(r16)
   460e8:	8009883a 	mov	r4,r16
   460ec:	10bfffe0 	cmpeqi	r2,r2,-1
   460f0:	1000021e 	bne	r2,zero,460fc <_fwalk+0x60>
   460f4:	983ee83a 	callr	r19
   460f8:	a0a8b03a 	or	r20,r20,r2
   460fc:	88bfffd8 	cmpnei	r2,r17,-1
   46100:	84001a04 	addi	r16,r16,104
   46104:	103ff31e 	bne	r2,zero,460d4 <_fwalk+0x38>
   46108:	94800017 	ldw	r18,0(r18)
   4610c:	903fed1e 	bne	r18,zero,460c4 <_fwalk+0x28>
   46110:	a005883a 	mov	r2,r20
   46114:	dfc00517 	ldw	ra,20(sp)
   46118:	dd000417 	ldw	r20,16(sp)
   4611c:	dcc00317 	ldw	r19,12(sp)
   46120:	dc800217 	ldw	r18,8(sp)
   46124:	dc400117 	ldw	r17,4(sp)
   46128:	dc000017 	ldw	r16,0(sp)
   4612c:	dec00604 	addi	sp,sp,24
   46130:	f800283a 	ret

00046134 <_fwalk_reent>:
   46134:	defff904 	addi	sp,sp,-28
   46138:	dd400515 	stw	r21,20(sp)
   4613c:	dd000415 	stw	r20,16(sp)
   46140:	dcc00315 	stw	r19,12(sp)
   46144:	dc800215 	stw	r18,8(sp)
   46148:	dfc00615 	stw	ra,24(sp)
   4614c:	dc400115 	stw	r17,4(sp)
   46150:	dc000015 	stw	r16,0(sp)
   46154:	2025883a 	mov	r18,r4
   46158:	2829883a 	mov	r20,r5
   4615c:	24c0b804 	addi	r19,r4,736
   46160:	002b883a 	mov	r21,zero
   46164:	9c400117 	ldw	r17,4(r19)
   46168:	9c000217 	ldw	r16,8(r19)
   4616c:	8c7fffc4 	addi	r17,r17,-1
   46170:	88000e16 	blt	r17,zero,461ac <_fwalk_reent+0x78>
   46174:	8080030b 	ldhu	r2,12(r16)
   46178:	8c7fffc4 	addi	r17,r17,-1
   4617c:	108000b0 	cmpltui	r2,r2,2
   46180:	1000071e 	bne	r2,zero,461a0 <_fwalk_reent+0x6c>
   46184:	8080038f 	ldh	r2,14(r16)
   46188:	800b883a 	mov	r5,r16
   4618c:	9009883a 	mov	r4,r18
   46190:	10bfffe0 	cmpeqi	r2,r2,-1
   46194:	1000021e 	bne	r2,zero,461a0 <_fwalk_reent+0x6c>
   46198:	a03ee83a 	callr	r20
   4619c:	a8aab03a 	or	r21,r21,r2
   461a0:	88bfffd8 	cmpnei	r2,r17,-1
   461a4:	84001a04 	addi	r16,r16,104
   461a8:	103ff21e 	bne	r2,zero,46174 <_fwalk_reent+0x40>
   461ac:	9cc00017 	ldw	r19,0(r19)
   461b0:	983fec1e 	bne	r19,zero,46164 <_fwalk_reent+0x30>
   461b4:	a805883a 	mov	r2,r21
   461b8:	dfc00617 	ldw	ra,24(sp)
   461bc:	dd400517 	ldw	r21,20(sp)
   461c0:	dd000417 	ldw	r20,16(sp)
   461c4:	dcc00317 	ldw	r19,12(sp)
   461c8:	dc800217 	ldw	r18,8(sp)
   461cc:	dc400117 	ldw	r17,4(sp)
   461d0:	dc000017 	ldw	r16,0(sp)
   461d4:	dec00704 	addi	sp,sp,28
   461d8:	f800283a 	ret

000461dc <__localeconv_l>:
   461dc:	20803c04 	addi	r2,r4,240
   461e0:	f800283a 	ret

000461e4 <_localeconv_r>:
   461e4:	00800174 	movhi	r2,5
   461e8:	1083db04 	addi	r2,r2,3948
   461ec:	f800283a 	ret

000461f0 <localeconv>:
   461f0:	00800174 	movhi	r2,5
   461f4:	1083db04 	addi	r2,r2,3948
   461f8:	f800283a 	ret

000461fc <__smakebuf_r>:
   461fc:	2880030b 	ldhu	r2,12(r5)
   46200:	deffe804 	addi	sp,sp,-96
   46204:	dc001215 	stw	r16,72(sp)
   46208:	dfc01715 	stw	ra,92(sp)
   4620c:	dd001615 	stw	r20,88(sp)
   46210:	dcc01515 	stw	r19,84(sp)
   46214:	dc801415 	stw	r18,80(sp)
   46218:	dc401315 	stw	r17,76(sp)
   4621c:	10c0008c 	andi	r3,r2,2
   46220:	2821883a 	mov	r16,r5
   46224:	18000d26 	beq	r3,zero,4625c <__smakebuf_r+0x60>
   46228:	288010c4 	addi	r2,r5,67
   4622c:	28800015 	stw	r2,0(r5)
   46230:	28800415 	stw	r2,16(r5)
   46234:	00800044 	movi	r2,1
   46238:	28800515 	stw	r2,20(r5)
   4623c:	dfc01717 	ldw	ra,92(sp)
   46240:	dd001617 	ldw	r20,88(sp)
   46244:	dcc01517 	ldw	r19,84(sp)
   46248:	dc801417 	ldw	r18,80(sp)
   4624c:	dc401317 	ldw	r17,76(sp)
   46250:	dc001217 	ldw	r16,72(sp)
   46254:	dec01804 	addi	sp,sp,96
   46258:	f800283a 	ret
   4625c:	2940038f 	ldh	r5,14(r5)
   46260:	2023883a 	mov	r17,r4
   46264:	28002816 	blt	r5,zero,46308 <__smakebuf_r+0x10c>
   46268:	d80d883a 	mov	r6,sp
   4626c:	004a2ec0 	call	4a2ec <_fstat_r>
   46270:	10002416 	blt	r2,zero,46304 <__smakebuf_r+0x108>
   46274:	d8800117 	ldw	r2,4(sp)
   46278:	10bc000c 	andi	r2,r2,61440
   4627c:	10880018 	cmpnei	r2,r2,8192
   46280:	1000421e 	bne	r2,zero,4638c <__smakebuf_r+0x190>
   46284:	8140038f 	ldh	r5,14(r16)
   46288:	8809883a 	mov	r4,r17
   4628c:	004a34c0 	call	4a34c <_isatty_r>
   46290:	10000826 	beq	r2,zero,462b4 <__smakebuf_r+0xb8>
   46294:	8080030b 	ldhu	r2,12(r16)
   46298:	80c010c4 	addi	r3,r16,67
   4629c:	80c00015 	stw	r3,0(r16)
   462a0:	10800054 	ori	r2,r2,1
   462a4:	8080030d 	sth	r2,12(r16)
   462a8:	00800044 	movi	r2,1
   462ac:	80c00415 	stw	r3,16(r16)
   462b0:	80800515 	stw	r2,20(r16)
   462b4:	04c00044 	movi	r19,1
   462b8:	05010004 	movi	r20,1024
   462bc:	04820004 	movi	r18,2048
   462c0:	a00b883a 	mov	r5,r20
   462c4:	8809883a 	mov	r4,r17
   462c8:	00464280 	call	46428 <_malloc_r>
   462cc:	10001726 	beq	r2,zero,4632c <__smakebuf_r+0x130>
   462d0:	80c0030b 	ldhu	r3,12(r16)
   462d4:	01000134 	movhi	r4,4
   462d8:	21151604 	addi	r4,r4,21592
   462dc:	89000f15 	stw	r4,60(r17)
   462e0:	18c02014 	ori	r3,r3,128
   462e4:	80c0030d 	sth	r3,12(r16)
   462e8:	80800015 	stw	r2,0(r16)
   462ec:	80800415 	stw	r2,16(r16)
   462f0:	85000515 	stw	r20,20(r16)
   462f4:	98001d1e 	bne	r19,zero,4636c <__smakebuf_r+0x170>
   462f8:	90e4b03a 	or	r18,r18,r3
   462fc:	8480030d 	sth	r18,12(r16)
   46300:	003fce06 	br	4623c <__smakebuf_r+0x40>
   46304:	8080030b 	ldhu	r2,12(r16)
   46308:	1080200c 	andi	r2,r2,128
   4630c:	0027883a 	mov	r19,zero
   46310:	10001326 	beq	r2,zero,46360 <__smakebuf_r+0x164>
   46314:	05001004 	movi	r20,64
   46318:	a00b883a 	mov	r5,r20
   4631c:	8809883a 	mov	r4,r17
   46320:	0025883a 	mov	r18,zero
   46324:	00464280 	call	46428 <_malloc_r>
   46328:	103fe91e 	bne	r2,zero,462d0 <__smakebuf_r+0xd4>
   4632c:	8080030b 	ldhu	r2,12(r16)
   46330:	10c0800c 	andi	r3,r2,512
   46334:	183fc11e 	bne	r3,zero,4623c <__smakebuf_r+0x40>
   46338:	00ffff04 	movi	r3,-4
   4633c:	10c4703a 	and	r2,r2,r3
   46340:	10800094 	ori	r2,r2,2
   46344:	80c010c4 	addi	r3,r16,67
   46348:	8080030d 	sth	r2,12(r16)
   4634c:	00800044 	movi	r2,1
   46350:	80c00015 	stw	r3,0(r16)
   46354:	80c00415 	stw	r3,16(r16)
   46358:	80800515 	stw	r2,20(r16)
   4635c:	003fb706 	br	4623c <__smakebuf_r+0x40>
   46360:	05010004 	movi	r20,1024
   46364:	0025883a 	mov	r18,zero
   46368:	003fd506 	br	462c0 <__smakebuf_r+0xc4>
   4636c:	8140038f 	ldh	r5,14(r16)
   46370:	8809883a 	mov	r4,r17
   46374:	004a34c0 	call	4a34c <_isatty_r>
   46378:	80c0030b 	ldhu	r3,12(r16)
   4637c:	103fde26 	beq	r2,zero,462f8 <__smakebuf_r+0xfc>
   46380:	18ffff0c 	andi	r3,r3,65532
   46384:	18c00054 	ori	r3,r3,1
   46388:	003fdb06 	br	462f8 <__smakebuf_r+0xfc>
   4638c:	0027883a 	mov	r19,zero
   46390:	05010004 	movi	r20,1024
   46394:	04820004 	movi	r18,2048
   46398:	003fc906 	br	462c0 <__smakebuf_r+0xc4>

0004639c <__swhatbuf_r>:
   4639c:	deffea04 	addi	sp,sp,-88
   463a0:	dc001215 	stw	r16,72(sp)
   463a4:	2821883a 	mov	r16,r5
   463a8:	2940038f 	ldh	r5,14(r5)
   463ac:	dc801415 	stw	r18,80(sp)
   463b0:	dc401315 	stw	r17,76(sp)
   463b4:	dfc01515 	stw	ra,84(sp)
   463b8:	3023883a 	mov	r17,r6
   463bc:	3825883a 	mov	r18,r7
   463c0:	28001016 	blt	r5,zero,46404 <__swhatbuf_r+0x68>
   463c4:	d80d883a 	mov	r6,sp
   463c8:	004a2ec0 	call	4a2ec <_fstat_r>
   463cc:	10000d16 	blt	r2,zero,46404 <__swhatbuf_r+0x68>
   463d0:	d8c00117 	ldw	r3,4(sp)
   463d4:	01010004 	movi	r4,1024
   463d8:	00820004 	movi	r2,2048
   463dc:	18fc000c 	andi	r3,r3,61440
   463e0:	18c80020 	cmpeqi	r3,r3,8192
   463e4:	90c00015 	stw	r3,0(r18)
   463e8:	89000015 	stw	r4,0(r17)
   463ec:	dfc01517 	ldw	ra,84(sp)
   463f0:	dc801417 	ldw	r18,80(sp)
   463f4:	dc401317 	ldw	r17,76(sp)
   463f8:	dc001217 	ldw	r16,72(sp)
   463fc:	dec01604 	addi	sp,sp,88
   46400:	f800283a 	ret
   46404:	8080030b 	ldhu	r2,12(r16)
   46408:	0007883a 	mov	r3,zero
   4640c:	1080200c 	andi	r2,r2,128
   46410:	10000326 	beq	r2,zero,46420 <__swhatbuf_r+0x84>
   46414:	01001004 	movi	r4,64
   46418:	0005883a 	mov	r2,zero
   4641c:	003ff106 	br	463e4 <__swhatbuf_r+0x48>
   46420:	01010004 	movi	r4,1024
   46424:	003fef06 	br	463e4 <__swhatbuf_r+0x48>

00046428 <_malloc_r>:
   46428:	defff604 	addi	sp,sp,-40
   4642c:	dc400115 	stw	r17,4(sp)
   46430:	2c4002c4 	addi	r17,r5,11
   46434:	dc800215 	stw	r18,8(sp)
   46438:	dfc00915 	stw	ra,36(sp)
   4643c:	df000815 	stw	fp,32(sp)
   46440:	ddc00715 	stw	r23,28(sp)
   46444:	dd800615 	stw	r22,24(sp)
   46448:	dd400515 	stw	r21,20(sp)
   4644c:	dd000415 	stw	r20,16(sp)
   46450:	dcc00315 	stw	r19,12(sp)
   46454:	dc000015 	stw	r16,0(sp)
   46458:	888005e8 	cmpgeui	r2,r17,23
   4645c:	2025883a 	mov	r18,r4
   46460:	1000261e 	bne	r2,zero,464fc <_malloc_r+0xd4>
   46464:	29400468 	cmpgeui	r5,r5,17
   46468:	28008d1e 	bne	r5,zero,466a0 <_malloc_r+0x278>
   4646c:	004ddf40 	call	4ddf4 <__malloc_lock>
   46470:	04400404 	movi	r17,16
   46474:	00800604 	movi	r2,24
   46478:	01c00084 	movi	r7,2
   4647c:	04c00174 	movhi	r19,5
   46480:	9cc29d04 	addi	r19,r19,2676
   46484:	9885883a 	add	r2,r19,r2
   46488:	14000117 	ldw	r16,4(r2)
   4648c:	10fffe04 	addi	r3,r2,-8
   46490:	80c0cb26 	beq	r16,r3,467c0 <_malloc_r+0x398>
   46494:	80800117 	ldw	r2,4(r16)
   46498:	81000317 	ldw	r4,12(r16)
   4649c:	00ffff04 	movi	r3,-4
   464a0:	10c4703a 	and	r2,r2,r3
   464a4:	81400217 	ldw	r5,8(r16)
   464a8:	8085883a 	add	r2,r16,r2
   464ac:	10c00117 	ldw	r3,4(r2)
   464b0:	29000315 	stw	r4,12(r5)
   464b4:	21400215 	stw	r5,8(r4)
   464b8:	18c00054 	ori	r3,r3,1
   464bc:	10c00115 	stw	r3,4(r2)
   464c0:	9009883a 	mov	r4,r18
   464c4:	004de180 	call	4de18 <__malloc_unlock>
   464c8:	80800204 	addi	r2,r16,8
   464cc:	dfc00917 	ldw	ra,36(sp)
   464d0:	df000817 	ldw	fp,32(sp)
   464d4:	ddc00717 	ldw	r23,28(sp)
   464d8:	dd800617 	ldw	r22,24(sp)
   464dc:	dd400517 	ldw	r21,20(sp)
   464e0:	dd000417 	ldw	r20,16(sp)
   464e4:	dcc00317 	ldw	r19,12(sp)
   464e8:	dc800217 	ldw	r18,8(sp)
   464ec:	dc400117 	ldw	r17,4(sp)
   464f0:	dc000017 	ldw	r16,0(sp)
   464f4:	dec00a04 	addi	sp,sp,40
   464f8:	f800283a 	ret
   464fc:	00bffe04 	movi	r2,-8
   46500:	88a2703a 	and	r17,r17,r2
   46504:	88006616 	blt	r17,zero,466a0 <_malloc_r+0x278>
   46508:	89406536 	bltu	r17,r5,466a0 <_malloc_r+0x278>
   4650c:	004ddf40 	call	4ddf4 <__malloc_lock>
   46510:	88807e28 	cmpgeui	r2,r17,504
   46514:	1000ef26 	beq	r2,zero,468d4 <_malloc_r+0x4ac>
   46518:	8804d27a 	srli	r2,r17,9
   4651c:	10006426 	beq	r2,zero,466b0 <_malloc_r+0x288>
   46520:	10c00168 	cmpgeui	r3,r2,5
   46524:	1800c31e 	bne	r3,zero,46834 <_malloc_r+0x40c>
   46528:	8804d1ba 	srli	r2,r17,6
   4652c:	11c00e44 	addi	r7,r2,57
   46530:	380890fa 	slli	r4,r7,3
   46534:	12000e04 	addi	r8,r2,56
   46538:	04c00174 	movhi	r19,5
   4653c:	9cc29d04 	addi	r19,r19,2676
   46540:	9909883a 	add	r4,r19,r4
   46544:	24000117 	ldw	r16,4(r4)
   46548:	213ffe04 	addi	r4,r4,-8
   4654c:	24000b26 	beq	r4,r16,4657c <_malloc_r+0x154>
   46550:	01bfff04 	movi	r6,-4
   46554:	00000306 	br	46564 <_malloc_r+0x13c>
   46558:	1800970e 	bge	r3,zero,467b8 <_malloc_r+0x390>
   4655c:	84000317 	ldw	r16,12(r16)
   46560:	24000626 	beq	r4,r16,4657c <_malloc_r+0x154>
   46564:	80800117 	ldw	r2,4(r16)
   46568:	1184703a 	and	r2,r2,r6
   4656c:	1447c83a 	sub	r3,r2,r17
   46570:	19400408 	cmpgei	r5,r3,16
   46574:	283ff826 	beq	r5,zero,46558 <_malloc_r+0x130>
   46578:	400f883a 	mov	r7,r8
   4657c:	9c000417 	ldw	r16,16(r19)
   46580:	02400174 	movhi	r9,5
   46584:	4a429f04 	addi	r9,r9,2684
   46588:	82407f26 	beq	r16,r9,46788 <_malloc_r+0x360>
   4658c:	80800117 	ldw	r2,4(r16)
   46590:	00ffff04 	movi	r3,-4
   46594:	10c4703a 	and	r2,r2,r3
   46598:	1447c83a 	sub	r3,r2,r17
   4659c:	19000410 	cmplti	r4,r3,16
   465a0:	2000cf26 	beq	r4,zero,468e0 <_malloc_r+0x4b8>
   465a4:	9a400515 	stw	r9,20(r19)
   465a8:	9a400415 	stw	r9,16(r19)
   465ac:	1800c10e 	bge	r3,zero,468b4 <_malloc_r+0x48c>
   465b0:	10c08028 	cmpgeui	r3,r2,512
   465b4:	99400117 	ldw	r5,4(r19)
   465b8:	1800851e 	bne	r3,zero,467d0 <_malloc_r+0x3a8>
   465bc:	1006d0fa 	srli	r3,r2,3
   465c0:	1008d17a 	srli	r4,r2,5
   465c4:	18800044 	addi	r2,r3,1
   465c8:	100490fa 	slli	r2,r2,3
   465cc:	00c00044 	movi	r3,1
   465d0:	1906983a 	sll	r3,r3,r4
   465d4:	9885883a 	add	r2,r19,r2
   465d8:	11000017 	ldw	r4,0(r2)
   465dc:	28cab03a 	or	r5,r5,r3
   465e0:	10fffe04 	addi	r3,r2,-8
   465e4:	80c00315 	stw	r3,12(r16)
   465e8:	81000215 	stw	r4,8(r16)
   465ec:	99400115 	stw	r5,4(r19)
   465f0:	14000015 	stw	r16,0(r2)
   465f4:	24000315 	stw	r16,12(r4)
   465f8:	3805d0ba 	srai	r2,r7,2
   465fc:	01000044 	movi	r4,1
   46600:	2088983a 	sll	r4,r4,r2
   46604:	29002e36 	bltu	r5,r4,466c0 <_malloc_r+0x298>
   46608:	2144703a 	and	r2,r4,r5
   4660c:	10000a1e 	bne	r2,zero,46638 <_malloc_r+0x210>
   46610:	2109883a 	add	r4,r4,r4
   46614:	00bfff04 	movi	r2,-4
   46618:	3884703a 	and	r2,r7,r2
   4661c:	2146703a 	and	r3,r4,r5
   46620:	11c00104 	addi	r7,r2,4
   46624:	1800041e 	bne	r3,zero,46638 <_malloc_r+0x210>
   46628:	2109883a 	add	r4,r4,r4
   4662c:	2144703a 	and	r2,r4,r5
   46630:	39c00104 	addi	r7,r7,4
   46634:	103ffc26 	beq	r2,zero,46628 <_malloc_r+0x200>
   46638:	02bfff04 	movi	r10,-4
   4663c:	381690fa 	slli	r11,r7,3
   46640:	3819883a 	mov	r12,r7
   46644:	9ad7883a 	add	r11,r19,r11
   46648:	5811883a 	mov	r8,r11
   4664c:	40800317 	ldw	r2,12(r8)
   46650:	40808126 	beq	r8,r2,46858 <_malloc_r+0x430>
   46654:	10c00117 	ldw	r3,4(r2)
   46658:	1021883a 	mov	r16,r2
   4665c:	10800317 	ldw	r2,12(r2)
   46660:	1a86703a 	and	r3,r3,r10
   46664:	1c4bc83a 	sub	r5,r3,r17
   46668:	29800410 	cmplti	r6,r5,16
   4666c:	30007f26 	beq	r6,zero,4686c <_malloc_r+0x444>
   46670:	283ff716 	blt	r5,zero,46650 <_malloc_r+0x228>
   46674:	80c7883a 	add	r3,r16,r3
   46678:	19400117 	ldw	r5,4(r3)
   4667c:	81800217 	ldw	r6,8(r16)
   46680:	9009883a 	mov	r4,r18
   46684:	29400054 	ori	r5,r5,1
   46688:	19400115 	stw	r5,4(r3)
   4668c:	30800315 	stw	r2,12(r6)
   46690:	11800215 	stw	r6,8(r2)
   46694:	004de180 	call	4de18 <__malloc_unlock>
   46698:	80800204 	addi	r2,r16,8
   4669c:	003f8b06 	br	464cc <_malloc_r+0xa4>
   466a0:	00800304 	movi	r2,12
   466a4:	90800015 	stw	r2,0(r18)
   466a8:	0005883a 	mov	r2,zero
   466ac:	003f8706 	br	464cc <_malloc_r+0xa4>
   466b0:	01008004 	movi	r4,512
   466b4:	01c01004 	movi	r7,64
   466b8:	02000fc4 	movi	r8,63
   466bc:	003f9e06 	br	46538 <_malloc_r+0x110>
   466c0:	9c000217 	ldw	r16,8(r19)
   466c4:	00bfff04 	movi	r2,-4
   466c8:	80c00117 	ldw	r3,4(r16)
   466cc:	18aa703a 	and	r21,r3,r2
   466d0:	ac400336 	bltu	r21,r17,466e0 <_malloc_r+0x2b8>
   466d4:	ac47c83a 	sub	r3,r21,r17
   466d8:	18800408 	cmpgei	r2,r3,16
   466dc:	10002c1e 	bne	r2,zero,46790 <_malloc_r+0x368>
   466e0:	00800174 	movhi	r2,5
   466e4:	10887e17 	ldw	r2,8696(r2)
   466e8:	00c00174 	movhi	r3,5
   466ec:	1d0f8217 	ldw	r20,15880(r3)
   466f0:	10bfffd8 	cmpnei	r2,r2,-1
   466f4:	856f883a 	add	r23,r16,r21
   466f8:	8d29883a 	add	r20,r17,r20
   466fc:	1000e726 	beq	r2,zero,46a9c <_malloc_r+0x674>
   46700:	a50403c4 	addi	r20,r20,4111
   46704:	00bc0004 	movi	r2,-4096
   46708:	a0a8703a 	and	r20,r20,r2
   4670c:	a00b883a 	mov	r5,r20
   46710:	9009883a 	mov	r4,r18
   46714:	00487140 	call	48714 <_sbrk_r>
   46718:	102d883a 	mov	r22,r2
   4671c:	10bfffd8 	cmpnei	r2,r2,-1
   46720:	10008426 	beq	r2,zero,46934 <_malloc_r+0x50c>
   46724:	b5c08236 	bltu	r22,r23,46930 <_malloc_r+0x508>
   46728:	00800174 	movhi	r2,5
   4672c:	110f8c17 	ldw	r4,15920(r2)
   46730:	a109883a 	add	r4,r20,r4
   46734:	110f8c15 	stw	r4,15920(r2)
   46738:	2007883a 	mov	r3,r4
   4673c:	bd80a51e 	bne	r23,r22,469d4 <_malloc_r+0x5ac>
   46740:	b083ffcc 	andi	r2,r22,4095
   46744:	1000a31e 	bne	r2,zero,469d4 <_malloc_r+0x5ac>
   46748:	9d800217 	ldw	r22,8(r19)
   4674c:	ad07883a 	add	r3,r21,r20
   46750:	18c00054 	ori	r3,r3,1
   46754:	b0c00115 	stw	r3,4(r22)
   46758:	00800174 	movhi	r2,5
   4675c:	108f8117 	ldw	r2,15876(r2)
   46760:	1100022e 	bgeu	r2,r4,4676c <_malloc_r+0x344>
   46764:	00800174 	movhi	r2,5
   46768:	110f8115 	stw	r4,15876(r2)
   4676c:	00800174 	movhi	r2,5
   46770:	108f8017 	ldw	r2,15872(r2)
   46774:	1100022e 	bgeu	r2,r4,46780 <_malloc_r+0x358>
   46778:	00800174 	movhi	r2,5
   4677c:	110f8015 	stw	r4,15872(r2)
   46780:	b021883a 	mov	r16,r22
   46784:	00006d06 	br	4693c <_malloc_r+0x514>
   46788:	99400117 	ldw	r5,4(r19)
   4678c:	003f9a06 	br	465f8 <_malloc_r+0x1d0>
   46790:	88800054 	ori	r2,r17,1
   46794:	80800115 	stw	r2,4(r16)
   46798:	8463883a 	add	r17,r16,r17
   4679c:	9c400215 	stw	r17,8(r19)
   467a0:	18c00054 	ori	r3,r3,1
   467a4:	88c00115 	stw	r3,4(r17)
   467a8:	9009883a 	mov	r4,r18
   467ac:	004de180 	call	4de18 <__malloc_unlock>
   467b0:	80800204 	addi	r2,r16,8
   467b4:	003f4506 	br	464cc <_malloc_r+0xa4>
   467b8:	81000317 	ldw	r4,12(r16)
   467bc:	003f3906 	br	464a4 <_malloc_r+0x7c>
   467c0:	14000317 	ldw	r16,12(r2)
   467c4:	143f331e 	bne	r2,r16,46494 <_malloc_r+0x6c>
   467c8:	39c00084 	addi	r7,r7,2
   467cc:	003f6b06 	br	4657c <_malloc_r+0x154>
   467d0:	1006d27a 	srli	r3,r2,9
   467d4:	19000168 	cmpgeui	r4,r3,5
   467d8:	20005026 	beq	r4,zero,4691c <_malloc_r+0x4f4>
   467dc:	19000568 	cmpgeui	r4,r3,21
   467e0:	2000c01e 	bne	r4,zero,46ae4 <_malloc_r+0x6bc>
   467e4:	19801704 	addi	r6,r3,92
   467e8:	300c90fa 	slli	r6,r6,3
   467ec:	190016c4 	addi	r4,r3,91
   467f0:	998d883a 	add	r6,r19,r6
   467f4:	30c00017 	ldw	r3,0(r6)
   467f8:	31bffe04 	addi	r6,r6,-8
   467fc:	30c0a926 	beq	r6,r3,46aa4 <_malloc_r+0x67c>
   46800:	023fff04 	movi	r8,-4
   46804:	00000206 	br	46810 <_malloc_r+0x3e8>
   46808:	18c00217 	ldw	r3,8(r3)
   4680c:	30c00326 	beq	r6,r3,4681c <_malloc_r+0x3f4>
   46810:	19000117 	ldw	r4,4(r3)
   46814:	2208703a 	and	r4,r4,r8
   46818:	113ffb36 	bltu	r2,r4,46808 <_malloc_r+0x3e0>
   4681c:	19800317 	ldw	r6,12(r3)
   46820:	81800315 	stw	r6,12(r16)
   46824:	80c00215 	stw	r3,8(r16)
   46828:	34000215 	stw	r16,8(r6)
   4682c:	1c000315 	stw	r16,12(r3)
   46830:	003f7106 	br	465f8 <_malloc_r+0x1d0>
   46834:	10c00568 	cmpgeui	r3,r2,21
   46838:	18004926 	beq	r3,zero,46960 <_malloc_r+0x538>
   4683c:	10c01568 	cmpgeui	r3,r2,85
   46840:	1800af1e 	bne	r3,zero,46b00 <_malloc_r+0x6d8>
   46844:	8804d33a 	srli	r2,r17,12
   46848:	11c01bc4 	addi	r7,r2,111
   4684c:	380890fa 	slli	r4,r7,3
   46850:	12001b84 	addi	r8,r2,110
   46854:	003f3806 	br	46538 <_malloc_r+0x110>
   46858:	63000044 	addi	r12,r12,1
   4685c:	608000cc 	andi	r2,r12,3
   46860:	42000204 	addi	r8,r8,8
   46864:	103f791e 	bne	r2,zero,4664c <_malloc_r+0x224>
   46868:	00004406 	br	4697c <_malloc_r+0x554>
   4686c:	81000217 	ldw	r4,8(r16)
   46870:	89800054 	ori	r6,r17,1
   46874:	81800115 	stw	r6,4(r16)
   46878:	20800315 	stw	r2,12(r4)
   4687c:	11000215 	stw	r4,8(r2)
   46880:	8463883a 	add	r17,r16,r17
   46884:	9c400515 	stw	r17,20(r19)
   46888:	9c400415 	stw	r17,16(r19)
   4688c:	28800054 	ori	r2,r5,1
   46890:	88800115 	stw	r2,4(r17)
   46894:	8a400315 	stw	r9,12(r17)
   46898:	8a400215 	stw	r9,8(r17)
   4689c:	80c7883a 	add	r3,r16,r3
   468a0:	19400015 	stw	r5,0(r3)
   468a4:	9009883a 	mov	r4,r18
   468a8:	004de180 	call	4de18 <__malloc_unlock>
   468ac:	80800204 	addi	r2,r16,8
   468b0:	003f0606 	br	464cc <_malloc_r+0xa4>
   468b4:	8085883a 	add	r2,r16,r2
   468b8:	10c00117 	ldw	r3,4(r2)
   468bc:	9009883a 	mov	r4,r18
   468c0:	18c00054 	ori	r3,r3,1
   468c4:	10c00115 	stw	r3,4(r2)
   468c8:	004de180 	call	4de18 <__malloc_unlock>
   468cc:	80800204 	addi	r2,r16,8
   468d0:	003efe06 	br	464cc <_malloc_r+0xa4>
   468d4:	880ed0fa 	srli	r7,r17,3
   468d8:	88800204 	addi	r2,r17,8
   468dc:	003ee706 	br	4647c <_malloc_r+0x54>
   468e0:	89000054 	ori	r4,r17,1
   468e4:	81000115 	stw	r4,4(r16)
   468e8:	8463883a 	add	r17,r16,r17
   468ec:	9c400515 	stw	r17,20(r19)
   468f0:	9c400415 	stw	r17,16(r19)
   468f4:	19000054 	ori	r4,r3,1
   468f8:	89000115 	stw	r4,4(r17)
   468fc:	8085883a 	add	r2,r16,r2
   46900:	8a400315 	stw	r9,12(r17)
   46904:	8a400215 	stw	r9,8(r17)
   46908:	10c00015 	stw	r3,0(r2)
   4690c:	9009883a 	mov	r4,r18
   46910:	004de180 	call	4de18 <__malloc_unlock>
   46914:	80800204 	addi	r2,r16,8
   46918:	003eec06 	br	464cc <_malloc_r+0xa4>
   4691c:	1006d1ba 	srli	r3,r2,6
   46920:	19800e44 	addi	r6,r3,57
   46924:	300c90fa 	slli	r6,r6,3
   46928:	19000e04 	addi	r4,r3,56
   4692c:	003fb006 	br	467f0 <_malloc_r+0x3c8>
   46930:	84c02426 	beq	r16,r19,469c4 <_malloc_r+0x59c>
   46934:	9c000217 	ldw	r16,8(r19)
   46938:	80c00117 	ldw	r3,4(r16)
   4693c:	00bfff04 	movi	r2,-4
   46940:	1884703a 	and	r2,r3,r2
   46944:	1447c83a 	sub	r3,r2,r17
   46948:	14400236 	bltu	r2,r17,46954 <_malloc_r+0x52c>
   4694c:	18800408 	cmpgei	r2,r3,16
   46950:	103f8f1e 	bne	r2,zero,46790 <_malloc_r+0x368>
   46954:	9009883a 	mov	r4,r18
   46958:	004de180 	call	4de18 <__malloc_unlock>
   4695c:	003f5206 	br	466a8 <_malloc_r+0x280>
   46960:	11c01704 	addi	r7,r2,92
   46964:	380890fa 	slli	r4,r7,3
   46968:	120016c4 	addi	r8,r2,91
   4696c:	003ef206 	br	46538 <_malloc_r+0x110>
   46970:	58800217 	ldw	r2,8(r11)
   46974:	39ffffc4 	addi	r7,r7,-1
   46978:	12c0961e 	bne	r2,r11,46bd4 <_malloc_r+0x7ac>
   4697c:	388000cc 	andi	r2,r7,3
   46980:	5afffe04 	addi	r11,r11,-8
   46984:	103ffa1e 	bne	r2,zero,46970 <_malloc_r+0x548>
   46988:	98c00117 	ldw	r3,4(r19)
   4698c:	0104303a 	nor	r2,zero,r4
   46990:	10c4703a 	and	r2,r2,r3
   46994:	98800115 	stw	r2,4(r19)
   46998:	2109883a 	add	r4,r4,r4
   4699c:	113f4836 	bltu	r2,r4,466c0 <_malloc_r+0x298>
   469a0:	203f4726 	beq	r4,zero,466c0 <_malloc_r+0x298>
   469a4:	2086703a 	and	r3,r4,r2
   469a8:	1800041e 	bne	r3,zero,469bc <_malloc_r+0x594>
   469ac:	2109883a 	add	r4,r4,r4
   469b0:	2086703a 	and	r3,r4,r2
   469b4:	63000104 	addi	r12,r12,4
   469b8:	183ffc26 	beq	r3,zero,469ac <_malloc_r+0x584>
   469bc:	600f883a 	mov	r7,r12
   469c0:	003f1e06 	br	4663c <_malloc_r+0x214>
   469c4:	00800174 	movhi	r2,5
   469c8:	10cf8c17 	ldw	r3,15920(r2)
   469cc:	a0c7883a 	add	r3,r20,r3
   469d0:	10cf8c15 	stw	r3,15920(r2)
   469d4:	00800174 	movhi	r2,5
   469d8:	10887e17 	ldw	r2,8696(r2)
   469dc:	10bfffd8 	cmpnei	r2,r2,-1
   469e0:	10004e26 	beq	r2,zero,46b1c <_malloc_r+0x6f4>
   469e4:	b5c5c83a 	sub	r2,r22,r23
   469e8:	10c5883a 	add	r2,r2,r3
   469ec:	00c00174 	movhi	r3,5
   469f0:	188f8c15 	stw	r2,15920(r3)
   469f4:	b70001cc 	andi	fp,r22,7
   469f8:	e0003026 	beq	fp,zero,46abc <_malloc_r+0x694>
   469fc:	b72dc83a 	sub	r22,r22,fp
   46a00:	b5800204 	addi	r22,r22,8
   46a04:	01040204 	movi	r4,4104
   46a08:	2709c83a 	sub	r4,r4,fp
   46a0c:	b529883a 	add	r20,r22,r20
   46a10:	2509c83a 	sub	r4,r4,r20
   46a14:	25c3ffcc 	andi	r23,r4,4095
   46a18:	b80b883a 	mov	r5,r23
   46a1c:	9009883a 	mov	r4,r18
   46a20:	00487140 	call	48714 <_sbrk_r>
   46a24:	10ffffe0 	cmpeqi	r3,r2,-1
   46a28:	1800501e 	bne	r3,zero,46b6c <_malloc_r+0x744>
   46a2c:	1585c83a 	sub	r2,r2,r22
   46a30:	15e9883a 	add	r20,r2,r23
   46a34:	00800174 	movhi	r2,5
   46a38:	108f8c17 	ldw	r2,15920(r2)
   46a3c:	9d800215 	stw	r22,8(r19)
   46a40:	a0c00054 	ori	r3,r20,1
   46a44:	b889883a 	add	r4,r23,r2
   46a48:	00800174 	movhi	r2,5
   46a4c:	110f8c15 	stw	r4,15920(r2)
   46a50:	b0c00115 	stw	r3,4(r22)
   46a54:	84ff4026 	beq	r16,r19,46758 <_malloc_r+0x330>
   46a58:	a8800428 	cmpgeui	r2,r21,16
   46a5c:	10003226 	beq	r2,zero,46b28 <_malloc_r+0x700>
   46a60:	80800117 	ldw	r2,4(r16)
   46a64:	017ffe04 	movi	r5,-8
   46a68:	a8fffd04 	addi	r3,r21,-12
   46a6c:	1946703a 	and	r3,r3,r5
   46a70:	1080004c 	andi	r2,r2,1
   46a74:	10c4b03a 	or	r2,r2,r3
   46a78:	80800115 	stw	r2,4(r16)
   46a7c:	01400144 	movi	r5,5
   46a80:	80c5883a 	add	r2,r16,r3
   46a84:	11400115 	stw	r5,4(r2)
   46a88:	11400215 	stw	r5,8(r2)
   46a8c:	18c00428 	cmpgeui	r3,r3,16
   46a90:	18003b1e 	bne	r3,zero,46b80 <_malloc_r+0x758>
   46a94:	b0c00117 	ldw	r3,4(r22)
   46a98:	003f2f06 	br	46758 <_malloc_r+0x330>
   46a9c:	a5000404 	addi	r20,r20,16
   46aa0:	003f1a06 	br	4670c <_malloc_r+0x2e4>
   46aa4:	2009d0ba 	srai	r4,r4,2
   46aa8:	00800044 	movi	r2,1
   46aac:	1104983a 	sll	r2,r2,r4
   46ab0:	288ab03a 	or	r5,r5,r2
   46ab4:	99400115 	stw	r5,4(r19)
   46ab8:	003f5906 	br	46820 <_malloc_r+0x3f8>
   46abc:	b509883a 	add	r4,r22,r20
   46ac0:	0109c83a 	sub	r4,zero,r4
   46ac4:	25c3ffcc 	andi	r23,r4,4095
   46ac8:	b80b883a 	mov	r5,r23
   46acc:	9009883a 	mov	r4,r18
   46ad0:	00487140 	call	48714 <_sbrk_r>
   46ad4:	10ffffe0 	cmpeqi	r3,r2,-1
   46ad8:	183fd426 	beq	r3,zero,46a2c <_malloc_r+0x604>
   46adc:	002f883a 	mov	r23,zero
   46ae0:	003fd406 	br	46a34 <_malloc_r+0x60c>
   46ae4:	19001568 	cmpgeui	r4,r3,85
   46ae8:	2000121e 	bne	r4,zero,46b34 <_malloc_r+0x70c>
   46aec:	1006d33a 	srli	r3,r2,12
   46af0:	19801bc4 	addi	r6,r3,111
   46af4:	300c90fa 	slli	r6,r6,3
   46af8:	19001b84 	addi	r4,r3,110
   46afc:	003f3c06 	br	467f0 <_malloc_r+0x3c8>
   46b00:	10c05568 	cmpgeui	r3,r2,341
   46b04:	1800121e 	bne	r3,zero,46b50 <_malloc_r+0x728>
   46b08:	8804d3fa 	srli	r2,r17,15
   46b0c:	11c01e04 	addi	r7,r2,120
   46b10:	380890fa 	slli	r4,r7,3
   46b14:	12001dc4 	addi	r8,r2,119
   46b18:	003e8706 	br	46538 <_malloc_r+0x110>
   46b1c:	00800174 	movhi	r2,5
   46b20:	15887e15 	stw	r22,8696(r2)
   46b24:	003fb306 	br	469f4 <_malloc_r+0x5cc>
   46b28:	00800044 	movi	r2,1
   46b2c:	b0800115 	stw	r2,4(r22)
   46b30:	003f8806 	br	46954 <_malloc_r+0x52c>
   46b34:	19005568 	cmpgeui	r4,r3,341
   46b38:	2000181e 	bne	r4,zero,46b9c <_malloc_r+0x774>
   46b3c:	1006d3fa 	srli	r3,r2,15
   46b40:	19801e04 	addi	r6,r3,120
   46b44:	300c90fa 	slli	r6,r6,3
   46b48:	19001dc4 	addi	r4,r3,119
   46b4c:	003f2806 	br	467f0 <_malloc_r+0x3c8>
   46b50:	10815568 	cmpgeui	r2,r2,1365
   46b54:	1000181e 	bne	r2,zero,46bb8 <_malloc_r+0x790>
   46b58:	8804d4ba 	srli	r2,r17,18
   46b5c:	11c01f44 	addi	r7,r2,125
   46b60:	380890fa 	slli	r4,r7,3
   46b64:	12001f04 	addi	r8,r2,124
   46b68:	003e7306 	br	46538 <_malloc_r+0x110>
   46b6c:	e73ffe04 	addi	fp,fp,-8
   46b70:	a729883a 	add	r20,r20,fp
   46b74:	a5a9c83a 	sub	r20,r20,r22
   46b78:	002f883a 	mov	r23,zero
   46b7c:	003fad06 	br	46a34 <_malloc_r+0x60c>
   46b80:	9009883a 	mov	r4,r18
   46b84:	81400204 	addi	r5,r16,8
   46b88:	00458f00 	call	458f0 <_free_r>
   46b8c:	00800174 	movhi	r2,5
   46b90:	9d800217 	ldw	r22,8(r19)
   46b94:	110f8c17 	ldw	r4,15920(r2)
   46b98:	003fbe06 	br	46a94 <_malloc_r+0x66c>
   46b9c:	18c15568 	cmpgeui	r3,r3,1365
   46ba0:	1800091e 	bne	r3,zero,46bc8 <_malloc_r+0x7a0>
   46ba4:	1006d4ba 	srli	r3,r2,18
   46ba8:	19801f44 	addi	r6,r3,125
   46bac:	300c90fa 	slli	r6,r6,3
   46bb0:	19001f04 	addi	r4,r3,124
   46bb4:	003f0e06 	br	467f0 <_malloc_r+0x3c8>
   46bb8:	0100fe04 	movi	r4,1016
   46bbc:	01c01fc4 	movi	r7,127
   46bc0:	02001f84 	movi	r8,126
   46bc4:	003e5c06 	br	46538 <_malloc_r+0x110>
   46bc8:	0180fe04 	movi	r6,1016
   46bcc:	01001f84 	movi	r4,126
   46bd0:	003f0706 	br	467f0 <_malloc_r+0x3c8>
   46bd4:	98800117 	ldw	r2,4(r19)
   46bd8:	003f6f06 	br	46998 <_malloc_r+0x570>

00046bdc <memchr>:
   46bdc:	208000cc 	andi	r2,r4,3
   46be0:	280f883a 	mov	r7,r5
   46be4:	10000e26 	beq	r2,zero,46c20 <memchr+0x44>
   46be8:	30bfffc4 	addi	r2,r6,-1
   46bec:	30001726 	beq	r6,zero,46c4c <memchr+0x70>
   46bf0:	29803fcc 	andi	r6,r5,255
   46bf4:	00000606 	br	46c10 <memchr+0x34>
   46bf8:	21000044 	addi	r4,r4,1
   46bfc:	20c000cc 	andi	r3,r4,3
   46c00:	18000826 	beq	r3,zero,46c24 <memchr+0x48>
   46c04:	10bfffc4 	addi	r2,r2,-1
   46c08:	10ffffe0 	cmpeqi	r3,r2,-1
   46c0c:	18000f1e 	bne	r3,zero,46c4c <memchr+0x70>
   46c10:	20c00003 	ldbu	r3,0(r4)
   46c14:	19bff81e 	bne	r3,r6,46bf8 <memchr+0x1c>
   46c18:	2005883a 	mov	r2,r4
   46c1c:	f800283a 	ret
   46c20:	3005883a 	mov	r2,r6
   46c24:	10c00130 	cmpltui	r3,r2,4
   46c28:	18000a26 	beq	r3,zero,46c54 <memchr+0x78>
   46c2c:	10001e26 	beq	r2,zero,46ca8 <memchr+0xcc>
   46c30:	2087883a 	add	r3,r4,r2
   46c34:	39803fcc 	andi	r6,r7,255
   46c38:	2005883a 	mov	r2,r4
   46c3c:	11000003 	ldbu	r4,0(r2)
   46c40:	21bff626 	beq	r4,r6,46c1c <memchr+0x40>
   46c44:	10800044 	addi	r2,r2,1
   46c48:	18bffc1e 	bne	r3,r2,46c3c <memchr+0x60>
   46c4c:	0005883a 	mov	r2,zero
   46c50:	f800283a 	ret
   46c54:	00c04074 	movhi	r3,257
   46c58:	29403fcc 	andi	r5,r5,255
   46c5c:	18c04044 	addi	r3,r3,257
   46c60:	027fbff4 	movhi	r9,65279
   46c64:	02202074 	movhi	r8,32897
   46c68:	28cd383a 	mul	r6,r5,r3
   46c6c:	4a7fbfc4 	addi	r9,r9,-257
   46c70:	42202004 	addi	r8,r8,-32640
   46c74:	00000406 	br	46c88 <memchr+0xac>
   46c78:	10bfff04 	addi	r2,r2,-4
   46c7c:	10c00128 	cmpgeui	r3,r2,4
   46c80:	21000104 	addi	r4,r4,4
   46c84:	183fe926 	beq	r3,zero,46c2c <memchr+0x50>
   46c88:	20c00017 	ldw	r3,0(r4)
   46c8c:	30c6f03a 	xor	r3,r6,r3
   46c90:	1a4b883a 	add	r5,r3,r9
   46c94:	00c6303a 	nor	r3,zero,r3
   46c98:	28c6703a 	and	r3,r5,r3
   46c9c:	1a06703a 	and	r3,r3,r8
   46ca0:	183ff526 	beq	r3,zero,46c78 <memchr+0x9c>
   46ca4:	003fe106 	br	46c2c <memchr+0x50>
   46ca8:	f800283a 	ret

00046cac <memcpy>:
   46cac:	30c00428 	cmpgeui	r3,r6,16
   46cb0:	2005883a 	mov	r2,r4
   46cb4:	18000b1e 	bne	r3,zero,46ce4 <memcpy+0x38>
   46cb8:	2007883a 	mov	r3,r4
   46cbc:	31ffffc4 	addi	r7,r6,-1
   46cc0:	30003426 	beq	r6,zero,46d94 <memcpy+0xe8>
   46cc4:	39c00044 	addi	r7,r7,1
   46cc8:	19cf883a 	add	r7,r3,r7
   46ccc:	29800003 	ldbu	r6,0(r5)
   46cd0:	18c00044 	addi	r3,r3,1
   46cd4:	29400044 	addi	r5,r5,1
   46cd8:	19bfffc5 	stb	r6,-1(r3)
   46cdc:	38fffb1e 	bne	r7,r3,46ccc <memcpy+0x20>
   46ce0:	f800283a 	ret
   46ce4:	2146b03a 	or	r3,r4,r5
   46ce8:	18c000cc 	andi	r3,r3,3
   46cec:	18002a1e 	bne	r3,zero,46d98 <memcpy+0xec>
   46cf0:	333ffc04 	addi	r12,r6,-16
   46cf4:	6018d13a 	srli	r12,r12,4
   46cf8:	2811883a 	mov	r8,r5
   46cfc:	200f883a 	mov	r7,r4
   46d00:	63000044 	addi	r12,r12,1
   46d04:	6018913a 	slli	r12,r12,4
   46d08:	2307883a 	add	r3,r4,r12
   46d0c:	42c00017 	ldw	r11,0(r8)
   46d10:	42800117 	ldw	r10,4(r8)
   46d14:	42400217 	ldw	r9,8(r8)
   46d18:	41000317 	ldw	r4,12(r8)
   46d1c:	39c00404 	addi	r7,r7,16
   46d20:	3afffc15 	stw	r11,-16(r7)
   46d24:	3abffd15 	stw	r10,-12(r7)
   46d28:	3a7ffe15 	stw	r9,-8(r7)
   46d2c:	393fff15 	stw	r4,-4(r7)
   46d30:	42000404 	addi	r8,r8,16
   46d34:	38fff51e 	bne	r7,r3,46d0c <memcpy+0x60>
   46d38:	3100030c 	andi	r4,r6,12
   46d3c:	2b0b883a 	add	r5,r5,r12
   46d40:	324003cc 	andi	r9,r6,15
   46d44:	20001726 	beq	r4,zero,46da4 <memcpy+0xf8>
   46d48:	2811883a 	mov	r8,r5
   46d4c:	1809883a 	mov	r4,r3
   46d50:	1a57883a 	add	r11,r3,r9
   46d54:	42800017 	ldw	r10,0(r8)
   46d58:	21000104 	addi	r4,r4,4
   46d5c:	590fc83a 	sub	r7,r11,r4
   46d60:	39c00128 	cmpgeui	r7,r7,4
   46d64:	22bfff15 	stw	r10,-4(r4)
   46d68:	42000104 	addi	r8,r8,4
   46d6c:	383ff91e 	bne	r7,zero,46d54 <memcpy+0xa8>
   46d70:	493fff04 	addi	r4,r9,-4
   46d74:	2008d0ba 	srli	r4,r4,2
   46d78:	318000cc 	andi	r6,r6,3
   46d7c:	31ffffc4 	addi	r7,r6,-1
   46d80:	21000044 	addi	r4,r4,1
   46d84:	200890ba 	slli	r4,r4,2
   46d88:	1907883a 	add	r3,r3,r4
   46d8c:	290b883a 	add	r5,r5,r4
   46d90:	303fcc1e 	bne	r6,zero,46cc4 <memcpy+0x18>
   46d94:	f800283a 	ret
   46d98:	31ffffc4 	addi	r7,r6,-1
   46d9c:	2007883a 	mov	r3,r4
   46da0:	003fc806 	br	46cc4 <memcpy+0x18>
   46da4:	480d883a 	mov	r6,r9
   46da8:	003fc406 	br	46cbc <memcpy+0x10>

00046dac <memmove>:
   46dac:	2005883a 	mov	r2,r4
   46db0:	29000a2e 	bgeu	r5,r4,46ddc <memmove+0x30>
   46db4:	298f883a 	add	r7,r5,r6
   46db8:	21c0082e 	bgeu	r4,r7,46ddc <memmove+0x30>
   46dbc:	2187883a 	add	r3,r4,r6
   46dc0:	30001226 	beq	r6,zero,46e0c <memmove+0x60>
   46dc4:	397fffc3 	ldbu	r5,-1(r7)
   46dc8:	18ffffc4 	addi	r3,r3,-1
   46dcc:	39ffffc4 	addi	r7,r7,-1
   46dd0:	19400005 	stb	r5,0(r3)
   46dd4:	10fffb1e 	bne	r2,r3,46dc4 <memmove+0x18>
   46dd8:	f800283a 	ret
   46ddc:	30c00428 	cmpgeui	r3,r6,16
   46de0:	18000b1e 	bne	r3,zero,46e10 <memmove+0x64>
   46de4:	1007883a 	mov	r3,r2
   46de8:	31ffffc4 	addi	r7,r6,-1
   46dec:	30003626 	beq	r6,zero,46ec8 <memmove+0x11c>
   46df0:	39c00044 	addi	r7,r7,1
   46df4:	19cf883a 	add	r7,r3,r7
   46df8:	29800003 	ldbu	r6,0(r5)
   46dfc:	18c00044 	addi	r3,r3,1
   46e00:	29400044 	addi	r5,r5,1
   46e04:	19bfffc5 	stb	r6,-1(r3)
   46e08:	19fffb1e 	bne	r3,r7,46df8 <memmove+0x4c>
   46e0c:	f800283a 	ret
   46e10:	1146b03a 	or	r3,r2,r5
   46e14:	18c000cc 	andi	r3,r3,3
   46e18:	1800281e 	bne	r3,zero,46ebc <memmove+0x110>
   46e1c:	313ffc04 	addi	r4,r6,-16
   46e20:	2008d13a 	srli	r4,r4,4
   46e24:	2811883a 	mov	r8,r5
   46e28:	100f883a 	mov	r7,r2
   46e2c:	21000044 	addi	r4,r4,1
   46e30:	2008913a 	slli	r4,r4,4
   46e34:	1107883a 	add	r3,r2,r4
   46e38:	42400017 	ldw	r9,0(r8)
   46e3c:	42000404 	addi	r8,r8,16
   46e40:	39c00404 	addi	r7,r7,16
   46e44:	3a7ffc15 	stw	r9,-16(r7)
   46e48:	427ffd17 	ldw	r9,-12(r8)
   46e4c:	3a7ffd15 	stw	r9,-12(r7)
   46e50:	427ffe17 	ldw	r9,-8(r8)
   46e54:	3a7ffe15 	stw	r9,-8(r7)
   46e58:	427fff17 	ldw	r9,-4(r8)
   46e5c:	3a7fff15 	stw	r9,-4(r7)
   46e60:	38fff51e 	bne	r7,r3,46e38 <memmove+0x8c>
   46e64:	31c0030c 	andi	r7,r6,12
   46e68:	290b883a 	add	r5,r5,r4
   46e6c:	324003cc 	andi	r9,r6,15
   46e70:	38001626 	beq	r7,zero,46ecc <memmove+0x120>
   46e74:	2809883a 	mov	r4,r5
   46e78:	180f883a 	mov	r7,r3
   46e7c:	1a57883a 	add	r11,r3,r9
   46e80:	22800017 	ldw	r10,0(r4)
   46e84:	39c00104 	addi	r7,r7,4
   46e88:	59d1c83a 	sub	r8,r11,r7
   46e8c:	42000128 	cmpgeui	r8,r8,4
   46e90:	3abfff15 	stw	r10,-4(r7)
   46e94:	21000104 	addi	r4,r4,4
   46e98:	403ff91e 	bne	r8,zero,46e80 <memmove+0xd4>
   46e9c:	493fff04 	addi	r4,r9,-4
   46ea0:	2008d0ba 	srli	r4,r4,2
   46ea4:	318000cc 	andi	r6,r6,3
   46ea8:	21000044 	addi	r4,r4,1
   46eac:	200890ba 	slli	r4,r4,2
   46eb0:	1907883a 	add	r3,r3,r4
   46eb4:	290b883a 	add	r5,r5,r4
   46eb8:	003fcb06 	br	46de8 <memmove+0x3c>
   46ebc:	31ffffc4 	addi	r7,r6,-1
   46ec0:	1007883a 	mov	r3,r2
   46ec4:	003fca06 	br	46df0 <memmove+0x44>
   46ec8:	f800283a 	ret
   46ecc:	480d883a 	mov	r6,r9
   46ed0:	003fc506 	br	46de8 <memmove+0x3c>

00046ed4 <memset>:
   46ed4:	20c000cc 	andi	r3,r4,3
   46ed8:	2005883a 	mov	r2,r4
   46edc:	18003626 	beq	r3,zero,46fb8 <memset+0xe4>
   46ee0:	31ffffc4 	addi	r7,r6,-1
   46ee4:	30003226 	beq	r6,zero,46fb0 <memset+0xdc>
   46ee8:	2811883a 	mov	r8,r5
   46eec:	2007883a 	mov	r3,r4
   46ef0:	00000306 	br	46f00 <memset+0x2c>
   46ef4:	39ffffc4 	addi	r7,r7,-1
   46ef8:	39bfffe0 	cmpeqi	r6,r7,-1
   46efc:	30002c1e 	bne	r6,zero,46fb0 <memset+0xdc>
   46f00:	18c00044 	addi	r3,r3,1
   46f04:	198000cc 	andi	r6,r3,3
   46f08:	1a3fffc5 	stb	r8,-1(r3)
   46f0c:	303ff91e 	bne	r6,zero,46ef4 <memset+0x20>
   46f10:	39000128 	cmpgeui	r4,r7,4
   46f14:	20002126 	beq	r4,zero,46f9c <memset+0xc8>
   46f18:	02004074 	movhi	r8,257
   46f1c:	29803fcc 	andi	r6,r5,255
   46f20:	42004044 	addi	r8,r8,257
   46f24:	39000430 	cmpltui	r4,r7,16
   46f28:	320d383a 	mul	r6,r6,r8
   46f2c:	2000251e 	bne	r4,zero,46fc4 <memset+0xf0>
   46f30:	393ffc04 	addi	r4,r7,-16
   46f34:	2008d13a 	srli	r4,r4,4
   46f38:	21000044 	addi	r4,r4,1
   46f3c:	2008913a 	slli	r4,r4,4
   46f40:	1909883a 	add	r4,r3,r4
   46f44:	19800015 	stw	r6,0(r3)
   46f48:	19800115 	stw	r6,4(r3)
   46f4c:	19800215 	stw	r6,8(r3)
   46f50:	19800315 	stw	r6,12(r3)
   46f54:	18c00404 	addi	r3,r3,16
   46f58:	193ffa1e 	bne	r3,r4,46f44 <memset+0x70>
   46f5c:	3a00030c 	andi	r8,r7,12
   46f60:	39c003cc 	andi	r7,r7,15
   46f64:	40000d26 	beq	r8,zero,46f9c <memset+0xc8>
   46f68:	2007883a 	mov	r3,r4
   46f6c:	21d3883a 	add	r9,r4,r7
   46f70:	18c00104 	addi	r3,r3,4
   46f74:	48d1c83a 	sub	r8,r9,r3
   46f78:	42000128 	cmpgeui	r8,r8,4
   46f7c:	19bfff15 	stw	r6,-4(r3)
   46f80:	403ffb1e 	bne	r8,zero,46f70 <memset+0x9c>
   46f84:	38ffff04 	addi	r3,r7,-4
   46f88:	1806d0ba 	srli	r3,r3,2
   46f8c:	39c000cc 	andi	r7,r7,3
   46f90:	18c00044 	addi	r3,r3,1
   46f94:	180690ba 	slli	r3,r3,2
   46f98:	20c7883a 	add	r3,r4,r3
   46f9c:	38000526 	beq	r7,zero,46fb4 <memset+0xe0>
   46fa0:	19cf883a 	add	r7,r3,r7
   46fa4:	18c00044 	addi	r3,r3,1
   46fa8:	197fffc5 	stb	r5,-1(r3)
   46fac:	38fffd1e 	bne	r7,r3,46fa4 <memset+0xd0>
   46fb0:	f800283a 	ret
   46fb4:	f800283a 	ret
   46fb8:	2007883a 	mov	r3,r4
   46fbc:	300f883a 	mov	r7,r6
   46fc0:	003fd306 	br	46f10 <memset+0x3c>
   46fc4:	1809883a 	mov	r4,r3
   46fc8:	003fe706 	br	46f68 <memset+0x94>

00046fcc <_Balloc>:
   46fcc:	20801317 	ldw	r2,76(r4)
   46fd0:	defffc04 	addi	sp,sp,-16
   46fd4:	dc400115 	stw	r17,4(sp)
   46fd8:	dc000015 	stw	r16,0(sp)
   46fdc:	dfc00315 	stw	ra,12(sp)
   46fe0:	dc800215 	stw	r18,8(sp)
   46fe4:	2021883a 	mov	r16,r4
   46fe8:	2823883a 	mov	r17,r5
   46fec:	10000e26 	beq	r2,zero,47028 <_Balloc+0x5c>
   46ff0:	880690ba 	slli	r3,r17,2
   46ff4:	10c7883a 	add	r3,r2,r3
   46ff8:	18800017 	ldw	r2,0(r3)
   46ffc:	10001126 	beq	r2,zero,47044 <_Balloc+0x78>
   47000:	11000017 	ldw	r4,0(r2)
   47004:	19000015 	stw	r4,0(r3)
   47008:	10000415 	stw	zero,16(r2)
   4700c:	10000315 	stw	zero,12(r2)
   47010:	dfc00317 	ldw	ra,12(sp)
   47014:	dc800217 	ldw	r18,8(sp)
   47018:	dc400117 	ldw	r17,4(sp)
   4701c:	dc000017 	ldw	r16,0(sp)
   47020:	dec00404 	addi	sp,sp,16
   47024:	f800283a 	ret
   47028:	01800844 	movi	r6,33
   4702c:	01400104 	movi	r5,4
   47030:	0049e3c0 	call	49e3c <_calloc_r>
   47034:	80801315 	stw	r2,76(r16)
   47038:	103fed1e 	bne	r2,zero,46ff0 <_Balloc+0x24>
   4703c:	0005883a 	mov	r2,zero
   47040:	003ff306 	br	47010 <_Balloc+0x44>
   47044:	04800044 	movi	r18,1
   47048:	9464983a 	sll	r18,r18,r17
   4704c:	01400044 	movi	r5,1
   47050:	8009883a 	mov	r4,r16
   47054:	91800144 	addi	r6,r18,5
   47058:	300c90ba 	slli	r6,r6,2
   4705c:	0049e3c0 	call	49e3c <_calloc_r>
   47060:	103ff626 	beq	r2,zero,4703c <_Balloc+0x70>
   47064:	14400115 	stw	r17,4(r2)
   47068:	14800215 	stw	r18,8(r2)
   4706c:	003fe606 	br	47008 <_Balloc+0x3c>

00047070 <_Bfree>:
   47070:	28000726 	beq	r5,zero,47090 <_Bfree+0x20>
   47074:	28c00117 	ldw	r3,4(r5)
   47078:	20801317 	ldw	r2,76(r4)
   4707c:	180690ba 	slli	r3,r3,2
   47080:	10c5883a 	add	r2,r2,r3
   47084:	10c00017 	ldw	r3,0(r2)
   47088:	28c00015 	stw	r3,0(r5)
   4708c:	11400015 	stw	r5,0(r2)
   47090:	f800283a 	ret

00047094 <__multadd>:
   47094:	defffa04 	addi	sp,sp,-24
   47098:	dc400115 	stw	r17,4(sp)
   4709c:	2c400417 	ldw	r17,16(r5)
   470a0:	dcc00315 	stw	r19,12(sp)
   470a4:	dc800215 	stw	r18,8(sp)
   470a8:	dc000015 	stw	r16,0(sp)
   470ac:	dfc00515 	stw	ra,20(sp)
   470b0:	dd000415 	stw	r20,16(sp)
   470b4:	2825883a 	mov	r18,r5
   470b8:	2027883a 	mov	r19,r4
   470bc:	3821883a 	mov	r16,r7
   470c0:	2a400504 	addi	r9,r5,20
   470c4:	0015883a 	mov	r10,zero
   470c8:	48c00017 	ldw	r3,0(r9)
   470cc:	4a400104 	addi	r9,r9,4
   470d0:	52800044 	addi	r10,r10,1
   470d4:	1a3fffcc 	andi	r8,r3,65535
   470d8:	4191383a 	mul	r8,r8,r6
   470dc:	180ed43a 	srli	r7,r3,16
   470e0:	4407883a 	add	r3,r8,r16
   470e4:	1810d43a 	srli	r8,r3,16
   470e8:	398f383a 	mul	r7,r7,r6
   470ec:	18ffffcc 	andi	r3,r3,65535
   470f0:	3a0f883a 	add	r7,r7,r8
   470f4:	3810943a 	slli	r8,r7,16
   470f8:	3820d43a 	srli	r16,r7,16
   470fc:	40c7883a 	add	r3,r8,r3
   47100:	48ffff15 	stw	r3,-4(r9)
   47104:	547ff016 	blt	r10,r17,470c8 <__multadd+0x34>
   47108:	80000826 	beq	r16,zero,4712c <__multadd+0x98>
   4710c:	90800217 	ldw	r2,8(r18)
   47110:	88800f0e 	bge	r17,r2,47150 <__multadd+0xbc>
   47114:	88800144 	addi	r2,r17,5
   47118:	100490ba 	slli	r2,r2,2
   4711c:	8c400044 	addi	r17,r17,1
   47120:	9085883a 	add	r2,r18,r2
   47124:	14000015 	stw	r16,0(r2)
   47128:	94400415 	stw	r17,16(r18)
   4712c:	9005883a 	mov	r2,r18
   47130:	dfc00517 	ldw	ra,20(sp)
   47134:	dd000417 	ldw	r20,16(sp)
   47138:	dcc00317 	ldw	r19,12(sp)
   4713c:	dc800217 	ldw	r18,8(sp)
   47140:	dc400117 	ldw	r17,4(sp)
   47144:	dc000017 	ldw	r16,0(sp)
   47148:	dec00604 	addi	sp,sp,24
   4714c:	f800283a 	ret
   47150:	91400117 	ldw	r5,4(r18)
   47154:	9809883a 	mov	r4,r19
   47158:	29400044 	addi	r5,r5,1
   4715c:	0046fcc0 	call	46fcc <_Balloc>
   47160:	1029883a 	mov	r20,r2
   47164:	10001026 	beq	r2,zero,471a8 <__multadd+0x114>
   47168:	91800417 	ldw	r6,16(r18)
   4716c:	91400304 	addi	r5,r18,12
   47170:	11000304 	addi	r4,r2,12
   47174:	31800084 	addi	r6,r6,2
   47178:	300c90ba 	slli	r6,r6,2
   4717c:	0046cac0 	call	46cac <memcpy>
   47180:	90000726 	beq	r18,zero,471a0 <__multadd+0x10c>
   47184:	90c00117 	ldw	r3,4(r18)
   47188:	98801317 	ldw	r2,76(r19)
   4718c:	180690ba 	slli	r3,r3,2
   47190:	10c5883a 	add	r2,r2,r3
   47194:	10c00017 	ldw	r3,0(r2)
   47198:	90c00015 	stw	r3,0(r18)
   4719c:	14800015 	stw	r18,0(r2)
   471a0:	a025883a 	mov	r18,r20
   471a4:	003fdb06 	br	47114 <__multadd+0x80>
   471a8:	01c00174 	movhi	r7,5
   471ac:	01000174 	movhi	r4,5
   471b0:	39c06004 	addi	r7,r7,384
   471b4:	000d883a 	mov	r6,zero
   471b8:	01402d44 	movi	r5,181
   471bc:	21007404 	addi	r4,r4,464
   471c0:	0049dc40 	call	49dc4 <__assert_func>

000471c4 <__s2b>:
   471c4:	defff904 	addi	sp,sp,-28
   471c8:	dc800215 	stw	r18,8(sp)
   471cc:	dc000015 	stw	r16,0(sp)
   471d0:	2025883a 	mov	r18,r4
   471d4:	2821883a 	mov	r16,r5
   471d8:	39000204 	addi	r4,r7,8
   471dc:	01400244 	movi	r5,9
   471e0:	dcc00315 	stw	r19,12(sp)
   471e4:	dc400115 	stw	r17,4(sp)
   471e8:	dfc00615 	stw	ra,24(sp)
   471ec:	3823883a 	mov	r17,r7
   471f0:	dd400515 	stw	r21,20(sp)
   471f4:	dd000415 	stw	r20,16(sp)
   471f8:	3027883a 	mov	r19,r6
   471fc:	0040e180 	call	40e18 <__divsi3>
   47200:	88c00290 	cmplti	r3,r17,10
   47204:	1800341e 	bne	r3,zero,472d8 <__s2b+0x114>
   47208:	00c00044 	movi	r3,1
   4720c:	000b883a 	mov	r5,zero
   47210:	18c7883a 	add	r3,r3,r3
   47214:	29400044 	addi	r5,r5,1
   47218:	18bffd16 	blt	r3,r2,47210 <__s2b+0x4c>
   4721c:	9009883a 	mov	r4,r18
   47220:	0046fcc0 	call	46fcc <_Balloc>
   47224:	100b883a 	mov	r5,r2
   47228:	10002d26 	beq	r2,zero,472e0 <__s2b+0x11c>
   4722c:	d8800717 	ldw	r2,28(sp)
   47230:	28800515 	stw	r2,20(r5)
   47234:	00800044 	movi	r2,1
   47238:	28800415 	stw	r2,16(r5)
   4723c:	98800290 	cmplti	r2,r19,10
   47240:	1000221e 	bne	r2,zero,472cc <__s2b+0x108>
   47244:	85400244 	addi	r21,r16,9
   47248:	a829883a 	mov	r20,r21
   4724c:	84e1883a 	add	r16,r16,r19
   47250:	a1c00007 	ldb	r7,0(r20)
   47254:	01800284 	movi	r6,10
   47258:	9009883a 	mov	r4,r18
   4725c:	39fff404 	addi	r7,r7,-48
   47260:	00470940 	call	47094 <__multadd>
   47264:	a5000044 	addi	r20,r20,1
   47268:	100b883a 	mov	r5,r2
   4726c:	a43ff81e 	bne	r20,r16,47250 <__s2b+0x8c>
   47270:	9c3ffe04 	addi	r16,r19,-8
   47274:	ac21883a 	add	r16,r21,r16
   47278:	9c400a0e 	bge	r19,r17,472a4 <__s2b+0xe0>
   4727c:	8ce3c83a 	sub	r17,r17,r19
   47280:	8463883a 	add	r17,r16,r17
   47284:	81c00007 	ldb	r7,0(r16)
   47288:	01800284 	movi	r6,10
   4728c:	9009883a 	mov	r4,r18
   47290:	39fff404 	addi	r7,r7,-48
   47294:	00470940 	call	47094 <__multadd>
   47298:	84000044 	addi	r16,r16,1
   4729c:	100b883a 	mov	r5,r2
   472a0:	8c3ff81e 	bne	r17,r16,47284 <__s2b+0xc0>
   472a4:	2805883a 	mov	r2,r5
   472a8:	dfc00617 	ldw	ra,24(sp)
   472ac:	dd400517 	ldw	r21,20(sp)
   472b0:	dd000417 	ldw	r20,16(sp)
   472b4:	dcc00317 	ldw	r19,12(sp)
   472b8:	dc800217 	ldw	r18,8(sp)
   472bc:	dc400117 	ldw	r17,4(sp)
   472c0:	dc000017 	ldw	r16,0(sp)
   472c4:	dec00704 	addi	sp,sp,28
   472c8:	f800283a 	ret
   472cc:	84000284 	addi	r16,r16,10
   472d0:	04c00244 	movi	r19,9
   472d4:	003fe806 	br	47278 <__s2b+0xb4>
   472d8:	000b883a 	mov	r5,zero
   472dc:	003fcf06 	br	4721c <__s2b+0x58>
   472e0:	01c00174 	movhi	r7,5
   472e4:	01000174 	movhi	r4,5
   472e8:	39c06004 	addi	r7,r7,384
   472ec:	000d883a 	mov	r6,zero
   472f0:	01403384 	movi	r5,206
   472f4:	21007404 	addi	r4,r4,464
   472f8:	0049dc40 	call	49dc4 <__assert_func>

000472fc <__hi0bits>:
   472fc:	00bfffd4 	movui	r2,65535
   47300:	11001536 	bltu	r2,r4,47358 <__hi0bits+0x5c>
   47304:	2008943a 	slli	r4,r4,16
   47308:	00800404 	movi	r2,16
   4730c:	00c04034 	movhi	r3,256
   47310:	20c0022e 	bgeu	r4,r3,4731c <__hi0bits+0x20>
   47314:	2008923a 	slli	r4,r4,8
   47318:	10800204 	addi	r2,r2,8
   4731c:	00c40034 	movhi	r3,4096
   47320:	20c0022e 	bgeu	r4,r3,4732c <__hi0bits+0x30>
   47324:	2008913a 	slli	r4,r4,4
   47328:	10800104 	addi	r2,r2,4
   4732c:	00d00034 	movhi	r3,16384
   47330:	20c00336 	bltu	r4,r3,47340 <__hi0bits+0x44>
   47334:	20000716 	blt	r4,zero,47354 <__hi0bits+0x58>
   47338:	10800044 	addi	r2,r2,1
   4733c:	f800283a 	ret
   47340:	200890ba 	slli	r4,r4,2
   47344:	20000616 	blt	r4,zero,47360 <__hi0bits+0x64>
   47348:	2110002c 	andhi	r4,r4,16384
   4734c:	2000061e 	bne	r4,zero,47368 <__hi0bits+0x6c>
   47350:	00800804 	movi	r2,32
   47354:	f800283a 	ret
   47358:	0005883a 	mov	r2,zero
   4735c:	003feb06 	br	4730c <__hi0bits+0x10>
   47360:	10800084 	addi	r2,r2,2
   47364:	f800283a 	ret
   47368:	108000c4 	addi	r2,r2,3
   4736c:	f800283a 	ret

00047370 <__lo0bits>:
   47370:	20c00017 	ldw	r3,0(r4)
   47374:	188001cc 	andi	r2,r3,7
   47378:	10000826 	beq	r2,zero,4739c <__lo0bits+0x2c>
   4737c:	1880004c 	andi	r2,r3,1
   47380:	10001f1e 	bne	r2,zero,47400 <__lo0bits+0x90>
   47384:	1880008c 	andi	r2,r3,2
   47388:	10002126 	beq	r2,zero,47410 <__lo0bits+0xa0>
   4738c:	1806d07a 	srli	r3,r3,1
   47390:	00800044 	movi	r2,1
   47394:	20c00015 	stw	r3,0(r4)
   47398:	f800283a 	ret
   4739c:	18bfffcc 	andi	r2,r3,65535
   473a0:	10001426 	beq	r2,zero,473f4 <__lo0bits+0x84>
   473a4:	0005883a 	mov	r2,zero
   473a8:	19403fcc 	andi	r5,r3,255
   473ac:	2800021e 	bne	r5,zero,473b8 <__lo0bits+0x48>
   473b0:	1806d23a 	srli	r3,r3,8
   473b4:	10800204 	addi	r2,r2,8
   473b8:	194003cc 	andi	r5,r3,15
   473bc:	2800021e 	bne	r5,zero,473c8 <__lo0bits+0x58>
   473c0:	1806d13a 	srli	r3,r3,4
   473c4:	10800104 	addi	r2,r2,4
   473c8:	194000cc 	andi	r5,r3,3
   473cc:	2800021e 	bne	r5,zero,473d8 <__lo0bits+0x68>
   473d0:	1806d0ba 	srli	r3,r3,2
   473d4:	10800084 	addi	r2,r2,2
   473d8:	1940004c 	andi	r5,r3,1
   473dc:	2800031e 	bne	r5,zero,473ec <__lo0bits+0x7c>
   473e0:	1806d07a 	srli	r3,r3,1
   473e4:	10800044 	addi	r2,r2,1
   473e8:	18000726 	beq	r3,zero,47408 <__lo0bits+0x98>
   473ec:	20c00015 	stw	r3,0(r4)
   473f0:	f800283a 	ret
   473f4:	1806d43a 	srli	r3,r3,16
   473f8:	00800404 	movi	r2,16
   473fc:	003fea06 	br	473a8 <__lo0bits+0x38>
   47400:	0005883a 	mov	r2,zero
   47404:	f800283a 	ret
   47408:	00800804 	movi	r2,32
   4740c:	f800283a 	ret
   47410:	1806d0ba 	srli	r3,r3,2
   47414:	00800084 	movi	r2,2
   47418:	20c00015 	stw	r3,0(r4)
   4741c:	f800283a 	ret

00047420 <__i2b>:
   47420:	20c01317 	ldw	r3,76(r4)
   47424:	defffd04 	addi	sp,sp,-12
   47428:	dc400115 	stw	r17,4(sp)
   4742c:	dc000015 	stw	r16,0(sp)
   47430:	dfc00215 	stw	ra,8(sp)
   47434:	2021883a 	mov	r16,r4
   47438:	2823883a 	mov	r17,r5
   4743c:	18000d26 	beq	r3,zero,47474 <__i2b+0x54>
   47440:	18800117 	ldw	r2,4(r3)
   47444:	10001826 	beq	r2,zero,474a8 <__i2b+0x88>
   47448:	11000017 	ldw	r4,0(r2)
   4744c:	19000115 	stw	r4,4(r3)
   47450:	00c00044 	movi	r3,1
   47454:	10000315 	stw	zero,12(r2)
   47458:	14400515 	stw	r17,20(r2)
   4745c:	10c00415 	stw	r3,16(r2)
   47460:	dfc00217 	ldw	ra,8(sp)
   47464:	dc400117 	ldw	r17,4(sp)
   47468:	dc000017 	ldw	r16,0(sp)
   4746c:	dec00304 	addi	sp,sp,12
   47470:	f800283a 	ret
   47474:	01800844 	movi	r6,33
   47478:	01400104 	movi	r5,4
   4747c:	0049e3c0 	call	49e3c <_calloc_r>
   47480:	80801315 	stw	r2,76(r16)
   47484:	1007883a 	mov	r3,r2
   47488:	103fed1e 	bne	r2,zero,47440 <__i2b+0x20>
   4748c:	01c00174 	movhi	r7,5
   47490:	01000174 	movhi	r4,5
   47494:	39c06004 	addi	r7,r7,384
   47498:	000d883a 	mov	r6,zero
   4749c:	01405004 	movi	r5,320
   474a0:	21007404 	addi	r4,r4,464
   474a4:	0049dc40 	call	49dc4 <__assert_func>
   474a8:	01800704 	movi	r6,28
   474ac:	01400044 	movi	r5,1
   474b0:	8009883a 	mov	r4,r16
   474b4:	0049e3c0 	call	49e3c <_calloc_r>
   474b8:	103ff426 	beq	r2,zero,4748c <__i2b+0x6c>
   474bc:	00c00044 	movi	r3,1
   474c0:	10c00115 	stw	r3,4(r2)
   474c4:	00c00084 	movi	r3,2
   474c8:	10c00215 	stw	r3,8(r2)
   474cc:	003fe006 	br	47450 <__i2b+0x30>

000474d0 <__multiply>:
   474d0:	defff804 	addi	sp,sp,-32
   474d4:	dd400515 	stw	r21,20(sp)
   474d8:	dd000415 	stw	r20,16(sp)
   474dc:	35400417 	ldw	r21,16(r6)
   474e0:	2d000417 	ldw	r20,16(r5)
   474e4:	dd800615 	stw	r22,24(sp)
   474e8:	dcc00315 	stw	r19,12(sp)
   474ec:	dfc00715 	stw	ra,28(sp)
   474f0:	dc800215 	stw	r18,8(sp)
   474f4:	dc400115 	stw	r17,4(sp)
   474f8:	dc000015 	stw	r16,0(sp)
   474fc:	282d883a 	mov	r22,r5
   47500:	3027883a 	mov	r19,r6
   47504:	a5400516 	blt	r20,r21,4751c <__multiply+0x4c>
   47508:	a807883a 	mov	r3,r21
   4750c:	2827883a 	mov	r19,r5
   47510:	a02b883a 	mov	r21,r20
   47514:	302d883a 	mov	r22,r6
   47518:	1829883a 	mov	r20,r3
   4751c:	98800217 	ldw	r2,8(r19)
   47520:	ad23883a 	add	r17,r21,r20
   47524:	99400117 	ldw	r5,4(r19)
   47528:	1440010e 	bge	r2,r17,47530 <__multiply+0x60>
   4752c:	29400044 	addi	r5,r5,1
   47530:	0046fcc0 	call	46fcc <_Balloc>
   47534:	1025883a 	mov	r18,r2
   47538:	10007326 	beq	r2,zero,47708 <__multiply+0x238>
   4753c:	882090ba 	slli	r16,r17,2
   47540:	11000504 	addi	r4,r2,20
   47544:	2421883a 	add	r16,r4,r16
   47548:	2400082e 	bgeu	r4,r16,4756c <__multiply+0x9c>
   4754c:	808dc83a 	sub	r6,r16,r2
   47550:	31bffac4 	addi	r6,r6,-21
   47554:	300cd0ba 	srli	r6,r6,2
   47558:	000b883a 	mov	r5,zero
   4755c:	31800044 	addi	r6,r6,1
   47560:	300c90ba 	slli	r6,r6,2
   47564:	0046ed40 	call	46ed4 <memset>
   47568:	1009883a 	mov	r4,r2
   4756c:	a01090ba 	slli	r8,r20,2
   47570:	a80e90ba 	slli	r7,r21,2
   47574:	b1400504 	addi	r5,r22,20
   47578:	9a400504 	addi	r9,r19,20
   4757c:	2a11883a 	add	r8,r5,r8
   47580:	49cf883a 	add	r7,r9,r7
   47584:	2a004b2e 	bgeu	r5,r8,476b4 <__multiply+0x1e4>
   47588:	98800544 	addi	r2,r19,21
   4758c:	38805c36 	bltu	r7,r2,47700 <__multiply+0x230>
   47590:	3cc5c83a 	sub	r2,r7,r19
   47594:	10bffac4 	addi	r2,r2,-21
   47598:	1004d0ba 	srli	r2,r2,2
   4759c:	10800044 	addi	r2,r2,1
   475a0:	100490ba 	slli	r2,r2,2
   475a4:	00000506 	br	475bc <__multiply+0xec>
   475a8:	5816d43a 	srli	r11,r11,16
   475ac:	5800231e 	bne	r11,zero,4763c <__multiply+0x16c>
   475b0:	29400104 	addi	r5,r5,4
   475b4:	21000104 	addi	r4,r4,4
   475b8:	2a003e2e 	bgeu	r5,r8,476b4 <__multiply+0x1e4>
   475bc:	2ac00017 	ldw	r11,0(r5)
   475c0:	5b7fffcc 	andi	r13,r11,65535
   475c4:	683ff826 	beq	r13,zero,475a8 <__multiply+0xd8>
   475c8:	2019883a 	mov	r12,r4
   475cc:	4817883a 	mov	r11,r9
   475d0:	001d883a 	mov	r14,zero
   475d4:	58c00017 	ldw	r3,0(r11)
   475d8:	62800017 	ldw	r10,0(r12)
   475dc:	63000104 	addi	r12,r12,4
   475e0:	19bfffcc 	andi	r6,r3,65535
   475e4:	334d383a 	mul	r6,r6,r13
   475e8:	1806d43a 	srli	r3,r3,16
   475ec:	53ffffcc 	andi	r15,r10,65535
   475f0:	33cd883a 	add	r6,r6,r15
   475f4:	5014d43a 	srli	r10,r10,16
   475f8:	338d883a 	add	r6,r6,r14
   475fc:	1b47383a 	mul	r3,r3,r13
   47600:	301cd43a 	srli	r14,r6,16
   47604:	31bfffcc 	andi	r6,r6,65535
   47608:	1a87883a 	add	r3,r3,r10
   4760c:	1b87883a 	add	r3,r3,r14
   47610:	1814943a 	slli	r10,r3,16
   47614:	181cd43a 	srli	r14,r3,16
   47618:	5ac00104 	addi	r11,r11,4
   4761c:	5186b03a 	or	r3,r10,r6
   47620:	60ffff15 	stw	r3,-4(r12)
   47624:	59ffeb36 	bltu	r11,r7,475d4 <__multiply+0x104>
   47628:	2087883a 	add	r3,r4,r2
   4762c:	1b800015 	stw	r14,0(r3)
   47630:	2ac00017 	ldw	r11,0(r5)
   47634:	5816d43a 	srli	r11,r11,16
   47638:	583fdd26 	beq	r11,zero,475b0 <__multiply+0xe0>
   4763c:	20c00017 	ldw	r3,0(r4)
   47640:	2019883a 	mov	r12,r4
   47644:	4815883a 	mov	r10,r9
   47648:	181b883a 	mov	r13,r3
   4764c:	001d883a 	mov	r14,zero
   47650:	5180000b 	ldhu	r6,0(r10)
   47654:	681ed43a 	srli	r15,r13,16
   47658:	18ffffcc 	andi	r3,r3,65535
   4765c:	32cd383a 	mul	r6,r6,r11
   47660:	52800104 	addi	r10,r10,4
   47664:	63400117 	ldw	r13,4(r12)
   47668:	338d883a 	add	r6,r6,r14
   4766c:	33cd883a 	add	r6,r6,r15
   47670:	301c943a 	slli	r14,r6,16
   47674:	300cd43a 	srli	r6,r6,16
   47678:	6bffffcc 	andi	r15,r13,65535
   4767c:	70c6b03a 	or	r3,r14,r3
   47680:	60c00015 	stw	r3,0(r12)
   47684:	50ffff8b 	ldhu	r3,-2(r10)
   47688:	63000104 	addi	r12,r12,4
   4768c:	1ac7383a 	mul	r3,r3,r11
   47690:	1bc7883a 	add	r3,r3,r15
   47694:	1987883a 	add	r3,r3,r6
   47698:	181cd43a 	srli	r14,r3,16
   4769c:	51ffec36 	bltu	r10,r7,47650 <__multiply+0x180>
   476a0:	208d883a 	add	r6,r4,r2
   476a4:	30c00015 	stw	r3,0(r6)
   476a8:	29400104 	addi	r5,r5,4
   476ac:	21000104 	addi	r4,r4,4
   476b0:	2a3fc236 	bltu	r5,r8,475bc <__multiply+0xec>
   476b4:	04400316 	blt	zero,r17,476c4 <__multiply+0x1f4>
   476b8:	00000506 	br	476d0 <__multiply+0x200>
   476bc:	8c7fffc4 	addi	r17,r17,-1
   476c0:	88000326 	beq	r17,zero,476d0 <__multiply+0x200>
   476c4:	80bfff17 	ldw	r2,-4(r16)
   476c8:	843fff04 	addi	r16,r16,-4
   476cc:	103ffb26 	beq	r2,zero,476bc <__multiply+0x1ec>
   476d0:	9005883a 	mov	r2,r18
   476d4:	94400415 	stw	r17,16(r18)
   476d8:	dfc00717 	ldw	ra,28(sp)
   476dc:	dd800617 	ldw	r22,24(sp)
   476e0:	dd400517 	ldw	r21,20(sp)
   476e4:	dd000417 	ldw	r20,16(sp)
   476e8:	dcc00317 	ldw	r19,12(sp)
   476ec:	dc800217 	ldw	r18,8(sp)
   476f0:	dc400117 	ldw	r17,4(sp)
   476f4:	dc000017 	ldw	r16,0(sp)
   476f8:	dec00804 	addi	sp,sp,32
   476fc:	f800283a 	ret
   47700:	00800104 	movi	r2,4
   47704:	003fad06 	br	475bc <__multiply+0xec>
   47708:	01c00174 	movhi	r7,5
   4770c:	01000174 	movhi	r4,5
   47710:	39c06004 	addi	r7,r7,384
   47714:	000d883a 	mov	r6,zero
   47718:	01405744 	movi	r5,349
   4771c:	21007404 	addi	r4,r4,464
   47720:	0049dc40 	call	49dc4 <__assert_func>

00047724 <__pow5mult>:
   47724:	defffb04 	addi	sp,sp,-20
   47728:	dcc00315 	stw	r19,12(sp)
   4772c:	dc000015 	stw	r16,0(sp)
   47730:	dfc00415 	stw	ra,16(sp)
   47734:	dc800215 	stw	r18,8(sp)
   47738:	dc400115 	stw	r17,4(sp)
   4773c:	308000cc 	andi	r2,r6,3
   47740:	3021883a 	mov	r16,r6
   47744:	2027883a 	mov	r19,r4
   47748:	10002b1e 	bne	r2,zero,477f8 <__pow5mult+0xd4>
   4774c:	2825883a 	mov	r18,r5
   47750:	8021d0ba 	srai	r16,r16,2
   47754:	80001926 	beq	r16,zero,477bc <__pow5mult+0x98>
   47758:	9c401217 	ldw	r17,72(r19)
   4775c:	8800061e 	bne	r17,zero,47778 <__pow5mult+0x54>
   47760:	00002d06 	br	47818 <__pow5mult+0xf4>
   47764:	8021d07a 	srai	r16,r16,1
   47768:	80001426 	beq	r16,zero,477bc <__pow5mult+0x98>
   4776c:	88800017 	ldw	r2,0(r17)
   47770:	10001a26 	beq	r2,zero,477dc <__pow5mult+0xb8>
   47774:	1023883a 	mov	r17,r2
   47778:	8080004c 	andi	r2,r16,1
   4777c:	103ff926 	beq	r2,zero,47764 <__pow5mult+0x40>
   47780:	880d883a 	mov	r6,r17
   47784:	900b883a 	mov	r5,r18
   47788:	9809883a 	mov	r4,r19
   4778c:	00474d00 	call	474d0 <__multiply>
   47790:	90000726 	beq	r18,zero,477b0 <__pow5mult+0x8c>
   47794:	91000117 	ldw	r4,4(r18)
   47798:	98c01317 	ldw	r3,76(r19)
   4779c:	200890ba 	slli	r4,r4,2
   477a0:	1907883a 	add	r3,r3,r4
   477a4:	19000017 	ldw	r4,0(r3)
   477a8:	91000015 	stw	r4,0(r18)
   477ac:	1c800015 	stw	r18,0(r3)
   477b0:	8021d07a 	srai	r16,r16,1
   477b4:	1025883a 	mov	r18,r2
   477b8:	803fec1e 	bne	r16,zero,4776c <__pow5mult+0x48>
   477bc:	9005883a 	mov	r2,r18
   477c0:	dfc00417 	ldw	ra,16(sp)
   477c4:	dcc00317 	ldw	r19,12(sp)
   477c8:	dc800217 	ldw	r18,8(sp)
   477cc:	dc400117 	ldw	r17,4(sp)
   477d0:	dc000017 	ldw	r16,0(sp)
   477d4:	dec00504 	addi	sp,sp,20
   477d8:	f800283a 	ret
   477dc:	880d883a 	mov	r6,r17
   477e0:	880b883a 	mov	r5,r17
   477e4:	9809883a 	mov	r4,r19
   477e8:	00474d00 	call	474d0 <__multiply>
   477ec:	88800015 	stw	r2,0(r17)
   477f0:	10000015 	stw	zero,0(r2)
   477f4:	003fdf06 	br	47774 <__pow5mult+0x50>
   477f8:	100490ba 	slli	r2,r2,2
   477fc:	00c00174 	movhi	r3,5
   47800:	000f883a 	mov	r7,zero
   47804:	10c7883a 	add	r3,r2,r3
   47808:	19808217 	ldw	r6,520(r3)
   4780c:	00470940 	call	47094 <__multadd>
   47810:	1025883a 	mov	r18,r2
   47814:	003fce06 	br	47750 <__pow5mult+0x2c>
   47818:	01400044 	movi	r5,1
   4781c:	9809883a 	mov	r4,r19
   47820:	0046fcc0 	call	46fcc <_Balloc>
   47824:	1023883a 	mov	r17,r2
   47828:	10000726 	beq	r2,zero,47848 <__pow5mult+0x124>
   4782c:	00809c44 	movi	r2,625
   47830:	88800515 	stw	r2,20(r17)
   47834:	00800044 	movi	r2,1
   47838:	88800415 	stw	r2,16(r17)
   4783c:	9c401215 	stw	r17,72(r19)
   47840:	88000015 	stw	zero,0(r17)
   47844:	003fcc06 	br	47778 <__pow5mult+0x54>
   47848:	01c00174 	movhi	r7,5
   4784c:	01000174 	movhi	r4,5
   47850:	39c06004 	addi	r7,r7,384
   47854:	000d883a 	mov	r6,zero
   47858:	01405004 	movi	r5,320
   4785c:	21007404 	addi	r4,r4,464
   47860:	0049dc40 	call	49dc4 <__assert_func>

00047864 <__lshift>:
   47864:	defff804 	addi	sp,sp,-32
   47868:	dd800615 	stw	r22,24(sp)
   4786c:	dc400115 	stw	r17,4(sp)
   47870:	302dd17a 	srai	r22,r6,5
   47874:	2c400417 	ldw	r17,16(r5)
   47878:	28800217 	ldw	r2,8(r5)
   4787c:	dd000415 	stw	r20,16(sp)
   47880:	b463883a 	add	r17,r22,r17
   47884:	dcc00315 	stw	r19,12(sp)
   47888:	dc800215 	stw	r18,8(sp)
   4788c:	dc000015 	stw	r16,0(sp)
   47890:	dfc00715 	stw	ra,28(sp)
   47894:	dd400515 	stw	r21,20(sp)
   47898:	8d000044 	addi	r20,r17,1
   4789c:	2827883a 	mov	r19,r5
   478a0:	3025883a 	mov	r18,r6
   478a4:	29400117 	ldw	r5,4(r5)
   478a8:	2021883a 	mov	r16,r4
   478ac:	1500030e 	bge	r2,r20,478bc <__lshift+0x58>
   478b0:	1085883a 	add	r2,r2,r2
   478b4:	29400044 	addi	r5,r5,1
   478b8:	153ffd16 	blt	r2,r20,478b0 <__lshift+0x4c>
   478bc:	8009883a 	mov	r4,r16
   478c0:	0046fcc0 	call	46fcc <_Balloc>
   478c4:	102b883a 	mov	r21,r2
   478c8:	10004126 	beq	r2,zero,479d0 <__lshift+0x16c>
   478cc:	11000504 	addi	r4,r2,20
   478d0:	0580050e 	bge	zero,r22,478e8 <__lshift+0x84>
   478d4:	b02c90ba 	slli	r22,r22,2
   478d8:	000b883a 	mov	r5,zero
   478dc:	b00d883a 	mov	r6,r22
   478e0:	0046ed40 	call	46ed4 <memset>
   478e4:	1589883a 	add	r4,r2,r22
   478e8:	9a400417 	ldw	r9,16(r19)
   478ec:	98c00504 	addi	r3,r19,20
   478f0:	948007cc 	andi	r18,r18,31
   478f4:	481290ba 	slli	r9,r9,2
   478f8:	1a53883a 	add	r9,r3,r9
   478fc:	90002c26 	beq	r18,zero,479b0 <__lshift+0x14c>
   47900:	01400804 	movi	r5,32
   47904:	2c8bc83a 	sub	r5,r5,r18
   47908:	2005883a 	mov	r2,r4
   4790c:	0011883a 	mov	r8,zero
   47910:	19c00017 	ldw	r7,0(r3)
   47914:	10800104 	addi	r2,r2,4
   47918:	18c00104 	addi	r3,r3,4
   4791c:	3c8e983a 	sll	r7,r7,r18
   47920:	3a0eb03a 	or	r7,r7,r8
   47924:	11ffff15 	stw	r7,-4(r2)
   47928:	1a3fff17 	ldw	r8,-4(r3)
   4792c:	4150d83a 	srl	r8,r8,r5
   47930:	1a7ff736 	bltu	r3,r9,47910 <__lshift+0xac>
   47934:	98800544 	addi	r2,r19,21
   47938:	48802336 	bltu	r9,r2,479c8 <__lshift+0x164>
   4793c:	4cc7c83a 	sub	r3,r9,r19
   47940:	18fffac4 	addi	r3,r3,-21
   47944:	1806d0ba 	srli	r3,r3,2
   47948:	18c00044 	addi	r3,r3,1
   4794c:	180690ba 	slli	r3,r3,2
   47950:	20c9883a 	add	r4,r4,r3
   47954:	22000015 	stw	r8,0(r4)
   47958:	4000011e 	bne	r8,zero,47960 <__lshift+0xfc>
   4795c:	8829883a 	mov	r20,r17
   47960:	ad000415 	stw	r20,16(r21)
   47964:	98000726 	beq	r19,zero,47984 <__lshift+0x120>
   47968:	98c00117 	ldw	r3,4(r19)
   4796c:	80801317 	ldw	r2,76(r16)
   47970:	180690ba 	slli	r3,r3,2
   47974:	10c5883a 	add	r2,r2,r3
   47978:	10c00017 	ldw	r3,0(r2)
   4797c:	98c00015 	stw	r3,0(r19)
   47980:	14c00015 	stw	r19,0(r2)
   47984:	a805883a 	mov	r2,r21
   47988:	dfc00717 	ldw	ra,28(sp)
   4798c:	dd800617 	ldw	r22,24(sp)
   47990:	dd400517 	ldw	r21,20(sp)
   47994:	dd000417 	ldw	r20,16(sp)
   47998:	dcc00317 	ldw	r19,12(sp)
   4799c:	dc800217 	ldw	r18,8(sp)
   479a0:	dc400117 	ldw	r17,4(sp)
   479a4:	dc000017 	ldw	r16,0(sp)
   479a8:	dec00804 	addi	sp,sp,32
   479ac:	f800283a 	ret
   479b0:	18800017 	ldw	r2,0(r3)
   479b4:	18c00104 	addi	r3,r3,4
   479b8:	21000104 	addi	r4,r4,4
   479bc:	20bfff15 	stw	r2,-4(r4)
   479c0:	1a7ffb36 	bltu	r3,r9,479b0 <__lshift+0x14c>
   479c4:	003fe506 	br	4795c <__lshift+0xf8>
   479c8:	00c00104 	movi	r3,4
   479cc:	003fe006 	br	47950 <__lshift+0xec>
   479d0:	01c00174 	movhi	r7,5
   479d4:	01000174 	movhi	r4,5
   479d8:	39c06004 	addi	r7,r7,384
   479dc:	000d883a 	mov	r6,zero
   479e0:	01407644 	movi	r5,473
   479e4:	21007404 	addi	r4,r4,464
   479e8:	0049dc40 	call	49dc4 <__assert_func>

000479ec <__mcmp>:
   479ec:	21800417 	ldw	r6,16(r4)
   479f0:	28c00417 	ldw	r3,16(r5)
   479f4:	30c5c83a 	sub	r2,r6,r3
   479f8:	30c0101e 	bne	r6,r3,47a3c <__mcmp+0x50>
   479fc:	180690ba 	slli	r3,r3,2
   47a00:	21000504 	addi	r4,r4,20
   47a04:	29400504 	addi	r5,r5,20
   47a08:	20cd883a 	add	r6,r4,r3
   47a0c:	28c7883a 	add	r3,r5,r3
   47a10:	00000106 	br	47a18 <__mcmp+0x2c>
   47a14:	21800a2e 	bgeu	r4,r6,47a40 <__mcmp+0x54>
   47a18:	31ffff17 	ldw	r7,-4(r6)
   47a1c:	197fff17 	ldw	r5,-4(r3)
   47a20:	31bfff04 	addi	r6,r6,-4
   47a24:	18ffff04 	addi	r3,r3,-4
   47a28:	397ffa26 	beq	r7,r5,47a14 <__mcmp+0x28>
   47a2c:	3940022e 	bgeu	r7,r5,47a38 <__mcmp+0x4c>
   47a30:	00bfffc4 	movi	r2,-1
   47a34:	f800283a 	ret
   47a38:	00800044 	movi	r2,1
   47a3c:	f800283a 	ret
   47a40:	f800283a 	ret

00047a44 <__mdiff>:
   47a44:	28c00417 	ldw	r3,16(r5)
   47a48:	30800417 	ldw	r2,16(r6)
   47a4c:	defffc04 	addi	sp,sp,-16
   47a50:	dc800215 	stw	r18,8(sp)
   47a54:	dc400115 	stw	r17,4(sp)
   47a58:	dc000015 	stw	r16,0(sp)
   47a5c:	dfc00315 	stw	ra,12(sp)
   47a60:	2823883a 	mov	r17,r5
   47a64:	3021883a 	mov	r16,r6
   47a68:	18a5c83a 	sub	r18,r3,r2
   47a6c:	1880121e 	bne	r3,r2,47ab8 <__mdiff+0x74>
   47a70:	100c90ba 	slli	r6,r2,2
   47a74:	29400504 	addi	r5,r5,20
   47a78:	80c00504 	addi	r3,r16,20
   47a7c:	2985883a 	add	r2,r5,r6
   47a80:	1987883a 	add	r3,r3,r6
   47a84:	00000106 	br	47a8c <__mdiff+0x48>
   47a88:	28805f2e 	bgeu	r5,r2,47c08 <__mdiff+0x1c4>
   47a8c:	11ffff17 	ldw	r7,-4(r2)
   47a90:	19bfff17 	ldw	r6,-4(r3)
   47a94:	10bfff04 	addi	r2,r2,-4
   47a98:	18ffff04 	addi	r3,r3,-4
   47a9c:	39bffa26 	beq	r7,r6,47a88 <__mdiff+0x44>
   47aa0:	3980072e 	bgeu	r7,r6,47ac0 <__mdiff+0x7c>
   47aa4:	8805883a 	mov	r2,r17
   47aa8:	04800044 	movi	r18,1
   47aac:	8023883a 	mov	r17,r16
   47ab0:	1021883a 	mov	r16,r2
   47ab4:	00000206 	br	47ac0 <__mdiff+0x7c>
   47ab8:	903ffa16 	blt	r18,zero,47aa4 <__mdiff+0x60>
   47abc:	0025883a 	mov	r18,zero
   47ac0:	89400117 	ldw	r5,4(r17)
   47ac4:	0046fcc0 	call	46fcc <_Balloc>
   47ac8:	10006326 	beq	r2,zero,47c58 <__mdiff+0x214>
   47acc:	8a400417 	ldw	r9,16(r17)
   47ad0:	83800417 	ldw	r14,16(r16)
   47ad4:	89400504 	addi	r5,r17,20
   47ad8:	481490ba 	slli	r10,r9,2
   47adc:	701c90ba 	slli	r14,r14,2
   47ae0:	81800504 	addi	r6,r16,20
   47ae4:	13400504 	addi	r13,r2,20
   47ae8:	14800315 	stw	r18,12(r2)
   47aec:	2a95883a 	add	r10,r5,r10
   47af0:	339d883a 	add	r14,r6,r14
   47af4:	6819883a 	mov	r12,r13
   47af8:	2817883a 	mov	r11,r5
   47afc:	000f883a 	mov	r7,zero
   47b00:	59000017 	ldw	r4,0(r11)
   47b04:	32000017 	ldw	r8,0(r6)
   47b08:	63000104 	addi	r12,r12,4
   47b0c:	20ffffcc 	andi	r3,r4,65535
   47b10:	43ffffcc 	andi	r15,r8,65535
   47b14:	1bc7c83a 	sub	r3,r3,r15
   47b18:	4010d43a 	srli	r8,r8,16
   47b1c:	19c7883a 	add	r3,r3,r7
   47b20:	2008d43a 	srli	r4,r4,16
   47b24:	180fd43a 	srai	r7,r3,16
   47b28:	18ffffcc 	andi	r3,r3,65535
   47b2c:	2209c83a 	sub	r4,r4,r8
   47b30:	21c9883a 	add	r4,r4,r7
   47b34:	2010943a 	slli	r8,r4,16
   47b38:	31800104 	addi	r6,r6,4
   47b3c:	200fd43a 	srai	r7,r4,16
   47b40:	1a06b03a 	or	r3,r3,r8
   47b44:	60ffff15 	stw	r3,-4(r12)
   47b48:	5ac00104 	addi	r11,r11,4
   47b4c:	33bfec36 	bltu	r6,r14,47b00 <__mdiff+0xbc>
   47b50:	7409c83a 	sub	r4,r14,r16
   47b54:	213ffac4 	addi	r4,r4,-21
   47b58:	84000544 	addi	r16,r16,21
   47b5c:	200cd0ba 	srli	r6,r4,2
   47b60:	74002736 	bltu	r14,r16,47c00 <__mdiff+0x1bc>
   47b64:	31000044 	addi	r4,r6,1
   47b68:	200890ba 	slli	r4,r4,2
   47b6c:	290b883a 	add	r5,r5,r4
   47b70:	6911883a 	add	r8,r13,r4
   47b74:	2a802b2e 	bgeu	r5,r10,47c24 <__mdiff+0x1e0>
   47b78:	4017883a 	mov	r11,r8
   47b7c:	280d883a 	mov	r6,r5
   47b80:	30c00017 	ldw	r3,0(r6)
   47b84:	5ac00104 	addi	r11,r11,4
   47b88:	31800104 	addi	r6,r6,4
   47b8c:	193fffcc 	andi	r4,r3,65535
   47b90:	21c9883a 	add	r4,r4,r7
   47b94:	1818d43a 	srli	r12,r3,16
   47b98:	2009d43a 	srai	r4,r4,16
   47b9c:	19c7883a 	add	r3,r3,r7
   47ba0:	18ffffcc 	andi	r3,r3,65535
   47ba4:	2309883a 	add	r4,r4,r12
   47ba8:	2018943a 	slli	r12,r4,16
   47bac:	200fd43a 	srai	r7,r4,16
   47bb0:	1b06b03a 	or	r3,r3,r12
   47bb4:	58ffff15 	stw	r3,-4(r11)
   47bb8:	32bff136 	bltu	r6,r10,47b80 <__mdiff+0x13c>
   47bbc:	513fffc4 	addi	r4,r10,-1
   47bc0:	2149c83a 	sub	r4,r4,r5
   47bc4:	2008d0ba 	srli	r4,r4,2
   47bc8:	200890ba 	slli	r4,r4,2
   47bcc:	4109883a 	add	r4,r8,r4
   47bd0:	1800041e 	bne	r3,zero,47be4 <__mdiff+0x1a0>
   47bd4:	20ffff17 	ldw	r3,-4(r4)
   47bd8:	4a7fffc4 	addi	r9,r9,-1
   47bdc:	213fff04 	addi	r4,r4,-4
   47be0:	183ffc26 	beq	r3,zero,47bd4 <__mdiff+0x190>
   47be4:	12400415 	stw	r9,16(r2)
   47be8:	dfc00317 	ldw	ra,12(sp)
   47bec:	dc800217 	ldw	r18,8(sp)
   47bf0:	dc400117 	ldw	r17,4(sp)
   47bf4:	dc000017 	ldw	r16,0(sp)
   47bf8:	dec00404 	addi	sp,sp,16
   47bfc:	f800283a 	ret
   47c00:	01000104 	movi	r4,4
   47c04:	003fd906 	br	47b6c <__mdiff+0x128>
   47c08:	000b883a 	mov	r5,zero
   47c0c:	0046fcc0 	call	46fcc <_Balloc>
   47c10:	10000a26 	beq	r2,zero,47c3c <__mdiff+0x1f8>
   47c14:	00c00044 	movi	r3,1
   47c18:	10c00415 	stw	r3,16(r2)
   47c1c:	10000515 	stw	zero,20(r2)
   47c20:	003ff106 	br	47be8 <__mdiff+0x1a4>
   47c24:	74000336 	bltu	r14,r16,47c34 <__mdiff+0x1f0>
   47c28:	300890ba 	slli	r4,r6,2
   47c2c:	6909883a 	add	r4,r13,r4
   47c30:	003fe706 	br	47bd0 <__mdiff+0x18c>
   47c34:	0009883a 	mov	r4,zero
   47c38:	003ffc06 	br	47c2c <__mdiff+0x1e8>
   47c3c:	01c00174 	movhi	r7,5
   47c40:	01000174 	movhi	r4,5
   47c44:	39c06004 	addi	r7,r7,384
   47c48:	000d883a 	mov	r6,zero
   47c4c:	01408c84 	movi	r5,562
   47c50:	21007404 	addi	r4,r4,464
   47c54:	0049dc40 	call	49dc4 <__assert_func>
   47c58:	01c00174 	movhi	r7,5
   47c5c:	01000174 	movhi	r4,5
   47c60:	39c06004 	addi	r7,r7,384
   47c64:	000d883a 	mov	r6,zero
   47c68:	01409004 	movi	r5,576
   47c6c:	21007404 	addi	r4,r4,464
   47c70:	0049dc40 	call	49dc4 <__assert_func>

00047c74 <__ulp>:
   47c74:	28dffc2c 	andhi	r3,r5,32752
   47c78:	00bf3034 	movhi	r2,64704
   47c7c:	1887883a 	add	r3,r3,r2
   47c80:	00c0020e 	bge	zero,r3,47c8c <__ulp+0x18>
   47c84:	0005883a 	mov	r2,zero
   47c88:	f800283a 	ret
   47c8c:	00c7c83a 	sub	r3,zero,r3
   47c90:	1807d53a 	srai	r3,r3,20
   47c94:	18800508 	cmpgei	r2,r3,20
   47c98:	1000041e 	bne	r2,zero,47cac <__ulp+0x38>
   47c9c:	00800234 	movhi	r2,8
   47ca0:	10c7d83a 	sra	r3,r2,r3
   47ca4:	0005883a 	mov	r2,zero
   47ca8:	f800283a 	ret
   47cac:	18fffb04 	addi	r3,r3,-20
   47cb0:	188007c8 	cmpgei	r2,r3,31
   47cb4:	10000326 	beq	r2,zero,47cc4 <__ulp+0x50>
   47cb8:	00800044 	movi	r2,1
   47cbc:	0007883a 	mov	r3,zero
   47cc0:	f800283a 	ret
   47cc4:	00a00034 	movhi	r2,32768
   47cc8:	10c4d83a 	srl	r2,r2,r3
   47ccc:	0007883a 	mov	r3,zero
   47cd0:	f800283a 	ret

00047cd4 <__b2d>:
   47cd4:	defffa04 	addi	sp,sp,-24
   47cd8:	dc400115 	stw	r17,4(sp)
   47cdc:	24400417 	ldw	r17,16(r4)
   47ce0:	dc000015 	stw	r16,0(sp)
   47ce4:	24000504 	addi	r16,r4,20
   47ce8:	882290ba 	slli	r17,r17,2
   47cec:	dc800215 	stw	r18,8(sp)
   47cf0:	dd000415 	stw	r20,16(sp)
   47cf4:	8463883a 	add	r17,r16,r17
   47cf8:	8cbfff17 	ldw	r18,-4(r17)
   47cfc:	dcc00315 	stw	r19,12(sp)
   47d00:	dfc00515 	stw	ra,20(sp)
   47d04:	9009883a 	mov	r4,r18
   47d08:	2827883a 	mov	r19,r5
   47d0c:	00472fc0 	call	472fc <__hi0bits>
   47d10:	00c00804 	movi	r3,32
   47d14:	1889c83a 	sub	r4,r3,r2
   47d18:	99000015 	stw	r4,0(r19)
   47d1c:	110002c8 	cmpgei	r4,r2,11
   47d20:	8d3fff04 	addi	r20,r17,-4
   47d24:	20001b26 	beq	r4,zero,47d94 <__b2d+0xc0>
   47d28:	117ffd44 	addi	r5,r2,-11
   47d2c:	85000e2e 	bgeu	r16,r20,47d68 <__b2d+0x94>
   47d30:	88bffe17 	ldw	r2,-8(r17)
   47d34:	28000e26 	beq	r5,zero,47d70 <__b2d+0x9c>
   47d38:	1949c83a 	sub	r4,r3,r5
   47d3c:	1106d83a 	srl	r3,r2,r4
   47d40:	9164983a 	sll	r18,r18,r5
   47d44:	89bffe04 	addi	r6,r17,-8
   47d48:	1144983a 	sll	r2,r2,r5
   47d4c:	90c6b03a 	or	r3,r18,r3
   47d50:	18cffc34 	orhi	r3,r3,16368
   47d54:	8180072e 	bgeu	r16,r6,47d74 <__b2d+0xa0>
   47d58:	897ffd17 	ldw	r5,-12(r17)
   47d5c:	2908d83a 	srl	r4,r5,r4
   47d60:	1104b03a 	or	r2,r2,r4
   47d64:	00000306 	br	47d74 <__b2d+0xa0>
   47d68:	108002d8 	cmpnei	r2,r2,11
   47d6c:	1000161e 	bne	r2,zero,47dc8 <__b2d+0xf4>
   47d70:	90cffc34 	orhi	r3,r18,16368
   47d74:	dfc00517 	ldw	ra,20(sp)
   47d78:	dd000417 	ldw	r20,16(sp)
   47d7c:	dcc00317 	ldw	r19,12(sp)
   47d80:	dc800217 	ldw	r18,8(sp)
   47d84:	dc400117 	ldw	r17,4(sp)
   47d88:	dc000017 	ldw	r16,0(sp)
   47d8c:	dec00604 	addi	sp,sp,24
   47d90:	f800283a 	ret
   47d94:	014002c4 	movi	r5,11
   47d98:	288bc83a 	sub	r5,r5,r2
   47d9c:	9146d83a 	srl	r3,r18,r5
   47da0:	18cffc34 	orhi	r3,r3,16368
   47da4:	85000536 	bltu	r16,r20,47dbc <__b2d+0xe8>
   47da8:	0009883a 	mov	r4,zero
   47dac:	10800544 	addi	r2,r2,21
   47db0:	90a4983a 	sll	r18,r18,r2
   47db4:	9104b03a 	or	r2,r18,r4
   47db8:	003fee06 	br	47d74 <__b2d+0xa0>
   47dbc:	893ffe17 	ldw	r4,-8(r17)
   47dc0:	2148d83a 	srl	r4,r4,r5
   47dc4:	003ff906 	br	47dac <__b2d+0xd8>
   47dc8:	9164983a 	sll	r18,r18,r5
   47dcc:	0005883a 	mov	r2,zero
   47dd0:	003fe706 	br	47d70 <__b2d+0x9c>

00047dd4 <__d2b>:
   47dd4:	defff804 	addi	sp,sp,-32
   47dd8:	dd000615 	stw	r20,24(sp)
   47ddc:	2829883a 	mov	r20,r5
   47de0:	01400044 	movi	r5,1
   47de4:	dcc00515 	stw	r19,20(sp)
   47de8:	dc000215 	stw	r16,8(sp)
   47dec:	dfc00715 	stw	ra,28(sp)
   47df0:	dc800415 	stw	r18,16(sp)
   47df4:	dc400315 	stw	r17,12(sp)
   47df8:	3021883a 	mov	r16,r6
   47dfc:	3827883a 	mov	r19,r7
   47e00:	0046fcc0 	call	46fcc <_Balloc>
   47e04:	10004226 	beq	r2,zero,47f10 <__d2b+0x13c>
   47e08:	8024d53a 	srli	r18,r16,20
   47e0c:	1023883a 	mov	r17,r2
   47e10:	00800434 	movhi	r2,16
   47e14:	10bfffc4 	addi	r2,r2,-1
   47e18:	9481ffcc 	andi	r18,r18,2047
   47e1c:	80a0703a 	and	r16,r16,r2
   47e20:	90000126 	beq	r18,zero,47e28 <__d2b+0x54>
   47e24:	84000434 	orhi	r16,r16,16
   47e28:	dc000115 	stw	r16,4(sp)
   47e2c:	a0001b26 	beq	r20,zero,47e9c <__d2b+0xc8>
   47e30:	d809883a 	mov	r4,sp
   47e34:	dd000015 	stw	r20,0(sp)
   47e38:	00473700 	call	47370 <__lo0bits>
   47e3c:	d8c00117 	ldw	r3,4(sp)
   47e40:	10003026 	beq	r2,zero,47f04 <__d2b+0x130>
   47e44:	01000804 	movi	r4,32
   47e48:	2089c83a 	sub	r4,r4,r2
   47e4c:	1908983a 	sll	r4,r3,r4
   47e50:	d9400017 	ldw	r5,0(sp)
   47e54:	1886d83a 	srl	r3,r3,r2
   47e58:	2148b03a 	or	r4,r4,r5
   47e5c:	89000515 	stw	r4,20(r17)
   47e60:	d8c00115 	stw	r3,4(sp)
   47e64:	88c00615 	stw	r3,24(r17)
   47e68:	18002426 	beq	r3,zero,47efc <__d2b+0x128>
   47e6c:	04000084 	movi	r16,2
   47e70:	8c000415 	stw	r16,16(r17)
   47e74:	9000111e 	bne	r18,zero,47ebc <__d2b+0xe8>
   47e78:	800690ba 	slli	r3,r16,2
   47e7c:	10bef384 	addi	r2,r2,-1074
   47e80:	98800015 	stw	r2,0(r19)
   47e84:	88c5883a 	add	r2,r17,r3
   47e88:	11000417 	ldw	r4,16(r2)
   47e8c:	8020917a 	slli	r16,r16,5
   47e90:	00472fc0 	call	472fc <__hi0bits>
   47e94:	8085c83a 	sub	r2,r16,r2
   47e98:	00000d06 	br	47ed0 <__d2b+0xfc>
   47e9c:	d9000104 	addi	r4,sp,4
   47ea0:	00473700 	call	47370 <__lo0bits>
   47ea4:	d8c00117 	ldw	r3,4(sp)
   47ea8:	10800804 	addi	r2,r2,32
   47eac:	04000044 	movi	r16,1
   47eb0:	88c00515 	stw	r3,20(r17)
   47eb4:	8c000415 	stw	r16,16(r17)
   47eb8:	903fef26 	beq	r18,zero,47e78 <__d2b+0xa4>
   47ebc:	94bef344 	addi	r18,r18,-1075
   47ec0:	90a5883a 	add	r18,r18,r2
   47ec4:	04000d44 	movi	r16,53
   47ec8:	9c800015 	stw	r18,0(r19)
   47ecc:	8085c83a 	sub	r2,r16,r2
   47ed0:	d8c00817 	ldw	r3,32(sp)
   47ed4:	18800015 	stw	r2,0(r3)
   47ed8:	8805883a 	mov	r2,r17
   47edc:	dfc00717 	ldw	ra,28(sp)
   47ee0:	dd000617 	ldw	r20,24(sp)
   47ee4:	dcc00517 	ldw	r19,20(sp)
   47ee8:	dc800417 	ldw	r18,16(sp)
   47eec:	dc400317 	ldw	r17,12(sp)
   47ef0:	dc000217 	ldw	r16,8(sp)
   47ef4:	dec00804 	addi	sp,sp,32
   47ef8:	f800283a 	ret
   47efc:	04000044 	movi	r16,1
   47f00:	003fec06 	br	47eb4 <__d2b+0xe0>
   47f04:	d9000017 	ldw	r4,0(sp)
   47f08:	89000515 	stw	r4,20(r17)
   47f0c:	003fd506 	br	47e64 <__d2b+0x90>
   47f10:	01c00174 	movhi	r7,5
   47f14:	01000174 	movhi	r4,5
   47f18:	39c06004 	addi	r7,r7,384
   47f1c:	000d883a 	mov	r6,zero
   47f20:	0140c284 	movi	r5,778
   47f24:	21007404 	addi	r4,r4,464
   47f28:	0049dc40 	call	49dc4 <__assert_func>

00047f2c <__ratio>:
   47f2c:	defff904 	addi	sp,sp,-28
   47f30:	dc400315 	stw	r17,12(sp)
   47f34:	2823883a 	mov	r17,r5
   47f38:	d80b883a 	mov	r5,sp
   47f3c:	dfc00615 	stw	ra,24(sp)
   47f40:	dcc00515 	stw	r19,20(sp)
   47f44:	dc800415 	stw	r18,16(sp)
   47f48:	2027883a 	mov	r19,r4
   47f4c:	dc000215 	stw	r16,8(sp)
   47f50:	0047cd40 	call	47cd4 <__b2d>
   47f54:	d9400104 	addi	r5,sp,4
   47f58:	8809883a 	mov	r4,r17
   47f5c:	1025883a 	mov	r18,r2
   47f60:	1821883a 	mov	r16,r3
   47f64:	0047cd40 	call	47cd4 <__b2d>
   47f68:	89000417 	ldw	r4,16(r17)
   47f6c:	9a000417 	ldw	r8,16(r19)
   47f70:	d9400117 	ldw	r5,4(sp)
   47f74:	100d883a 	mov	r6,r2
   47f78:	4111c83a 	sub	r8,r8,r4
   47f7c:	d9000017 	ldw	r4,0(sp)
   47f80:	4010917a 	slli	r8,r8,5
   47f84:	180f883a 	mov	r7,r3
   47f88:	2149c83a 	sub	r4,r4,r5
   47f8c:	4111883a 	add	r8,r8,r4
   47f90:	02000c0e 	bge	zero,r8,47fc4 <__ratio+0x98>
   47f94:	4010953a 	slli	r8,r8,20
   47f98:	4421883a 	add	r16,r8,r16
   47f9c:	9009883a 	mov	r4,r18
   47fa0:	800b883a 	mov	r5,r16
   47fa4:	00404840 	call	40484 <__divdf3>
   47fa8:	dfc00617 	ldw	ra,24(sp)
   47fac:	dcc00517 	ldw	r19,20(sp)
   47fb0:	dc800417 	ldw	r18,16(sp)
   47fb4:	dc400317 	ldw	r17,12(sp)
   47fb8:	dc000217 	ldw	r16,8(sp)
   47fbc:	dec00704 	addi	sp,sp,28
   47fc0:	f800283a 	ret
   47fc4:	00bffc34 	movhi	r2,65520
   47fc8:	4091383a 	mul	r8,r8,r2
   47fcc:	40cf883a 	add	r7,r8,r3
   47fd0:	003ff206 	br	47f9c <__ratio+0x70>

00047fd4 <_mprec_log10>:
   47fd4:	defffe04 	addi	sp,sp,-8
   47fd8:	dc000015 	stw	r16,0(sp)
   47fdc:	dfc00115 	stw	ra,4(sp)
   47fe0:	20800608 	cmpgei	r2,r4,24
   47fe4:	2021883a 	mov	r16,r4
   47fe8:	10000f26 	beq	r2,zero,48028 <_mprec_log10+0x54>
   47fec:	0009883a 	mov	r4,zero
   47ff0:	014ffc34 	movhi	r5,16368
   47ff4:	000d883a 	mov	r6,zero
   47ff8:	01d00934 	movhi	r7,16420
   47ffc:	004c4240 	call	4c424 <__muldf3>
   48000:	843fffc4 	addi	r16,r16,-1
   48004:	1009883a 	mov	r4,r2
   48008:	180b883a 	mov	r5,r3
   4800c:	803ff91e 	bne	r16,zero,47ff4 <_mprec_log10+0x20>
   48010:	2005883a 	mov	r2,r4
   48014:	2807883a 	mov	r3,r5
   48018:	dfc00117 	ldw	ra,4(sp)
   4801c:	dc000017 	ldw	r16,0(sp)
   48020:	dec00204 	addi	sp,sp,8
   48024:	f800283a 	ret
   48028:	202090fa 	slli	r16,r4,3
   4802c:	00800174 	movhi	r2,5
   48030:	10809a04 	addi	r2,r2,616
   48034:	1405883a 	add	r2,r2,r16
   48038:	11000017 	ldw	r4,0(r2)
   4803c:	11400117 	ldw	r5,4(r2)
   48040:	003ff306 	br	48010 <_mprec_log10+0x3c>

00048044 <__copybits>:
   48044:	297fffc4 	addi	r5,r5,-1
   48048:	280fd17a 	srai	r7,r5,5
   4804c:	31400417 	ldw	r5,16(r6)
   48050:	30800504 	addi	r2,r6,20
   48054:	39c00044 	addi	r7,r7,1
   48058:	280a90ba 	slli	r5,r5,2
   4805c:	380e90ba 	slli	r7,r7,2
   48060:	114b883a 	add	r5,r2,r5
   48064:	21cf883a 	add	r7,r4,r7
   48068:	11400c2e 	bgeu	r2,r5,4809c <__copybits+0x58>
   4806c:	2007883a 	mov	r3,r4
   48070:	12000017 	ldw	r8,0(r2)
   48074:	10800104 	addi	r2,r2,4
   48078:	18c00104 	addi	r3,r3,4
   4807c:	1a3fff15 	stw	r8,-4(r3)
   48080:	117ffb36 	bltu	r2,r5,48070 <__copybits+0x2c>
   48084:	2985c83a 	sub	r2,r5,r6
   48088:	10bffac4 	addi	r2,r2,-21
   4808c:	1004d0ba 	srli	r2,r2,2
   48090:	10800044 	addi	r2,r2,1
   48094:	100490ba 	slli	r2,r2,2
   48098:	2089883a 	add	r4,r4,r2
   4809c:	21c0072e 	bgeu	r4,r7,480bc <__copybits+0x78>
   480a0:	39bfffc4 	addi	r6,r7,-1
   480a4:	310dc83a 	sub	r6,r6,r4
   480a8:	300cd0ba 	srli	r6,r6,2
   480ac:	000b883a 	mov	r5,zero
   480b0:	31800044 	addi	r6,r6,1
   480b4:	300c90ba 	slli	r6,r6,2
   480b8:	0046ed41 	jmpi	46ed4 <memset>
   480bc:	f800283a 	ret

000480c0 <__any_on>:
   480c0:	20c00417 	ldw	r3,16(r4)
   480c4:	280dd17a 	srai	r6,r5,5
   480c8:	21000504 	addi	r4,r4,20
   480cc:	1980080e 	bge	r3,r6,480f0 <__any_on+0x30>
   480d0:	180690ba 	slli	r3,r3,2
   480d4:	20c5883a 	add	r2,r4,r3
   480d8:	20800f2e 	bgeu	r4,r2,48118 <__any_on+0x58>
   480dc:	10ffff17 	ldw	r3,-4(r2)
   480e0:	10bfff04 	addi	r2,r2,-4
   480e4:	183ffc26 	beq	r3,zero,480d8 <__any_on+0x18>
   480e8:	00800044 	movi	r2,1
   480ec:	f800283a 	ret
   480f0:	300490ba 	slli	r2,r6,2
   480f4:	2085883a 	add	r2,r4,r2
   480f8:	30fff70e 	bge	r6,r3,480d8 <__any_on+0x18>
   480fc:	294007cc 	andi	r5,r5,31
   48100:	283ff526 	beq	r5,zero,480d8 <__any_on+0x18>
   48104:	11800017 	ldw	r6,0(r2)
   48108:	3146d83a 	srl	r3,r6,r5
   4810c:	1946983a 	sll	r3,r3,r5
   48110:	30fff51e 	bne	r6,r3,480e8 <__any_on+0x28>
   48114:	003ff006 	br	480d8 <__any_on+0x18>
   48118:	0005883a 	mov	r2,zero
   4811c:	f800283a 	ret

00048120 <_realloc_r>:
   48120:	defff504 	addi	sp,sp,-44
   48124:	dd000515 	stw	r20,20(sp)
   48128:	dfc00a15 	stw	ra,40(sp)
   4812c:	df000915 	stw	fp,36(sp)
   48130:	ddc00815 	stw	r23,32(sp)
   48134:	dd800715 	stw	r22,28(sp)
   48138:	dd400615 	stw	r21,24(sp)
   4813c:	dcc00415 	stw	r19,16(sp)
   48140:	dc800315 	stw	r18,12(sp)
   48144:	dc400215 	stw	r17,8(sp)
   48148:	dc000115 	stw	r16,4(sp)
   4814c:	3029883a 	mov	r20,r6
   48150:	28008a26 	beq	r5,zero,4837c <_realloc_r+0x25c>
   48154:	2821883a 	mov	r16,r5
   48158:	202b883a 	mov	r21,r4
   4815c:	004ddf40 	call	4ddf4 <__malloc_lock>
   48160:	84ffff17 	ldw	r19,-4(r16)
   48164:	a44002c4 	addi	r17,r20,11
   48168:	04bfff04 	movi	r18,-4
   4816c:	888005f0 	cmpltui	r2,r17,23
   48170:	85bffe04 	addi	r22,r16,-8
   48174:	9ca4703a 	and	r18,r19,r18
   48178:	10005a1e 	bne	r2,zero,482e4 <_realloc_r+0x1c4>
   4817c:	00bffe04 	movi	r2,-8
   48180:	88a2703a 	and	r17,r17,r2
   48184:	88005916 	blt	r17,zero,482ec <_realloc_r+0x1cc>
   48188:	8d005836 	bltu	r17,r20,482ec <_realloc_r+0x1cc>
   4818c:	94403b0e 	bge	r18,r17,4827c <_realloc_r+0x15c>
   48190:	05c00174 	movhi	r23,5
   48194:	bdc29d04 	addi	r23,r23,2676
   48198:	b9400217 	ldw	r5,8(r23)
   4819c:	b489883a 	add	r4,r22,r18
   481a0:	20800117 	ldw	r2,4(r4)
   481a4:	29008e26 	beq	r5,r4,483e0 <_realloc_r+0x2c0>
   481a8:	00ffff84 	movi	r3,-2
   481ac:	10c6703a 	and	r3,r2,r3
   481b0:	20c7883a 	add	r3,r4,r3
   481b4:	18c00117 	ldw	r3,4(r3)
   481b8:	18c0004c 	andi	r3,r3,1
   481bc:	18004f1e 	bne	r3,zero,482fc <_realloc_r+0x1dc>
   481c0:	00ffff04 	movi	r3,-4
   481c4:	10c4703a 	and	r2,r2,r3
   481c8:	9087883a 	add	r3,r18,r2
   481cc:	1c40c30e 	bge	r3,r17,484dc <_realloc_r+0x3bc>
   481d0:	9cc0004c 	andi	r19,r19,1
   481d4:	98004b1e 	bne	r19,zero,48304 <_realloc_r+0x1e4>
   481d8:	873ffe17 	ldw	fp,-8(r16)
   481dc:	00ffff04 	movi	r3,-4
   481e0:	b739c83a 	sub	fp,r22,fp
   481e4:	e4c00117 	ldw	r19,4(fp)
   481e8:	98c6703a 	and	r3,r19,r3
   481ec:	20000426 	beq	r4,zero,48200 <_realloc_r+0xe0>
   481f0:	90cf883a 	add	r7,r18,r3
   481f4:	388f883a 	add	r7,r7,r2
   481f8:	2900c226 	beq	r5,r4,48504 <_realloc_r+0x3e4>
   481fc:	3c409e0e 	bge	r7,r17,48478 <_realloc_r+0x358>
   48200:	e0004026 	beq	fp,zero,48304 <_realloc_r+0x1e4>
   48204:	90ef883a 	add	r23,r18,r3
   48208:	bc403e16 	blt	r23,r17,48304 <_realloc_r+0x1e4>
   4820c:	e0800317 	ldw	r2,12(fp)
   48210:	e0c00217 	ldw	r3,8(fp)
   48214:	91bfff04 	addi	r6,r18,-4
   48218:	31400968 	cmpgeui	r5,r6,37
   4821c:	18800315 	stw	r2,12(r3)
   48220:	10c00215 	stw	r3,8(r2)
   48224:	e1000204 	addi	r4,fp,8
   48228:	2800e71e 	bne	r5,zero,485c8 <_realloc_r+0x4a8>
   4822c:	30800530 	cmpltui	r2,r6,20
   48230:	1000e31e 	bne	r2,zero,485c0 <_realloc_r+0x4a0>
   48234:	80c00017 	ldw	r3,0(r16)
   48238:	30800728 	cmpgeui	r2,r6,28
   4823c:	e0c00215 	stw	r3,8(fp)
   48240:	80c00117 	ldw	r3,4(r16)
   48244:	e0c00315 	stw	r3,12(fp)
   48248:	1000fa1e 	bne	r2,zero,48634 <_realloc_r+0x514>
   4824c:	84000204 	addi	r16,r16,8
   48250:	e0800404 	addi	r2,fp,16
   48254:	80c00017 	ldw	r3,0(r16)
   48258:	b825883a 	mov	r18,r23
   4825c:	10c00015 	stw	r3,0(r2)
   48260:	80c00117 	ldw	r3,4(r16)
   48264:	e02d883a 	mov	r22,fp
   48268:	10c00115 	stw	r3,4(r2)
   4826c:	80c00217 	ldw	r3,8(r16)
   48270:	2021883a 	mov	r16,r4
   48274:	10c00215 	stw	r3,8(r2)
   48278:	e4c00117 	ldw	r19,4(fp)
   4827c:	9447c83a 	sub	r3,r18,r17
   48280:	19000430 	cmpltui	r4,r3,16
   48284:	9cc0004c 	andi	r19,r19,1
   48288:	b485883a 	add	r2,r22,r18
   4828c:	20004826 	beq	r4,zero,483b0 <_realloc_r+0x290>
   48290:	94e6b03a 	or	r19,r18,r19
   48294:	b4c00115 	stw	r19,4(r22)
   48298:	10c00117 	ldw	r3,4(r2)
   4829c:	18c00054 	ori	r3,r3,1
   482a0:	10c00115 	stw	r3,4(r2)
   482a4:	a809883a 	mov	r4,r21
   482a8:	004de180 	call	4de18 <__malloc_unlock>
   482ac:	8029883a 	mov	r20,r16
   482b0:	a005883a 	mov	r2,r20
   482b4:	dfc00a17 	ldw	ra,40(sp)
   482b8:	df000917 	ldw	fp,36(sp)
   482bc:	ddc00817 	ldw	r23,32(sp)
   482c0:	dd800717 	ldw	r22,28(sp)
   482c4:	dd400617 	ldw	r21,24(sp)
   482c8:	dd000517 	ldw	r20,20(sp)
   482cc:	dcc00417 	ldw	r19,16(sp)
   482d0:	dc800317 	ldw	r18,12(sp)
   482d4:	dc400217 	ldw	r17,8(sp)
   482d8:	dc000117 	ldw	r16,4(sp)
   482dc:	dec00b04 	addi	sp,sp,44
   482e0:	f800283a 	ret
   482e4:	04400404 	movi	r17,16
   482e8:	8d3fa82e 	bgeu	r17,r20,4818c <_realloc_r+0x6c>
   482ec:	00800304 	movi	r2,12
   482f0:	a8800015 	stw	r2,0(r21)
   482f4:	0029883a 	mov	r20,zero
   482f8:	003fed06 	br	482b0 <_realloc_r+0x190>
   482fc:	9cc0004c 	andi	r19,r19,1
   48300:	98004e26 	beq	r19,zero,4843c <_realloc_r+0x31c>
   48304:	a00b883a 	mov	r5,r20
   48308:	a809883a 	mov	r4,r21
   4830c:	00464280 	call	46428 <_malloc_r>
   48310:	1029883a 	mov	r20,r2
   48314:	1000bd26 	beq	r2,zero,4860c <_realloc_r+0x4ec>
   48318:	84ffff17 	ldw	r19,-4(r16)
   4831c:	10fffe04 	addi	r3,r2,-8
   48320:	00bfff84 	movi	r2,-2
   48324:	9884703a 	and	r2,r19,r2
   48328:	b085883a 	add	r2,r22,r2
   4832c:	10c03e26 	beq	r2,r3,48428 <_realloc_r+0x308>
   48330:	91bfff04 	addi	r6,r18,-4
   48334:	30800968 	cmpgeui	r2,r6,37
   48338:	10006e1e 	bne	r2,zero,484f4 <_realloc_r+0x3d4>
   4833c:	30800530 	cmpltui	r2,r6,20
   48340:	10004426 	beq	r2,zero,48454 <_realloc_r+0x334>
   48344:	a005883a 	mov	r2,r20
   48348:	8007883a 	mov	r3,r16
   4834c:	19000017 	ldw	r4,0(r3)
   48350:	11000015 	stw	r4,0(r2)
   48354:	19000117 	ldw	r4,4(r3)
   48358:	11000115 	stw	r4,4(r2)
   4835c:	18c00217 	ldw	r3,8(r3)
   48360:	10c00215 	stw	r3,8(r2)
   48364:	a809883a 	mov	r4,r21
   48368:	800b883a 	mov	r5,r16
   4836c:	00458f00 	call	458f0 <_free_r>
   48370:	a809883a 	mov	r4,r21
   48374:	004de180 	call	4de18 <__malloc_unlock>
   48378:	003fcd06 	br	482b0 <_realloc_r+0x190>
   4837c:	300b883a 	mov	r5,r6
   48380:	dfc00a17 	ldw	ra,40(sp)
   48384:	df000917 	ldw	fp,36(sp)
   48388:	ddc00817 	ldw	r23,32(sp)
   4838c:	dd800717 	ldw	r22,28(sp)
   48390:	dd400617 	ldw	r21,24(sp)
   48394:	dd000517 	ldw	r20,20(sp)
   48398:	dcc00417 	ldw	r19,16(sp)
   4839c:	dc800317 	ldw	r18,12(sp)
   483a0:	dc400217 	ldw	r17,8(sp)
   483a4:	dc000117 	ldw	r16,4(sp)
   483a8:	dec00b04 	addi	sp,sp,44
   483ac:	00464281 	jmpi	46428 <_malloc_r>
   483b0:	8ce6b03a 	or	r19,r17,r19
   483b4:	b4c00115 	stw	r19,4(r22)
   483b8:	b44b883a 	add	r5,r22,r17
   483bc:	18c00054 	ori	r3,r3,1
   483c0:	28c00115 	stw	r3,4(r5)
   483c4:	10c00117 	ldw	r3,4(r2)
   483c8:	29400204 	addi	r5,r5,8
   483cc:	a809883a 	mov	r4,r21
   483d0:	18c00054 	ori	r3,r3,1
   483d4:	10c00115 	stw	r3,4(r2)
   483d8:	00458f00 	call	458f0 <_free_r>
   483dc:	003fb106 	br	482a4 <_realloc_r+0x184>
   483e0:	00ffff04 	movi	r3,-4
   483e4:	10c4703a 	and	r2,r2,r3
   483e8:	1487883a 	add	r3,r2,r18
   483ec:	89800404 	addi	r6,r17,16
   483f0:	19bf7716 	blt	r3,r6,481d0 <_realloc_r+0xb0>
   483f4:	b46d883a 	add	r22,r22,r17
   483f8:	1c45c83a 	sub	r2,r3,r17
   483fc:	bd800215 	stw	r22,8(r23)
   48400:	10800054 	ori	r2,r2,1
   48404:	b0800115 	stw	r2,4(r22)
   48408:	80bfff17 	ldw	r2,-4(r16)
   4840c:	a809883a 	mov	r4,r21
   48410:	8029883a 	mov	r20,r16
   48414:	1080004c 	andi	r2,r2,1
   48418:	1444b03a 	or	r2,r2,r17
   4841c:	80bfff15 	stw	r2,-4(r16)
   48420:	004de180 	call	4de18 <__malloc_unlock>
   48424:	003fa206 	br	482b0 <_realloc_r+0x190>
   48428:	a0bfff17 	ldw	r2,-4(r20)
   4842c:	00ffff04 	movi	r3,-4
   48430:	10c4703a 	and	r2,r2,r3
   48434:	90a5883a 	add	r18,r18,r2
   48438:	003f9006 	br	4827c <_realloc_r+0x15c>
   4843c:	873ffe17 	ldw	fp,-8(r16)
   48440:	00bfff04 	movi	r2,-4
   48444:	b739c83a 	sub	fp,r22,fp
   48448:	e0c00117 	ldw	r3,4(fp)
   4844c:	1886703a 	and	r3,r3,r2
   48450:	003f6b06 	br	48200 <_realloc_r+0xe0>
   48454:	80c00017 	ldw	r3,0(r16)
   48458:	30800728 	cmpgeui	r2,r6,28
   4845c:	a0c00015 	stw	r3,0(r20)
   48460:	80c00117 	ldw	r3,4(r16)
   48464:	a0c00115 	stw	r3,4(r20)
   48468:	10004c1e 	bne	r2,zero,4859c <_realloc_r+0x47c>
   4846c:	80c00204 	addi	r3,r16,8
   48470:	a0800204 	addi	r2,r20,8
   48474:	003fb506 	br	4834c <_realloc_r+0x22c>
   48478:	20800317 	ldw	r2,12(r4)
   4847c:	20c00217 	ldw	r3,8(r4)
   48480:	91bfff04 	addi	r6,r18,-4
   48484:	31400968 	cmpgeui	r5,r6,37
   48488:	18800315 	stw	r2,12(r3)
   4848c:	10c00215 	stw	r3,8(r2)
   48490:	e0c00217 	ldw	r3,8(fp)
   48494:	e0800317 	ldw	r2,12(fp)
   48498:	e1000204 	addi	r4,fp,8
   4849c:	18800315 	stw	r2,12(r3)
   484a0:	10c00215 	stw	r3,8(r2)
   484a4:	2800511e 	bne	r5,zero,485ec <_realloc_r+0x4cc>
   484a8:	30800530 	cmpltui	r2,r6,20
   484ac:	10004d1e 	bne	r2,zero,485e4 <_realloc_r+0x4c4>
   484b0:	80c00017 	ldw	r3,0(r16)
   484b4:	30800728 	cmpgeui	r2,r6,28
   484b8:	e0c00215 	stw	r3,8(fp)
   484bc:	80c00117 	ldw	r3,4(r16)
   484c0:	e0c00315 	stw	r3,12(fp)
   484c4:	1000641e 	bne	r2,zero,48658 <_realloc_r+0x538>
   484c8:	84000204 	addi	r16,r16,8
   484cc:	e0800404 	addi	r2,fp,16
   484d0:	80c00017 	ldw	r3,0(r16)
   484d4:	3825883a 	mov	r18,r7
   484d8:	003f6006 	br	4825c <_realloc_r+0x13c>
   484dc:	20800317 	ldw	r2,12(r4)
   484e0:	21000217 	ldw	r4,8(r4)
   484e4:	1825883a 	mov	r18,r3
   484e8:	20800315 	stw	r2,12(r4)
   484ec:	11000215 	stw	r4,8(r2)
   484f0:	003f6206 	br	4827c <_realloc_r+0x15c>
   484f4:	800b883a 	mov	r5,r16
   484f8:	a009883a 	mov	r4,r20
   484fc:	0046dac0 	call	46dac <memmove>
   48500:	003f9806 	br	48364 <_realloc_r+0x244>
   48504:	88800404 	addi	r2,r17,16
   48508:	38bf3d16 	blt	r7,r2,48200 <_realloc_r+0xe0>
   4850c:	e0800317 	ldw	r2,12(fp)
   48510:	e0c00217 	ldw	r3,8(fp)
   48514:	91bfff04 	addi	r6,r18,-4
   48518:	31000968 	cmpgeui	r4,r6,37
   4851c:	18800315 	stw	r2,12(r3)
   48520:	10c00215 	stw	r3,8(r2)
   48524:	e5000204 	addi	r20,fp,8
   48528:	2000561e 	bne	r4,zero,48684 <_realloc_r+0x564>
   4852c:	30800530 	cmpltui	r2,r6,20
   48530:	1000521e 	bne	r2,zero,4867c <_realloc_r+0x55c>
   48534:	80c00017 	ldw	r3,0(r16)
   48538:	30800728 	cmpgeui	r2,r6,28
   4853c:	e0c00215 	stw	r3,8(fp)
   48540:	80c00117 	ldw	r3,4(r16)
   48544:	e0c00315 	stw	r3,12(fp)
   48548:	1000541e 	bne	r2,zero,4869c <_realloc_r+0x57c>
   4854c:	84000204 	addi	r16,r16,8
   48550:	e0800404 	addi	r2,fp,16
   48554:	80c00017 	ldw	r3,0(r16)
   48558:	10c00015 	stw	r3,0(r2)
   4855c:	80c00117 	ldw	r3,4(r16)
   48560:	10c00115 	stw	r3,4(r2)
   48564:	80c00217 	ldw	r3,8(r16)
   48568:	10c00215 	stw	r3,8(r2)
   4856c:	e447883a 	add	r3,fp,r17
   48570:	3c45c83a 	sub	r2,r7,r17
   48574:	b8c00215 	stw	r3,8(r23)
   48578:	10800054 	ori	r2,r2,1
   4857c:	18800115 	stw	r2,4(r3)
   48580:	e0800117 	ldw	r2,4(fp)
   48584:	a809883a 	mov	r4,r21
   48588:	1080004c 	andi	r2,r2,1
   4858c:	1444b03a 	or	r2,r2,r17
   48590:	e0800115 	stw	r2,4(fp)
   48594:	004de180 	call	4de18 <__malloc_unlock>
   48598:	003f4506 	br	482b0 <_realloc_r+0x190>
   4859c:	80800217 	ldw	r2,8(r16)
   485a0:	31800920 	cmpeqi	r6,r6,36
   485a4:	a0800215 	stw	r2,8(r20)
   485a8:	80800317 	ldw	r2,12(r16)
   485ac:	a0800315 	stw	r2,12(r20)
   485b0:	3000191e 	bne	r6,zero,48618 <_realloc_r+0x4f8>
   485b4:	80c00404 	addi	r3,r16,16
   485b8:	a0800404 	addi	r2,r20,16
   485bc:	003f6306 	br	4834c <_realloc_r+0x22c>
   485c0:	2005883a 	mov	r2,r4
   485c4:	003f2306 	br	48254 <_realloc_r+0x134>
   485c8:	800b883a 	mov	r5,r16
   485cc:	0046dac0 	call	46dac <memmove>
   485d0:	1021883a 	mov	r16,r2
   485d4:	e4c00117 	ldw	r19,4(fp)
   485d8:	b825883a 	mov	r18,r23
   485dc:	e02d883a 	mov	r22,fp
   485e0:	003f2606 	br	4827c <_realloc_r+0x15c>
   485e4:	2005883a 	mov	r2,r4
   485e8:	003fb906 	br	484d0 <_realloc_r+0x3b0>
   485ec:	800b883a 	mov	r5,r16
   485f0:	d9c00015 	stw	r7,0(sp)
   485f4:	0046dac0 	call	46dac <memmove>
   485f8:	d9c00017 	ldw	r7,0(sp)
   485fc:	1021883a 	mov	r16,r2
   48600:	e02d883a 	mov	r22,fp
   48604:	3825883a 	mov	r18,r7
   48608:	003f1c06 	br	4827c <_realloc_r+0x15c>
   4860c:	a809883a 	mov	r4,r21
   48610:	004de180 	call	4de18 <__malloc_unlock>
   48614:	003f3706 	br	482f4 <_realloc_r+0x1d4>
   48618:	81000417 	ldw	r4,16(r16)
   4861c:	80c00604 	addi	r3,r16,24
   48620:	a0800604 	addi	r2,r20,24
   48624:	a1000415 	stw	r4,16(r20)
   48628:	81000517 	ldw	r4,20(r16)
   4862c:	a1000515 	stw	r4,20(r20)
   48630:	003f4606 	br	4834c <_realloc_r+0x22c>
   48634:	80800217 	ldw	r2,8(r16)
   48638:	31800920 	cmpeqi	r6,r6,36
   4863c:	e0800415 	stw	r2,16(fp)
   48640:	80800317 	ldw	r2,12(r16)
   48644:	e0800515 	stw	r2,20(fp)
   48648:	30001d1e 	bne	r6,zero,486c0 <_realloc_r+0x5a0>
   4864c:	84000404 	addi	r16,r16,16
   48650:	e0800604 	addi	r2,fp,24
   48654:	003eff06 	br	48254 <_realloc_r+0x134>
   48658:	80800217 	ldw	r2,8(r16)
   4865c:	31800920 	cmpeqi	r6,r6,36
   48660:	e0800415 	stw	r2,16(fp)
   48664:	80800317 	ldw	r2,12(r16)
   48668:	e0800515 	stw	r2,20(fp)
   4866c:	30001b1e 	bne	r6,zero,486dc <_realloc_r+0x5bc>
   48670:	84000404 	addi	r16,r16,16
   48674:	e0800604 	addi	r2,fp,24
   48678:	003f9506 	br	484d0 <_realloc_r+0x3b0>
   4867c:	a005883a 	mov	r2,r20
   48680:	003fb406 	br	48554 <_realloc_r+0x434>
   48684:	800b883a 	mov	r5,r16
   48688:	a009883a 	mov	r4,r20
   4868c:	d9c00015 	stw	r7,0(sp)
   48690:	0046dac0 	call	46dac <memmove>
   48694:	d9c00017 	ldw	r7,0(sp)
   48698:	003fb406 	br	4856c <_realloc_r+0x44c>
   4869c:	80800217 	ldw	r2,8(r16)
   486a0:	31800920 	cmpeqi	r6,r6,36
   486a4:	e0800415 	stw	r2,16(fp)
   486a8:	80800317 	ldw	r2,12(r16)
   486ac:	e0800515 	stw	r2,20(fp)
   486b0:	3000111e 	bne	r6,zero,486f8 <_realloc_r+0x5d8>
   486b4:	84000404 	addi	r16,r16,16
   486b8:	e0800604 	addi	r2,fp,24
   486bc:	003fa506 	br	48554 <_realloc_r+0x434>
   486c0:	80c00417 	ldw	r3,16(r16)
   486c4:	84000604 	addi	r16,r16,24
   486c8:	e0800804 	addi	r2,fp,32
   486cc:	e0c00615 	stw	r3,24(fp)
   486d0:	80ffff17 	ldw	r3,-4(r16)
   486d4:	e0c00715 	stw	r3,28(fp)
   486d8:	003ede06 	br	48254 <_realloc_r+0x134>
   486dc:	80c00417 	ldw	r3,16(r16)
   486e0:	84000604 	addi	r16,r16,24
   486e4:	e0800804 	addi	r2,fp,32
   486e8:	e0c00615 	stw	r3,24(fp)
   486ec:	80ffff17 	ldw	r3,-4(r16)
   486f0:	e0c00715 	stw	r3,28(fp)
   486f4:	003f7606 	br	484d0 <_realloc_r+0x3b0>
   486f8:	80c00417 	ldw	r3,16(r16)
   486fc:	84000604 	addi	r16,r16,24
   48700:	e0800804 	addi	r2,fp,32
   48704:	e0c00615 	stw	r3,24(fp)
   48708:	80ffff17 	ldw	r3,-4(r16)
   4870c:	e0c00715 	stw	r3,28(fp)
   48710:	003f9006 	br	48554 <_realloc_r+0x434>

00048714 <_sbrk_r>:
   48714:	defffe04 	addi	sp,sp,-8
   48718:	dc000015 	stw	r16,0(sp)
   4871c:	00800174 	movhi	r2,5
   48720:	2021883a 	mov	r16,r4
   48724:	2809883a 	mov	r4,r5
   48728:	dfc00115 	stw	ra,4(sp)
   4872c:	100f8315 	stw	zero,15884(r2)
   48730:	004dfd80 	call	4dfd8 <sbrk>
   48734:	10ffffd8 	cmpnei	r3,r2,-1
   48738:	18000426 	beq	r3,zero,4874c <_sbrk_r+0x38>
   4873c:	dfc00117 	ldw	ra,4(sp)
   48740:	dc000017 	ldw	r16,0(sp)
   48744:	dec00204 	addi	sp,sp,8
   48748:	f800283a 	ret
   4874c:	00c00174 	movhi	r3,5
   48750:	18cf8317 	ldw	r3,15884(r3)
   48754:	183ff926 	beq	r3,zero,4873c <_sbrk_r+0x28>
   48758:	80c00015 	stw	r3,0(r16)
   4875c:	dfc00117 	ldw	ra,4(sp)
   48760:	dc000017 	ldw	r16,0(sp)
   48764:	dec00204 	addi	sp,sp,8
   48768:	f800283a 	ret

0004876c <__sread>:
   4876c:	defffe04 	addi	sp,sp,-8
   48770:	dc000015 	stw	r16,0(sp)
   48774:	2821883a 	mov	r16,r5
   48778:	2940038f 	ldh	r5,14(r5)
   4877c:	dfc00115 	stw	ra,4(sp)
   48780:	004a54c0 	call	4a54c <_read_r>
   48784:	10000716 	blt	r2,zero,487a4 <__sread+0x38>
   48788:	80c01417 	ldw	r3,80(r16)
   4878c:	1887883a 	add	r3,r3,r2
   48790:	80c01415 	stw	r3,80(r16)
   48794:	dfc00117 	ldw	ra,4(sp)
   48798:	dc000017 	ldw	r16,0(sp)
   4879c:	dec00204 	addi	sp,sp,8
   487a0:	f800283a 	ret
   487a4:	80c0030b 	ldhu	r3,12(r16)
   487a8:	18fbffcc 	andi	r3,r3,61439
   487ac:	80c0030d 	sth	r3,12(r16)
   487b0:	dfc00117 	ldw	ra,4(sp)
   487b4:	dc000017 	ldw	r16,0(sp)
   487b8:	dec00204 	addi	sp,sp,8
   487bc:	f800283a 	ret

000487c0 <__seofread>:
   487c0:	0005883a 	mov	r2,zero
   487c4:	f800283a 	ret

000487c8 <__swrite>:
   487c8:	2880030b 	ldhu	r2,12(r5)
   487cc:	defffb04 	addi	sp,sp,-20
   487d0:	dcc00315 	stw	r19,12(sp)
   487d4:	dc800215 	stw	r18,8(sp)
   487d8:	dc400115 	stw	r17,4(sp)
   487dc:	dc000015 	stw	r16,0(sp)
   487e0:	dfc00415 	stw	ra,16(sp)
   487e4:	10c0400c 	andi	r3,r2,256
   487e8:	2821883a 	mov	r16,r5
   487ec:	2023883a 	mov	r17,r4
   487f0:	3025883a 	mov	r18,r6
   487f4:	3827883a 	mov	r19,r7
   487f8:	18000d1e 	bne	r3,zero,48830 <__swrite+0x68>
   487fc:	8140038f 	ldh	r5,14(r16)
   48800:	10bbffcc 	andi	r2,r2,61439
   48804:	980f883a 	mov	r7,r19
   48808:	900d883a 	mov	r6,r18
   4880c:	8809883a 	mov	r4,r17
   48810:	8080030d 	sth	r2,12(r16)
   48814:	dfc00417 	ldw	ra,16(sp)
   48818:	dcc00317 	ldw	r19,12(sp)
   4881c:	dc800217 	ldw	r18,8(sp)
   48820:	dc400117 	ldw	r17,4(sp)
   48824:	dc000017 	ldw	r16,0(sp)
   48828:	dec00504 	addi	sp,sp,20
   4882c:	0049d081 	jmpi	49d08 <_write_r>
   48830:	2940038f 	ldh	r5,14(r5)
   48834:	01c00084 	movi	r7,2
   48838:	000d883a 	mov	r6,zero
   4883c:	004a4980 	call	4a498 <_lseek_r>
   48840:	8080030b 	ldhu	r2,12(r16)
   48844:	003fed06 	br	487fc <__swrite+0x34>

00048848 <__sseek>:
   48848:	defffe04 	addi	sp,sp,-8
   4884c:	dc000015 	stw	r16,0(sp)
   48850:	2821883a 	mov	r16,r5
   48854:	2940038f 	ldh	r5,14(r5)
   48858:	dfc00115 	stw	ra,4(sp)
   4885c:	004a4980 	call	4a498 <_lseek_r>
   48860:	10ffffd8 	cmpnei	r3,r2,-1
   48864:	18000826 	beq	r3,zero,48888 <__sseek+0x40>
   48868:	80c0030b 	ldhu	r3,12(r16)
   4886c:	80801415 	stw	r2,80(r16)
   48870:	18c40014 	ori	r3,r3,4096
   48874:	80c0030d 	sth	r3,12(r16)
   48878:	dfc00117 	ldw	ra,4(sp)
   4887c:	dc000017 	ldw	r16,0(sp)
   48880:	dec00204 	addi	sp,sp,8
   48884:	f800283a 	ret
   48888:	80c0030b 	ldhu	r3,12(r16)
   4888c:	18fbffcc 	andi	r3,r3,61439
   48890:	80c0030d 	sth	r3,12(r16)
   48894:	dfc00117 	ldw	ra,4(sp)
   48898:	dc000017 	ldw	r16,0(sp)
   4889c:	dec00204 	addi	sp,sp,8
   488a0:	f800283a 	ret

000488a4 <__sclose>:
   488a4:	2940038f 	ldh	r5,14(r5)
   488a8:	0049d6c1 	jmpi	49d6c <_close_r>

000488ac <__sprint_r.part.0>:
   488ac:	28801917 	ldw	r2,100(r5)
   488b0:	defff604 	addi	sp,sp,-40
   488b4:	dcc00315 	stw	r19,12(sp)
   488b8:	dfc00915 	stw	ra,36(sp)
   488bc:	df000815 	stw	fp,32(sp)
   488c0:	ddc00715 	stw	r23,28(sp)
   488c4:	dd800615 	stw	r22,24(sp)
   488c8:	dd400515 	stw	r21,20(sp)
   488cc:	dd000415 	stw	r20,16(sp)
   488d0:	dc800215 	stw	r18,8(sp)
   488d4:	dc400115 	stw	r17,4(sp)
   488d8:	dc000015 	stw	r16,0(sp)
   488dc:	1088000c 	andi	r2,r2,8192
   488e0:	3027883a 	mov	r19,r6
   488e4:	10002c26 	beq	r2,zero,48998 <__sprint_r.part.0+0xec>
   488e8:	30800217 	ldw	r2,8(r6)
   488ec:	35000017 	ldw	r20,0(r6)
   488f0:	2821883a 	mov	r16,r5
   488f4:	2023883a 	mov	r17,r4
   488f8:	05bfff04 	movi	r22,-4
   488fc:	10002426 	beq	r2,zero,48990 <__sprint_r.part.0+0xe4>
   48900:	a5400117 	ldw	r21,4(r20)
   48904:	a5c00017 	ldw	r23,0(r20)
   48908:	a824d0ba 	srli	r18,r21,2
   4890c:	90001b26 	beq	r18,zero,4897c <__sprint_r.part.0+0xd0>
   48910:	0039883a 	mov	fp,zero
   48914:	00000206 	br	48920 <__sprint_r.part.0+0x74>
   48918:	bdc00104 	addi	r23,r23,4
   4891c:	97001626 	beq	r18,fp,48978 <__sprint_r.part.0+0xcc>
   48920:	b9400017 	ldw	r5,0(r23)
   48924:	800d883a 	mov	r6,r16
   48928:	8809883a 	mov	r4,r17
   4892c:	004a2500 	call	4a250 <_fputwc_r>
   48930:	10bfffe0 	cmpeqi	r2,r2,-1
   48934:	e7000044 	addi	fp,fp,1
   48938:	103ff726 	beq	r2,zero,48918 <__sprint_r.part.0+0x6c>
   4893c:	00bfffc4 	movi	r2,-1
   48940:	98000215 	stw	zero,8(r19)
   48944:	98000115 	stw	zero,4(r19)
   48948:	dfc00917 	ldw	ra,36(sp)
   4894c:	df000817 	ldw	fp,32(sp)
   48950:	ddc00717 	ldw	r23,28(sp)
   48954:	dd800617 	ldw	r22,24(sp)
   48958:	dd400517 	ldw	r21,20(sp)
   4895c:	dd000417 	ldw	r20,16(sp)
   48960:	dcc00317 	ldw	r19,12(sp)
   48964:	dc800217 	ldw	r18,8(sp)
   48968:	dc400117 	ldw	r17,4(sp)
   4896c:	dc000017 	ldw	r16,0(sp)
   48970:	dec00a04 	addi	sp,sp,40
   48974:	f800283a 	ret
   48978:	98800217 	ldw	r2,8(r19)
   4897c:	adaa703a 	and	r21,r21,r22
   48980:	1545c83a 	sub	r2,r2,r21
   48984:	98800215 	stw	r2,8(r19)
   48988:	a5000204 	addi	r20,r20,8
   4898c:	103fdc1e 	bne	r2,zero,48900 <__sprint_r.part.0+0x54>
   48990:	0005883a 	mov	r2,zero
   48994:	003fea06 	br	48940 <__sprint_r.part.0+0x94>
   48998:	0045bf80 	call	45bf8 <__sfvwrite_r>
   4899c:	003fe806 	br	48940 <__sprint_r.part.0+0x94>

000489a0 <__sprint_r>:
   489a0:	30c00217 	ldw	r3,8(r6)
   489a4:	18000126 	beq	r3,zero,489ac <__sprint_r+0xc>
   489a8:	00488ac1 	jmpi	488ac <__sprint_r.part.0>
   489ac:	30000115 	stw	zero,4(r6)
   489b0:	0005883a 	mov	r2,zero
   489b4:	f800283a 	ret

000489b8 <___vfiprintf_internal_r>:
   489b8:	deffcf04 	addi	sp,sp,-196
   489bc:	dd002b15 	stw	r20,172(sp)
   489c0:	dc802915 	stw	r18,164(sp)
   489c4:	dfc03015 	stw	ra,192(sp)
   489c8:	df002f15 	stw	fp,188(sp)
   489cc:	ddc02e15 	stw	r23,184(sp)
   489d0:	dd802d15 	stw	r22,180(sp)
   489d4:	dd402c15 	stw	r21,176(sp)
   489d8:	dcc02a15 	stw	r19,168(sp)
   489dc:	dc402815 	stw	r17,160(sp)
   489e0:	dc002715 	stw	r16,156(sp)
   489e4:	d9000015 	stw	r4,0(sp)
   489e8:	d9c00315 	stw	r7,12(sp)
   489ec:	2825883a 	mov	r18,r5
   489f0:	3029883a 	mov	r20,r6
   489f4:	20000226 	beq	r4,zero,48a00 <___vfiprintf_internal_r+0x48>
   489f8:	20800e17 	ldw	r2,56(r4)
   489fc:	1001b526 	beq	r2,zero,490d4 <___vfiprintf_internal_r+0x71c>
   48a00:	9080030b 	ldhu	r2,12(r18)
   48a04:	10c8000c 	andi	r3,r2,8192
   48a08:	1800071e 	bne	r3,zero,48a28 <___vfiprintf_internal_r+0x70>
   48a0c:	90c01917 	ldw	r3,100(r18)
   48a10:	11080014 	ori	r4,r2,8192
   48a14:	00b7ffc4 	movi	r2,-8193
   48a18:	1886703a 	and	r3,r3,r2
   48a1c:	9100030d 	sth	r4,12(r18)
   48a20:	2005883a 	mov	r2,r4
   48a24:	90c01915 	stw	r3,100(r18)
   48a28:	10c0020c 	andi	r3,r2,8
   48a2c:	1800fd26 	beq	r3,zero,48e24 <___vfiprintf_internal_r+0x46c>
   48a30:	90c00417 	ldw	r3,16(r18)
   48a34:	1800fb26 	beq	r3,zero,48e24 <___vfiprintf_internal_r+0x46c>
   48a38:	1080068c 	andi	r2,r2,26
   48a3c:	10800298 	cmpnei	r2,r2,10
   48a40:	10010026 	beq	r2,zero,48e44 <___vfiprintf_internal_r+0x48c>
   48a44:	dcc01704 	addi	r19,sp,92
   48a48:	05c00174 	movhi	r23,5
   48a4c:	dcc00a15 	stw	r19,40(sp)
   48a50:	d8000c15 	stw	zero,48(sp)
   48a54:	d8000b15 	stw	zero,44(sp)
   48a58:	9811883a 	mov	r8,r19
   48a5c:	d8000515 	stw	zero,20(sp)
   48a60:	d8000115 	stw	zero,4(sp)
   48a64:	bdc0cc04 	addi	r23,r23,816
   48a68:	a0800007 	ldb	r2,0(r20)
   48a6c:	1000db26 	beq	r2,zero,48ddc <___vfiprintf_internal_r+0x424>
   48a70:	a021883a 	mov	r16,r20
   48a74:	00000306 	br	48a84 <___vfiprintf_internal_r+0xcc>
   48a78:	80800047 	ldb	r2,1(r16)
   48a7c:	84000044 	addi	r16,r16,1
   48a80:	10011826 	beq	r2,zero,48ee4 <___vfiprintf_internal_r+0x52c>
   48a84:	10800958 	cmpnei	r2,r2,37
   48a88:	103ffb1e 	bne	r2,zero,48a78 <___vfiprintf_internal_r+0xc0>
   48a8c:	8523c83a 	sub	r17,r16,r20
   48a90:	8501161e 	bne	r16,r20,48eec <___vfiprintf_internal_r+0x534>
   48a94:	80800003 	ldbu	r2,0(r16)
   48a98:	10803fcc 	andi	r2,r2,255
   48a9c:	1080201c 	xori	r2,r2,128
   48aa0:	10bfe004 	addi	r2,r2,-128
   48aa4:	1000cd26 	beq	r2,zero,48ddc <___vfiprintf_internal_r+0x424>
   48aa8:	80800047 	ldb	r2,1(r16)
   48aac:	85000044 	addi	r20,r16,1
   48ab0:	d8000945 	stb	zero,37(sp)
   48ab4:	027fffc4 	movi	r9,-1
   48ab8:	0023883a 	mov	r17,zero
   48abc:	0021883a 	mov	r16,zero
   48ac0:	a5000044 	addi	r20,r20,1
   48ac4:	10fff804 	addi	r3,r2,-32
   48ac8:	19001668 	cmpgeui	r4,r3,89
   48acc:	20006a1e 	bne	r4,zero,48c78 <___vfiprintf_internal_r+0x2c0>
   48ad0:	180690ba 	slli	r3,r3,2
   48ad4:	01000174 	movhi	r4,5
   48ad8:	1909883a 	add	r4,r3,r4
   48adc:	20e2b917 	ldw	r3,-29980(r4)
   48ae0:	1800683a 	jmp	r3
   48ae4:	00049178 	rdprs	zero,zero,4677
   48ae8:	00048c78 	rdprs	zero,zero,4657
   48aec:	00048c78 	rdprs	zero,zero,4657
   48af0:	0004916c 	andhi	zero,zero,4677
   48af4:	00048c78 	rdprs	zero,zero,4657
   48af8:	00048c78 	rdprs	zero,zero,4657
   48afc:	00048c78 	rdprs	zero,zero,4657
   48b00:	00048c78 	rdprs	zero,zero,4657
   48b04:	00048c78 	rdprs	zero,zero,4657
   48b08:	00048c78 	rdprs	zero,zero,4657
   48b0c:	000490e8 	cmpgeui	zero,zero,4675
   48b10:	0004915c 	xori	zero,zero,4677
   48b14:	00048c78 	rdprs	zero,zero,4657
   48b18:	00049100 	call	4910 <__reset-0x3b6f0>
   48b1c:	0004910c 	andi	zero,zero,4676
   48b20:	00048c78 	rdprs	zero,zero,4657
   48b24:	00049150 	cmplti	zero,zero,4677
   48b28:	00048c48 	cmpgei	zero,zero,4657
   48b2c:	00048c48 	cmpgei	zero,zero,4657
   48b30:	00048c48 	cmpgei	zero,zero,4657
   48b34:	00048c48 	cmpgei	zero,zero,4657
   48b38:	00048c48 	cmpgei	zero,zero,4657
   48b3c:	00048c48 	cmpgei	zero,zero,4657
   48b40:	00048c48 	cmpgei	zero,zero,4657
   48b44:	00048c48 	cmpgei	zero,zero,4657
   48b48:	00048c48 	cmpgei	zero,zero,4657
   48b4c:	00048c78 	rdprs	zero,zero,4657
   48b50:	00048c78 	rdprs	zero,zero,4657
   48b54:	00048c78 	rdprs	zero,zero,4657
   48b58:	00048c78 	rdprs	zero,zero,4657
   48b5c:	00048c78 	rdprs	zero,zero,4657
   48b60:	00048c78 	rdprs	zero,zero,4657
   48b64:	00048c78 	rdprs	zero,zero,4657
   48b68:	00048c78 	rdprs	zero,zero,4657
   48b6c:	00048c78 	rdprs	zero,zero,4657
   48b70:	00048c78 	rdprs	zero,zero,4657
   48b74:	00048e8c 	andi	zero,zero,4666
   48b78:	00048c78 	rdprs	zero,zero,4657
   48b7c:	00048c78 	rdprs	zero,zero,4657
   48b80:	00048c78 	rdprs	zero,zero,4657
   48b84:	00048c78 	rdprs	zero,zero,4657
   48b88:	00048c78 	rdprs	zero,zero,4657
   48b8c:	00048c78 	rdprs	zero,zero,4657
   48b90:	00048c78 	rdprs	zero,zero,4657
   48b94:	00048c78 	rdprs	zero,zero,4657
   48b98:	00048c78 	rdprs	zero,zero,4657
   48b9c:	00048c78 	rdprs	zero,zero,4657
   48ba0:	00049294 	movui	zero,4682
   48ba4:	00048c78 	rdprs	zero,zero,4657
   48ba8:	00048c78 	rdprs	zero,zero,4657
   48bac:	00048c78 	rdprs	zero,zero,4657
   48bb0:	00048c78 	rdprs	zero,zero,4657
   48bb4:	00048c78 	rdprs	zero,zero,4657
   48bb8:	00049230 	cmpltui	zero,zero,4680
   48bbc:	00048c78 	rdprs	zero,zero,4657
   48bc0:	00048c78 	rdprs	zero,zero,4657
   48bc4:	00049a08 	cmpgei	zero,zero,4712
   48bc8:	00048c78 	rdprs	zero,zero,4657
   48bcc:	00048c78 	rdprs	zero,zero,4657
   48bd0:	00048c78 	rdprs	zero,zero,4657
   48bd4:	00048c78 	rdprs	zero,zero,4657
   48bd8:	00048c78 	rdprs	zero,zero,4657
   48bdc:	00048c78 	rdprs	zero,zero,4657
   48be0:	00048c78 	rdprs	zero,zero,4657
   48be4:	00048c78 	rdprs	zero,zero,4657
   48be8:	00048c78 	rdprs	zero,zero,4657
   48bec:	00048c78 	rdprs	zero,zero,4657
   48bf0:	00049208 	cmpgei	zero,zero,4680
   48bf4:	00048e90 	cmplti	zero,zero,4666
   48bf8:	00048c78 	rdprs	zero,zero,4657
   48bfc:	00048c78 	rdprs	zero,zero,4657
   48c00:	00048c78 	rdprs	zero,zero,4657
   48c04:	000491fc 	xorhi	zero,zero,4679
   48c08:	00048e90 	cmplti	zero,zero,4666
   48c0c:	00048c78 	rdprs	zero,zero,4657
   48c10:	00048c78 	rdprs	zero,zero,4657
   48c14:	000491e8 	cmpgeui	zero,zero,4679
   48c18:	00048c78 	rdprs	zero,zero,4657
   48c1c:	000491b8 	rdprs	zero,zero,4678
   48c20:	00049a64 	muli	zero,zero,4713
   48c24:	000493a8 	cmpgeui	zero,zero,4686
   48c28:	0004939c 	xori	zero,zero,4686
   48c2c:	00048c78 	rdprs	zero,zero,4657
   48c30:	00049344 	movi	zero,4685
   48c34:	00048c78 	rdprs	zero,zero,4657
   48c38:	00049a00 	call	49a0 <__reset-0x3b660>
   48c3c:	00048c78 	rdprs	zero,zero,4657
   48c40:	00048c78 	rdprs	zero,zero,4657
   48c44:	00049a90 	cmplti	zero,zero,4714
   48c48:	0023883a 	mov	r17,zero
   48c4c:	10fff404 	addi	r3,r2,-48
   48c50:	a0800007 	ldb	r2,0(r20)
   48c54:	8c4002a4 	muli	r17,r17,10
   48c58:	a5000044 	addi	r20,r20,1
   48c5c:	1c63883a 	add	r17,r3,r17
   48c60:	10fff404 	addi	r3,r2,-48
   48c64:	190002b0 	cmpltui	r4,r3,10
   48c68:	203ff91e 	bne	r4,zero,48c50 <___vfiprintf_internal_r+0x298>
   48c6c:	10fff804 	addi	r3,r2,-32
   48c70:	19001668 	cmpgeui	r4,r3,89
   48c74:	203f9626 	beq	r4,zero,48ad0 <___vfiprintf_internal_r+0x118>
   48c78:	10005826 	beq	r2,zero,48ddc <___vfiprintf_internal_r+0x424>
   48c7c:	d8800d05 	stb	r2,52(sp)
   48c80:	d8000945 	stb	zero,37(sp)
   48c84:	05800044 	movi	r22,1
   48c88:	05400044 	movi	r21,1
   48c8c:	df000d04 	addi	fp,sp,52
   48c90:	0013883a 	mov	r9,zero
   48c94:	8340008c 	andi	r13,r16,2
   48c98:	68000126 	beq	r13,zero,48ca0 <___vfiprintf_internal_r+0x2e8>
   48c9c:	b5800084 	addi	r22,r22,2
   48ca0:	d9000b17 	ldw	r4,44(sp)
   48ca4:	8300210c 	andi	r12,r16,132
   48ca8:	d8800c17 	ldw	r2,48(sp)
   48cac:	21800044 	addi	r6,r4,1
   48cb0:	300b883a 	mov	r5,r6
   48cb4:	6000021e 	bne	r12,zero,48cc0 <___vfiprintf_internal_r+0x308>
   48cb8:	8d87c83a 	sub	r3,r17,r22
   48cbc:	00c28f16 	blt	zero,r3,496fc <___vfiprintf_internal_r+0xd44>
   48cc0:	d8c00947 	ldb	r3,37(sp)
   48cc4:	18000c26 	beq	r3,zero,48cf8 <___vfiprintf_internal_r+0x340>
   48cc8:	d8c00944 	addi	r3,sp,37
   48ccc:	10800044 	addi	r2,r2,1
   48cd0:	40c00015 	stw	r3,0(r8)
   48cd4:	00c00044 	movi	r3,1
   48cd8:	40c00115 	stw	r3,4(r8)
   48cdc:	d8800c15 	stw	r2,48(sp)
   48ce0:	d9400b15 	stw	r5,44(sp)
   48ce4:	28c00208 	cmpgei	r3,r5,8
   48ce8:	1802681e 	bne	r3,zero,4968c <___vfiprintf_internal_r+0xcd4>
   48cec:	2809883a 	mov	r4,r5
   48cf0:	42000204 	addi	r8,r8,8
   48cf4:	29400044 	addi	r5,r5,1
   48cf8:	68001726 	beq	r13,zero,48d58 <___vfiprintf_internal_r+0x3a0>
   48cfc:	d8c00984 	addi	r3,sp,38
   48d00:	10800084 	addi	r2,r2,2
   48d04:	40c00015 	stw	r3,0(r8)
   48d08:	00c00084 	movi	r3,2
   48d0c:	40c00115 	stw	r3,4(r8)
   48d10:	d8800c15 	stw	r2,48(sp)
   48d14:	d9400b15 	stw	r5,44(sp)
   48d18:	28c00208 	cmpgei	r3,r5,8
   48d1c:	18027326 	beq	r3,zero,496ec <___vfiprintf_internal_r+0xd34>
   48d20:	1002f626 	beq	r2,zero,498fc <___vfiprintf_internal_r+0xf44>
   48d24:	d9000017 	ldw	r4,0(sp)
   48d28:	d9800a04 	addi	r6,sp,40
   48d2c:	900b883a 	mov	r5,r18
   48d30:	da400415 	stw	r9,16(sp)
   48d34:	db000215 	stw	r12,8(sp)
   48d38:	00488ac0 	call	488ac <__sprint_r.part.0>
   48d3c:	1000291e 	bne	r2,zero,48de4 <___vfiprintf_internal_r+0x42c>
   48d40:	d9000b17 	ldw	r4,44(sp)
   48d44:	d8800c17 	ldw	r2,48(sp)
   48d48:	da400417 	ldw	r9,16(sp)
   48d4c:	db000217 	ldw	r12,8(sp)
   48d50:	9811883a 	mov	r8,r19
   48d54:	21400044 	addi	r5,r4,1
   48d58:	63002018 	cmpnei	r12,r12,128
   48d5c:	6001cf26 	beq	r12,zero,4949c <___vfiprintf_internal_r+0xae4>
   48d60:	4d53c83a 	sub	r9,r9,r21
   48d64:	02420d16 	blt	zero,r9,4959c <___vfiprintf_internal_r+0xbe4>
   48d68:	a885883a 	add	r2,r21,r2
   48d6c:	d9400b15 	stw	r5,44(sp)
   48d70:	47000015 	stw	fp,0(r8)
   48d74:	45400115 	stw	r21,4(r8)
   48d78:	d8800c15 	stw	r2,48(sp)
   48d7c:	29400208 	cmpgei	r5,r5,8
   48d80:	2801c026 	beq	r5,zero,49484 <___vfiprintf_internal_r+0xacc>
   48d84:	10007126 	beq	r2,zero,48f4c <___vfiprintf_internal_r+0x594>
   48d88:	d9000017 	ldw	r4,0(sp)
   48d8c:	d9800a04 	addi	r6,sp,40
   48d90:	900b883a 	mov	r5,r18
   48d94:	00488ac0 	call	488ac <__sprint_r.part.0>
   48d98:	1000121e 	bne	r2,zero,48de4 <___vfiprintf_internal_r+0x42c>
   48d9c:	d8800c17 	ldw	r2,48(sp)
   48da0:	9811883a 	mov	r8,r19
   48da4:	8400010c 	andi	r16,r16,4
   48da8:	80000226 	beq	r16,zero,48db4 <___vfiprintf_internal_r+0x3fc>
   48dac:	8da1c83a 	sub	r16,r17,r22
   48db0:	04006c16 	blt	zero,r16,48f64 <___vfiprintf_internal_r+0x5ac>
   48db4:	8d80010e 	bge	r17,r22,48dbc <___vfiprintf_internal_r+0x404>
   48db8:	b023883a 	mov	r17,r22
   48dbc:	d8c00117 	ldw	r3,4(sp)
   48dc0:	1c47883a 	add	r3,r3,r17
   48dc4:	d8c00115 	stw	r3,4(sp)
   48dc8:	1002261e 	bne	r2,zero,49664 <___vfiprintf_internal_r+0xcac>
   48dcc:	a0800007 	ldb	r2,0(r20)
   48dd0:	d8000b15 	stw	zero,44(sp)
   48dd4:	9811883a 	mov	r8,r19
   48dd8:	103f251e 	bne	r2,zero,48a70 <___vfiprintf_internal_r+0xb8>
   48ddc:	d8800c17 	ldw	r2,48(sp)
   48de0:	1003631e 	bne	r2,zero,49b70 <___vfiprintf_internal_r+0x11b8>
   48de4:	9080030b 	ldhu	r2,12(r18)
   48de8:	1080100c 	andi	r2,r2,64
   48dec:	1003741e 	bne	r2,zero,49bc0 <___vfiprintf_internal_r+0x1208>
   48df0:	d8800117 	ldw	r2,4(sp)
   48df4:	dfc03017 	ldw	ra,192(sp)
   48df8:	df002f17 	ldw	fp,188(sp)
   48dfc:	ddc02e17 	ldw	r23,184(sp)
   48e00:	dd802d17 	ldw	r22,180(sp)
   48e04:	dd402c17 	ldw	r21,176(sp)
   48e08:	dd002b17 	ldw	r20,172(sp)
   48e0c:	dcc02a17 	ldw	r19,168(sp)
   48e10:	dc802917 	ldw	r18,164(sp)
   48e14:	dc402817 	ldw	r17,160(sp)
   48e18:	dc002717 	ldw	r16,156(sp)
   48e1c:	dec03104 	addi	sp,sp,196
   48e20:	f800283a 	ret
   48e24:	d9000017 	ldw	r4,0(sp)
   48e28:	900b883a 	mov	r5,r18
   48e2c:	00436340 	call	43634 <__swsetup_r>
   48e30:	1003631e 	bne	r2,zero,49bc0 <___vfiprintf_internal_r+0x1208>
   48e34:	9080030b 	ldhu	r2,12(r18)
   48e38:	1080068c 	andi	r2,r2,26
   48e3c:	10800298 	cmpnei	r2,r2,10
   48e40:	103f001e 	bne	r2,zero,48a44 <___vfiprintf_internal_r+0x8c>
   48e44:	9080038f 	ldh	r2,14(r18)
   48e48:	103efe16 	blt	r2,zero,48a44 <___vfiprintf_internal_r+0x8c>
   48e4c:	d9c00317 	ldw	r7,12(sp)
   48e50:	d9000017 	ldw	r4,0(sp)
   48e54:	a00d883a 	mov	r6,r20
   48e58:	900b883a 	mov	r5,r18
   48e5c:	dfc03017 	ldw	ra,192(sp)
   48e60:	df002f17 	ldw	fp,188(sp)
   48e64:	ddc02e17 	ldw	r23,184(sp)
   48e68:	dd802d17 	ldw	r22,180(sp)
   48e6c:	dd402c17 	ldw	r21,176(sp)
   48e70:	dd002b17 	ldw	r20,172(sp)
   48e74:	dcc02a17 	ldw	r19,168(sp)
   48e78:	dc802917 	ldw	r18,164(sp)
   48e7c:	dc402817 	ldw	r17,160(sp)
   48e80:	dc002717 	ldw	r16,156(sp)
   48e84:	dec03104 	addi	sp,sp,196
   48e88:	0049c441 	jmpi	49c44 <__sbprintf>
   48e8c:	84000414 	ori	r16,r16,16
   48e90:	8080080c 	andi	r2,r16,32
   48e94:	10006626 	beq	r2,zero,49030 <___vfiprintf_internal_r+0x678>
   48e98:	d8c00317 	ldw	r3,12(sp)
   48e9c:	18800117 	ldw	r2,4(r3)
   48ea0:	1d800017 	ldw	r22,0(r3)
   48ea4:	18c00204 	addi	r3,r3,8
   48ea8:	d8c00315 	stw	r3,12(sp)
   48eac:	102b883a 	mov	r21,r2
   48eb0:	10006d16 	blt	r2,zero,49068 <___vfiprintf_internal_r+0x6b0>
   48eb4:	48bfffd8 	cmpnei	r2,r9,-1
   48eb8:	db000943 	ldbu	r12,37(sp)
   48ebc:	10007526 	beq	r2,zero,49094 <___vfiprintf_internal_r+0x6dc>
   48ec0:	00ffdfc4 	movi	r3,-129
   48ec4:	b544b03a 	or	r2,r22,r21
   48ec8:	80e0703a 	and	r16,r16,r3
   48ecc:	1000711e 	bne	r2,zero,49094 <___vfiprintf_internal_r+0x6dc>
   48ed0:	48033e1e 	bne	r9,zero,49bcc <___vfiprintf_internal_r+0x1214>
   48ed4:	002d883a 	mov	r22,zero
   48ed8:	002b883a 	mov	r21,zero
   48edc:	9839883a 	mov	fp,r19
   48ee0:	00007606 	br	490bc <___vfiprintf_internal_r+0x704>
   48ee4:	8523c83a 	sub	r17,r16,r20
   48ee8:	853fbc26 	beq	r16,r20,48ddc <___vfiprintf_internal_r+0x424>
   48eec:	d8c00c17 	ldw	r3,48(sp)
   48ef0:	d8800b17 	ldw	r2,44(sp)
   48ef4:	45000015 	stw	r20,0(r8)
   48ef8:	88c7883a 	add	r3,r17,r3
   48efc:	10800044 	addi	r2,r2,1
   48f00:	d8800b15 	stw	r2,44(sp)
   48f04:	44400115 	stw	r17,4(r8)
   48f08:	d8c00c15 	stw	r3,48(sp)
   48f0c:	10800208 	cmpgei	r2,r2,8
   48f10:	1000061e 	bne	r2,zero,48f2c <___vfiprintf_internal_r+0x574>
   48f14:	42000204 	addi	r8,r8,8
   48f18:	d8c00117 	ldw	r3,4(sp)
   48f1c:	80800003 	ldbu	r2,0(r16)
   48f20:	1c47883a 	add	r3,r3,r17
   48f24:	d8c00115 	stw	r3,4(sp)
   48f28:	003edb06 	br	48a98 <___vfiprintf_internal_r+0xe0>
   48f2c:	18025226 	beq	r3,zero,49878 <___vfiprintf_internal_r+0xec0>
   48f30:	d9000017 	ldw	r4,0(sp)
   48f34:	d9800a04 	addi	r6,sp,40
   48f38:	900b883a 	mov	r5,r18
   48f3c:	00488ac0 	call	488ac <__sprint_r.part.0>
   48f40:	103fa81e 	bne	r2,zero,48de4 <___vfiprintf_internal_r+0x42c>
   48f44:	9811883a 	mov	r8,r19
   48f48:	003ff306 	br	48f18 <___vfiprintf_internal_r+0x560>
   48f4c:	d8000b15 	stw	zero,44(sp)
   48f50:	8400010c 	andi	r16,r16,4
   48f54:	80022426 	beq	r16,zero,497e8 <___vfiprintf_internal_r+0xe30>
   48f58:	8da1c83a 	sub	r16,r17,r22
   48f5c:	0402220e 	bge	zero,r16,497e8 <___vfiprintf_internal_r+0xe30>
   48f60:	9811883a 	mov	r8,r19
   48f64:	80c00450 	cmplti	r3,r16,17
   48f68:	d9000b17 	ldw	r4,44(sp)
   48f6c:	01c00174 	movhi	r7,5
   48f70:	18030b1e 	bne	r3,zero,49ba0 <___vfiprintf_internal_r+0x11e8>
   48f74:	39c0d004 	addi	r7,r7,832
   48f78:	05400404 	movi	r21,16
   48f7c:	00000606 	br	48f98 <___vfiprintf_internal_r+0x5e0>
   48f80:	21400084 	addi	r5,r4,2
   48f84:	42000204 	addi	r8,r8,8
   48f88:	1809883a 	mov	r4,r3
   48f8c:	843ffc04 	addi	r16,r16,-16
   48f90:	80c00448 	cmpgei	r3,r16,17
   48f94:	18001726 	beq	r3,zero,48ff4 <___vfiprintf_internal_r+0x63c>
   48f98:	20c00044 	addi	r3,r4,1
   48f9c:	10800404 	addi	r2,r2,16
   48fa0:	41c00015 	stw	r7,0(r8)
   48fa4:	45400115 	stw	r21,4(r8)
   48fa8:	d8800c15 	stw	r2,48(sp)
   48fac:	d8c00b15 	stw	r3,44(sp)
   48fb0:	19400208 	cmpgei	r5,r3,8
   48fb4:	283ff226 	beq	r5,zero,48f80 <___vfiprintf_internal_r+0x5c8>
   48fb8:	d9000017 	ldw	r4,0(sp)
   48fbc:	d9800a04 	addi	r6,sp,40
   48fc0:	900b883a 	mov	r5,r18
   48fc4:	10013126 	beq	r2,zero,4948c <___vfiprintf_internal_r+0xad4>
   48fc8:	d9c00215 	stw	r7,8(sp)
   48fcc:	00488ac0 	call	488ac <__sprint_r.part.0>
   48fd0:	103f841e 	bne	r2,zero,48de4 <___vfiprintf_internal_r+0x42c>
   48fd4:	d9000b17 	ldw	r4,44(sp)
   48fd8:	843ffc04 	addi	r16,r16,-16
   48fdc:	80c00448 	cmpgei	r3,r16,17
   48fe0:	d8800c17 	ldw	r2,48(sp)
   48fe4:	d9c00217 	ldw	r7,8(sp)
   48fe8:	9811883a 	mov	r8,r19
   48fec:	21400044 	addi	r5,r4,1
   48ff0:	183fe91e 	bne	r3,zero,48f98 <___vfiprintf_internal_r+0x5e0>
   48ff4:	1405883a 	add	r2,r2,r16
   48ff8:	d9400b15 	stw	r5,44(sp)
   48ffc:	41c00015 	stw	r7,0(r8)
   49000:	44000115 	stw	r16,4(r8)
   49004:	d8800c15 	stw	r2,48(sp)
   49008:	29400210 	cmplti	r5,r5,8
   4900c:	283f691e 	bne	r5,zero,48db4 <___vfiprintf_internal_r+0x3fc>
   49010:	1001f526 	beq	r2,zero,497e8 <___vfiprintf_internal_r+0xe30>
   49014:	d9000017 	ldw	r4,0(sp)
   49018:	d9800a04 	addi	r6,sp,40
   4901c:	900b883a 	mov	r5,r18
   49020:	00488ac0 	call	488ac <__sprint_r.part.0>
   49024:	103f6f1e 	bne	r2,zero,48de4 <___vfiprintf_internal_r+0x42c>
   49028:	d8800c17 	ldw	r2,48(sp)
   4902c:	003f6106 	br	48db4 <___vfiprintf_internal_r+0x3fc>
   49030:	d8c00317 	ldw	r3,12(sp)
   49034:	8080040c 	andi	r2,r16,16
   49038:	1d800017 	ldw	r22,0(r3)
   4903c:	18c00104 	addi	r3,r3,4
   49040:	d8c00315 	stw	r3,12(sp)
   49044:	1000251e 	bne	r2,zero,490dc <___vfiprintf_internal_r+0x724>
   49048:	8080100c 	andi	r2,r16,64
   4904c:	10002326 	beq	r2,zero,490dc <___vfiprintf_internal_r+0x724>
   49050:	b5bfffcc 	andi	r22,r22,65535
   49054:	b5a0001c 	xori	r22,r22,32768
   49058:	b5a00004 	addi	r22,r22,-32768
   4905c:	b02bd7fa 	srai	r21,r22,31
   49060:	a805883a 	mov	r2,r21
   49064:	103f930e 	bge	r2,zero,48eb4 <___vfiprintf_internal_r+0x4fc>
   49068:	00800b44 	movi	r2,45
   4906c:	b006c03a 	cmpne	r3,r22,zero
   49070:	056bc83a 	sub	r21,zero,r21
   49074:	d8800945 	stb	r2,37(sp)
   49078:	48bfffd8 	cmpnei	r2,r9,-1
   4907c:	a8ebc83a 	sub	r21,r21,r3
   49080:	05adc83a 	sub	r22,zero,r22
   49084:	10000226 	beq	r2,zero,49090 <___vfiprintf_internal_r+0x6d8>
   49088:	00bfdfc4 	movi	r2,-129
   4908c:	80a0703a 	and	r16,r16,r2
   49090:	03000b44 	movi	r12,45
   49094:	a800d41e 	bne	r21,zero,493e8 <___vfiprintf_internal_r+0xa30>
   49098:	b08002a8 	cmpgeui	r2,r22,10
   4909c:	1000d21e 	bne	r2,zero,493e8 <___vfiprintf_internal_r+0xa30>
   490a0:	b5800c04 	addi	r22,r22,48
   490a4:	dd8016c5 	stb	r22,91(sp)
   490a8:	482d883a 	mov	r22,r9
   490ac:	02400116 	blt	zero,r9,490b4 <___vfiprintf_internal_r+0x6fc>
   490b0:	05800044 	movi	r22,1
   490b4:	05400044 	movi	r21,1
   490b8:	df0016c4 	addi	fp,sp,91
   490bc:	63003fcc 	andi	r12,r12,255
   490c0:	6300201c 	xori	r12,r12,128
   490c4:	633fe004 	addi	r12,r12,-128
   490c8:	603ef226 	beq	r12,zero,48c94 <___vfiprintf_internal_r+0x2dc>
   490cc:	b5800044 	addi	r22,r22,1
   490d0:	003ef006 	br	48c94 <___vfiprintf_internal_r+0x2dc>
   490d4:	00457840 	call	45784 <__sinit>
   490d8:	003e4906 	br	48a00 <___vfiprintf_internal_r+0x48>
   490dc:	b02bd7fa 	srai	r21,r22,31
   490e0:	a805883a 	mov	r2,r21
   490e4:	003f7206 	br	48eb0 <___vfiprintf_internal_r+0x4f8>
   490e8:	d8800317 	ldw	r2,12(sp)
   490ec:	14400017 	ldw	r17,0(r2)
   490f0:	17000104 	addi	fp,r2,4
   490f4:	8802200e 	bge	r17,zero,49978 <___vfiprintf_internal_r+0xfc0>
   490f8:	0463c83a 	sub	r17,zero,r17
   490fc:	df000315 	stw	fp,12(sp)
   49100:	a0800007 	ldb	r2,0(r20)
   49104:	84000114 	ori	r16,r16,4
   49108:	003e6d06 	br	48ac0 <___vfiprintf_internal_r+0x108>
   4910c:	a0800007 	ldb	r2,0(r20)
   49110:	a1000044 	addi	r4,r20,1
   49114:	10c00aa0 	cmpeqi	r3,r2,42
   49118:	1802b11e 	bne	r3,zero,49be0 <___vfiprintf_internal_r+0x1228>
   4911c:	10fff404 	addi	r3,r2,-48
   49120:	194002b0 	cmpltui	r5,r3,10
   49124:	2029883a 	mov	r20,r4
   49128:	0013883a 	mov	r9,zero
   4912c:	283e6526 	beq	r5,zero,48ac4 <___vfiprintf_internal_r+0x10c>
   49130:	a0800007 	ldb	r2,0(r20)
   49134:	4a4002a4 	muli	r9,r9,10
   49138:	a5000044 	addi	r20,r20,1
   4913c:	48d3883a 	add	r9,r9,r3
   49140:	10fff404 	addi	r3,r2,-48
   49144:	190002b0 	cmpltui	r4,r3,10
   49148:	203ff91e 	bne	r4,zero,49130 <___vfiprintf_internal_r+0x778>
   4914c:	003e5d06 	br	48ac4 <___vfiprintf_internal_r+0x10c>
   49150:	a0800007 	ldb	r2,0(r20)
   49154:	84002014 	ori	r16,r16,128
   49158:	003e5906 	br	48ac0 <___vfiprintf_internal_r+0x108>
   4915c:	00c00ac4 	movi	r3,43
   49160:	a0800007 	ldb	r2,0(r20)
   49164:	d8c00945 	stb	r3,37(sp)
   49168:	003e5506 	br	48ac0 <___vfiprintf_internal_r+0x108>
   4916c:	a0800007 	ldb	r2,0(r20)
   49170:	84000054 	ori	r16,r16,1
   49174:	003e5206 	br	48ac0 <___vfiprintf_internal_r+0x108>
   49178:	d8c00947 	ldb	r3,37(sp)
   4917c:	a0800003 	ldbu	r2,0(r20)
   49180:	1800091e 	bne	r3,zero,491a8 <___vfiprintf_internal_r+0x7f0>
   49184:	10803fcc 	andi	r2,r2,255
   49188:	00c00804 	movi	r3,32
   4918c:	1080201c 	xori	r2,r2,128
   49190:	d8c00945 	stb	r3,37(sp)
   49194:	10bfe004 	addi	r2,r2,-128
   49198:	003e4906 	br	48ac0 <___vfiprintf_internal_r+0x108>
   4919c:	a0800043 	ldbu	r2,1(r20)
   491a0:	84000814 	ori	r16,r16,32
   491a4:	a5000044 	addi	r20,r20,1
   491a8:	10803fcc 	andi	r2,r2,255
   491ac:	1080201c 	xori	r2,r2,128
   491b0:	10bfe004 	addi	r2,r2,-128
   491b4:	003e4206 	br	48ac0 <___vfiprintf_internal_r+0x108>
   491b8:	8080080c 	andi	r2,r16,32
   491bc:	1001f826 	beq	r2,zero,499a0 <___vfiprintf_internal_r+0xfe8>
   491c0:	d9000117 	ldw	r4,4(sp)
   491c4:	d8800317 	ldw	r2,12(sp)
   491c8:	2007d7fa 	srai	r3,r4,31
   491cc:	10800017 	ldw	r2,0(r2)
   491d0:	11000015 	stw	r4,0(r2)
   491d4:	10c00115 	stw	r3,4(r2)
   491d8:	d8800317 	ldw	r2,12(sp)
   491dc:	10800104 	addi	r2,r2,4
   491e0:	d8800315 	stw	r2,12(sp)
   491e4:	003e2006 	br	48a68 <___vfiprintf_internal_r+0xb0>
   491e8:	a0800007 	ldb	r2,0(r20)
   491ec:	10c01b18 	cmpnei	r3,r2,108
   491f0:	183fea26 	beq	r3,zero,4919c <___vfiprintf_internal_r+0x7e4>
   491f4:	84000414 	ori	r16,r16,16
   491f8:	003e3106 	br	48ac0 <___vfiprintf_internal_r+0x108>
   491fc:	a0800007 	ldb	r2,0(r20)
   49200:	84001014 	ori	r16,r16,64
   49204:	003e2e06 	br	48ac0 <___vfiprintf_internal_r+0x108>
   49208:	d8c00317 	ldw	r3,12(sp)
   4920c:	d8000945 	stb	zero,37(sp)
   49210:	05800044 	movi	r22,1
   49214:	18800017 	ldw	r2,0(r3)
   49218:	18c00104 	addi	r3,r3,4
   4921c:	d8c00315 	stw	r3,12(sp)
   49220:	d8800d05 	stb	r2,52(sp)
   49224:	05400044 	movi	r21,1
   49228:	df000d04 	addi	fp,sp,52
   4922c:	003e9806 	br	48c90 <___vfiprintf_internal_r+0x2d8>
   49230:	80800414 	ori	r2,r16,16
   49234:	10c0080c 	andi	r3,r2,32
   49238:	18019126 	beq	r3,zero,49880 <___vfiprintf_internal_r+0xec8>
   4923c:	d8c00317 	ldw	r3,12(sp)
   49240:	d8000945 	stb	zero,37(sp)
   49244:	1d800017 	ldw	r22,0(r3)
   49248:	1d400117 	ldw	r21,4(r3)
   4924c:	18c00204 	addi	r3,r3,8
   49250:	d8c00315 	stw	r3,12(sp)
   49254:	48ffffd8 	cmpnei	r3,r9,-1
   49258:	18019626 	beq	r3,zero,498b4 <___vfiprintf_internal_r+0xefc>
   4925c:	00c00044 	movi	r3,1
   49260:	043fdfc4 	movi	r16,-129
   49264:	b548b03a 	or	r4,r22,r21
   49268:	1420703a 	and	r16,r2,r16
   4926c:	2000191e 	bne	r4,zero,492d4 <___vfiprintf_internal_r+0x91c>
   49270:	4802221e 	bne	r9,zero,49afc <___vfiprintf_internal_r+0x1144>
   49274:	1801bc1e 	bne	r3,zero,49968 <___vfiprintf_internal_r+0xfb0>
   49278:	1540004c 	andi	r21,r2,1
   4927c:	a801c126 	beq	r21,zero,49984 <___vfiprintf_internal_r+0xfcc>
   49280:	00800c04 	movi	r2,48
   49284:	d88016c5 	stb	r2,91(sp)
   49288:	a82d883a 	mov	r22,r21
   4928c:	df0016c4 	addi	fp,sp,91
   49290:	003e8006 	br	48c94 <___vfiprintf_internal_r+0x2dc>
   49294:	80800414 	ori	r2,r16,16
   49298:	10c0080c 	andi	r3,r2,32
   4929c:	18018826 	beq	r3,zero,498c0 <___vfiprintf_internal_r+0xf08>
   492a0:	d8c00317 	ldw	r3,12(sp)
   492a4:	d8000945 	stb	zero,37(sp)
   492a8:	1d800017 	ldw	r22,0(r3)
   492ac:	1d400117 	ldw	r21,4(r3)
   492b0:	18c00204 	addi	r3,r3,8
   492b4:	d8c00315 	stw	r3,12(sp)
   492b8:	48ffffd8 	cmpnei	r3,r9,-1
   492bc:	18018d26 	beq	r3,zero,498f4 <___vfiprintf_internal_r+0xf3c>
   492c0:	043fdfc4 	movi	r16,-129
   492c4:	b548b03a 	or	r4,r22,r21
   492c8:	0007883a 	mov	r3,zero
   492cc:	1420703a 	and	r16,r2,r16
   492d0:	203fe726 	beq	r4,zero,49270 <___vfiprintf_internal_r+0x8b8>
   492d4:	18800060 	cmpeqi	r2,r3,1
   492d8:	1002511e 	bne	r2,zero,49c20 <___vfiprintf_internal_r+0x1268>
   492dc:	18c000a0 	cmpeqi	r3,r3,2
   492e0:	1801481e 	bne	r3,zero,49804 <___vfiprintf_internal_r+0xe4c>
   492e4:	9839883a 	mov	fp,r19
   492e8:	a808977a 	slli	r4,r21,29
   492ec:	b006d0fa 	srli	r3,r22,3
   492f0:	a82ad0fa 	srli	r21,r21,3
   492f4:	b08001cc 	andi	r2,r22,7
   492f8:	10800c04 	addi	r2,r2,48
   492fc:	20ecb03a 	or	r22,r4,r3
   49300:	e0bfffc5 	stb	r2,-1(fp)
   49304:	b546b03a 	or	r3,r22,r21
   49308:	e00b883a 	mov	r5,fp
   4930c:	e73fffc4 	addi	fp,fp,-1
   49310:	183ff51e 	bne	r3,zero,492e8 <___vfiprintf_internal_r+0x930>
   49314:	80c0004c 	andi	r3,r16,1
   49318:	18014726 	beq	r3,zero,49838 <___vfiprintf_internal_r+0xe80>
   4931c:	10800c18 	cmpnei	r2,r2,48
   49320:	10014526 	beq	r2,zero,49838 <___vfiprintf_internal_r+0xe80>
   49324:	297fff84 	addi	r5,r5,-2
   49328:	00800c04 	movi	r2,48
   4932c:	e0bfffc5 	stb	r2,-1(fp)
   49330:	996bc83a 	sub	r21,r19,r5
   49334:	482d883a 	mov	r22,r9
   49338:	4d41a616 	blt	r9,r21,499d4 <___vfiprintf_internal_r+0x101c>
   4933c:	2839883a 	mov	fp,r5
   49340:	003e5406 	br	48c94 <___vfiprintf_internal_r+0x2dc>
   49344:	d8800317 	ldw	r2,12(sp)
   49348:	d8000945 	stb	zero,37(sp)
   4934c:	17000017 	ldw	fp,0(r2)
   49350:	10c00104 	addi	r3,r2,4
   49354:	e001f026 	beq	fp,zero,49b18 <___vfiprintf_internal_r+0x1160>
   49358:	48bfffe0 	cmpeqi	r2,r9,-1
   4935c:	1001a01e 	bne	r2,zero,499e0 <___vfiprintf_internal_r+0x1028>
   49360:	480d883a 	mov	r6,r9
   49364:	000b883a 	mov	r5,zero
   49368:	e009883a 	mov	r4,fp
   4936c:	d8c00415 	stw	r3,16(sp)
   49370:	da000315 	stw	r8,12(sp)
   49374:	da400215 	stw	r9,8(sp)
   49378:	0046bdc0 	call	46bdc <memchr>
   4937c:	da400217 	ldw	r9,8(sp)
   49380:	da000317 	ldw	r8,12(sp)
   49384:	d8c00417 	ldw	r3,16(sp)
   49388:	1001fe26 	beq	r2,zero,49b84 <___vfiprintf_internal_r+0x11cc>
   4938c:	172bc83a 	sub	r21,r2,fp
   49390:	a82d883a 	mov	r22,r21
   49394:	d8c00315 	stw	r3,12(sp)
   49398:	003e3d06 	br	48c90 <___vfiprintf_internal_r+0x2d8>
   4939c:	a0800007 	ldb	r2,0(r20)
   493a0:	84000814 	ori	r16,r16,32
   493a4:	003dc606 	br	48ac0 <___vfiprintf_internal_r+0x108>
   493a8:	d9000317 	ldw	r4,12(sp)
   493ac:	00de0c04 	movi	r3,30768
   493b0:	01400174 	movhi	r5,5
   493b4:	d8c0098d 	sth	r3,38(sp)
   493b8:	25800017 	ldw	r22,0(r4)
   493bc:	20c00104 	addi	r3,r4,4
   493c0:	d8c00315 	stw	r3,12(sp)
   493c4:	28c04c04 	addi	r3,r5,304
   493c8:	002b883a 	mov	r21,zero
   493cc:	80800094 	ori	r2,r16,2
   493d0:	d8c00515 	stw	r3,20(sp)
   493d4:	d8000945 	stb	zero,37(sp)
   493d8:	48ffffd8 	cmpnei	r3,r9,-1
   493dc:	18010826 	beq	r3,zero,49800 <___vfiprintf_internal_r+0xe48>
   493e0:	00c00084 	movi	r3,2
   493e4:	003f9e06 	br	49260 <___vfiprintf_internal_r+0x8a8>
   493e8:	9839883a 	mov	fp,r19
   493ec:	b009883a 	mov	r4,r22
   493f0:	a80b883a 	mov	r5,r21
   493f4:	01800284 	movi	r6,10
   493f8:	000f883a 	mov	r7,zero
   493fc:	db000615 	stw	r12,24(sp)
   49400:	da000415 	stw	r8,16(sp)
   49404:	da400215 	stw	r9,8(sp)
   49408:	004b3880 	call	4b388 <__umoddi3>
   4940c:	10800c04 	addi	r2,r2,48
   49410:	b009883a 	mov	r4,r22
   49414:	a80b883a 	mov	r5,r21
   49418:	e0bfffc5 	stb	r2,-1(fp)
   4941c:	01800284 	movi	r6,10
   49420:	000f883a 	mov	r7,zero
   49424:	004ae380 	call	4ae38 <__udivdi3>
   49428:	a809883a 	mov	r4,r21
   4942c:	b00b883a 	mov	r5,r22
   49430:	da400217 	ldw	r9,8(sp)
   49434:	da000417 	ldw	r8,16(sp)
   49438:	db000617 	ldw	r12,24(sp)
   4943c:	e73fffc4 	addi	fp,fp,-1
   49440:	102d883a 	mov	r22,r2
   49444:	182b883a 	mov	r21,r3
   49448:	203fe81e 	bne	r4,zero,493ec <___vfiprintf_internal_r+0xa34>
   4944c:	294002a8 	cmpgeui	r5,r5,10
   49450:	283fe61e 	bne	r5,zero,493ec <___vfiprintf_internal_r+0xa34>
   49454:	9f2bc83a 	sub	r21,r19,fp
   49458:	482d883a 	mov	r22,r9
   4945c:	4d7f170e 	bge	r9,r21,490bc <___vfiprintf_internal_r+0x704>
   49460:	a82d883a 	mov	r22,r21
   49464:	003f1506 	br	490bc <___vfiprintf_internal_r+0x704>
   49468:	00c00044 	movi	r3,1
   4946c:	a805883a 	mov	r2,r21
   49470:	df001715 	stw	fp,92(sp)
   49474:	dd401815 	stw	r21,96(sp)
   49478:	dd400c15 	stw	r21,48(sp)
   4947c:	d8c00b15 	stw	r3,44(sp)
   49480:	9811883a 	mov	r8,r19
   49484:	42000204 	addi	r8,r8,8
   49488:	003e4606 	br	48da4 <___vfiprintf_internal_r+0x3ec>
   4948c:	01400044 	movi	r5,1
   49490:	0009883a 	mov	r4,zero
   49494:	9811883a 	mov	r8,r19
   49498:	003ebc06 	br	48f8c <___vfiprintf_internal_r+0x5d4>
   4949c:	8d8fc83a 	sub	r7,r17,r22
   494a0:	01fe2f0e 	bge	zero,r7,48d60 <___vfiprintf_internal_r+0x3a8>
   494a4:	38c00450 	cmplti	r3,r7,17
   494a8:	1801c01e 	bne	r3,zero,49bac <___vfiprintf_internal_r+0x11f4>
   494ac:	00c00174 	movhi	r3,5
   494b0:	18c0cc04 	addi	r3,r3,816
   494b4:	d8c00415 	stw	r3,16(sp)
   494b8:	03000404 	movi	r12,16
   494bc:	00000606 	br	494d8 <___vfiprintf_internal_r+0xb20>
   494c0:	21800084 	addi	r6,r4,2
   494c4:	42000204 	addi	r8,r8,8
   494c8:	1809883a 	mov	r4,r3
   494cc:	39fffc04 	addi	r7,r7,-16
   494d0:	38c00448 	cmpgei	r3,r7,17
   494d4:	18001b26 	beq	r3,zero,49544 <___vfiprintf_internal_r+0xb8c>
   494d8:	d9400417 	ldw	r5,16(sp)
   494dc:	20c00044 	addi	r3,r4,1
   494e0:	10800404 	addi	r2,r2,16
   494e4:	41400015 	stw	r5,0(r8)
   494e8:	43000115 	stw	r12,4(r8)
   494ec:	d8800c15 	stw	r2,48(sp)
   494f0:	d8c00b15 	stw	r3,44(sp)
   494f4:	19400208 	cmpgei	r5,r3,8
   494f8:	283ff126 	beq	r5,zero,494c0 <___vfiprintf_internal_r+0xb08>
   494fc:	d9000017 	ldw	r4,0(sp)
   49500:	d9800a04 	addi	r6,sp,40
   49504:	900b883a 	mov	r5,r18
   49508:	10005c26 	beq	r2,zero,4967c <___vfiprintf_internal_r+0xcc4>
   4950c:	d9c00615 	stw	r7,24(sp)
   49510:	da400215 	stw	r9,8(sp)
   49514:	00488ac0 	call	488ac <__sprint_r.part.0>
   49518:	103e321e 	bne	r2,zero,48de4 <___vfiprintf_internal_r+0x42c>
   4951c:	d9c00617 	ldw	r7,24(sp)
   49520:	d9000b17 	ldw	r4,44(sp)
   49524:	d8800c17 	ldw	r2,48(sp)
   49528:	39fffc04 	addi	r7,r7,-16
   4952c:	38c00448 	cmpgei	r3,r7,17
   49530:	da400217 	ldw	r9,8(sp)
   49534:	9811883a 	mov	r8,r19
   49538:	21800044 	addi	r6,r4,1
   4953c:	03000404 	movi	r12,16
   49540:	183fe51e 	bne	r3,zero,494d8 <___vfiprintf_internal_r+0xb20>
   49544:	d8c00417 	ldw	r3,16(sp)
   49548:	11c5883a 	add	r2,r2,r7
   4954c:	41c00115 	stw	r7,4(r8)
   49550:	40c00015 	stw	r3,0(r8)
   49554:	d8800c15 	stw	r2,48(sp)
   49558:	d9800b15 	stw	r6,44(sp)
   4955c:	30c00208 	cmpgei	r3,r6,8
   49560:	18010b26 	beq	r3,zero,49990 <___vfiprintf_internal_r+0xfd8>
   49564:	10017826 	beq	r2,zero,49b48 <___vfiprintf_internal_r+0x1190>
   49568:	d9000017 	ldw	r4,0(sp)
   4956c:	d9800a04 	addi	r6,sp,40
   49570:	900b883a 	mov	r5,r18
   49574:	da400215 	stw	r9,8(sp)
   49578:	00488ac0 	call	488ac <__sprint_r.part.0>
   4957c:	103e191e 	bne	r2,zero,48de4 <___vfiprintf_internal_r+0x42c>
   49580:	da400217 	ldw	r9,8(sp)
   49584:	d9000b17 	ldw	r4,44(sp)
   49588:	d8800c17 	ldw	r2,48(sp)
   4958c:	4d53c83a 	sub	r9,r9,r21
   49590:	9811883a 	mov	r8,r19
   49594:	21400044 	addi	r5,r4,1
   49598:	027df30e 	bge	zero,r9,48d68 <___vfiprintf_internal_r+0x3b0>
   4959c:	48c00450 	cmplti	r3,r9,17
   495a0:	1801651e 	bne	r3,zero,49b38 <___vfiprintf_internal_r+0x1180>
   495a4:	ddc00415 	stw	r23,16(sp)
   495a8:	01c00404 	movi	r7,16
   495ac:	00000606 	br	495c8 <___vfiprintf_internal_r+0xc10>
   495b0:	21400084 	addi	r5,r4,2
   495b4:	42000204 	addi	r8,r8,8
   495b8:	1809883a 	mov	r4,r3
   495bc:	4a7ffc04 	addi	r9,r9,-16
   495c0:	48c00448 	cmpgei	r3,r9,17
   495c4:	18001826 	beq	r3,zero,49628 <___vfiprintf_internal_r+0xc70>
   495c8:	20c00044 	addi	r3,r4,1
   495cc:	10800404 	addi	r2,r2,16
   495d0:	45c00015 	stw	r23,0(r8)
   495d4:	41c00115 	stw	r7,4(r8)
   495d8:	d8800c15 	stw	r2,48(sp)
   495dc:	d8c00b15 	stw	r3,44(sp)
   495e0:	19400208 	cmpgei	r5,r3,8
   495e4:	283ff226 	beq	r5,zero,495b0 <___vfiprintf_internal_r+0xbf8>
   495e8:	d9000017 	ldw	r4,0(sp)
   495ec:	d9800a04 	addi	r6,sp,40
   495f0:	900b883a 	mov	r5,r18
   495f4:	10001726 	beq	r2,zero,49654 <___vfiprintf_internal_r+0xc9c>
   495f8:	da400215 	stw	r9,8(sp)
   495fc:	00488ac0 	call	488ac <__sprint_r.part.0>
   49600:	103df81e 	bne	r2,zero,48de4 <___vfiprintf_internal_r+0x42c>
   49604:	da400217 	ldw	r9,8(sp)
   49608:	d9000b17 	ldw	r4,44(sp)
   4960c:	d8800c17 	ldw	r2,48(sp)
   49610:	4a7ffc04 	addi	r9,r9,-16
   49614:	48c00448 	cmpgei	r3,r9,17
   49618:	9811883a 	mov	r8,r19
   4961c:	21400044 	addi	r5,r4,1
   49620:	01c00404 	movi	r7,16
   49624:	183fe81e 	bne	r3,zero,495c8 <___vfiprintf_internal_r+0xc10>
   49628:	d8c00417 	ldw	r3,16(sp)
   4962c:	1245883a 	add	r2,r2,r9
   49630:	42400115 	stw	r9,4(r8)
   49634:	40c00015 	stw	r3,0(r8)
   49638:	d8800c15 	stw	r2,48(sp)
   4963c:	d9400b15 	stw	r5,44(sp)
   49640:	28c00208 	cmpgei	r3,r5,8
   49644:	1800811e 	bne	r3,zero,4984c <___vfiprintf_internal_r+0xe94>
   49648:	42000204 	addi	r8,r8,8
   4964c:	29400044 	addi	r5,r5,1
   49650:	003dc506 	br	48d68 <___vfiprintf_internal_r+0x3b0>
   49654:	01400044 	movi	r5,1
   49658:	0009883a 	mov	r4,zero
   4965c:	9811883a 	mov	r8,r19
   49660:	003fd606 	br	495bc <___vfiprintf_internal_r+0xc04>
   49664:	d9000017 	ldw	r4,0(sp)
   49668:	d9800a04 	addi	r6,sp,40
   4966c:	900b883a 	mov	r5,r18
   49670:	00488ac0 	call	488ac <__sprint_r.part.0>
   49674:	103dd526 	beq	r2,zero,48dcc <___vfiprintf_internal_r+0x414>
   49678:	003dda06 	br	48de4 <___vfiprintf_internal_r+0x42c>
   4967c:	01800044 	movi	r6,1
   49680:	0009883a 	mov	r4,zero
   49684:	9811883a 	mov	r8,r19
   49688:	003f9006 	br	494cc <___vfiprintf_internal_r+0xb14>
   4968c:	10001026 	beq	r2,zero,496d0 <___vfiprintf_internal_r+0xd18>
   49690:	d9000017 	ldw	r4,0(sp)
   49694:	d9800a04 	addi	r6,sp,40
   49698:	900b883a 	mov	r5,r18
   4969c:	da400615 	stw	r9,24(sp)
   496a0:	db000415 	stw	r12,16(sp)
   496a4:	db400215 	stw	r13,8(sp)
   496a8:	00488ac0 	call	488ac <__sprint_r.part.0>
   496ac:	103dcd1e 	bne	r2,zero,48de4 <___vfiprintf_internal_r+0x42c>
   496b0:	d9000b17 	ldw	r4,44(sp)
   496b4:	d8800c17 	ldw	r2,48(sp)
   496b8:	da400617 	ldw	r9,24(sp)
   496bc:	db000417 	ldw	r12,16(sp)
   496c0:	db400217 	ldw	r13,8(sp)
   496c4:	9811883a 	mov	r8,r19
   496c8:	21400044 	addi	r5,r4,1
   496cc:	003d8a06 	br	48cf8 <___vfiprintf_internal_r+0x340>
   496d0:	6800bc26 	beq	r13,zero,499c4 <___vfiprintf_internal_r+0x100c>
   496d4:	d8800984 	addi	r2,sp,38
   496d8:	d8801715 	stw	r2,92(sp)
   496dc:	00800084 	movi	r2,2
   496e0:	d8801815 	stw	r2,96(sp)
   496e4:	01400044 	movi	r5,1
   496e8:	9811883a 	mov	r8,r19
   496ec:	2809883a 	mov	r4,r5
   496f0:	42000204 	addi	r8,r8,8
   496f4:	29400044 	addi	r5,r5,1
   496f8:	003d9706 	br	48d58 <___vfiprintf_internal_r+0x3a0>
   496fc:	19400450 	cmplti	r5,r3,17
   49700:	01c00174 	movhi	r7,5
   49704:	2801231e 	bne	r5,zero,49b94 <___vfiprintf_internal_r+0x11dc>
   49708:	39c0d004 	addi	r7,r7,832
   4970c:	03800404 	movi	r14,16
   49710:	00000706 	br	49730 <___vfiprintf_internal_r+0xd78>
   49714:	23c00084 	addi	r15,r4,2
   49718:	42000204 	addi	r8,r8,8
   4971c:	3009883a 	mov	r4,r6
   49720:	18fffc04 	addi	r3,r3,-16
   49724:	19400448 	cmpgei	r5,r3,17
   49728:	28002026 	beq	r5,zero,497ac <___vfiprintf_internal_r+0xdf4>
   4972c:	21800044 	addi	r6,r4,1
   49730:	10800404 	addi	r2,r2,16
   49734:	41c00015 	stw	r7,0(r8)
   49738:	43800115 	stw	r14,4(r8)
   4973c:	d8800c15 	stw	r2,48(sp)
   49740:	d9800b15 	stw	r6,44(sp)
   49744:	31400208 	cmpgei	r5,r6,8
   49748:	283ff226 	beq	r5,zero,49714 <___vfiprintf_internal_r+0xd5c>
   4974c:	d9000017 	ldw	r4,0(sp)
   49750:	d9800a04 	addi	r6,sp,40
   49754:	900b883a 	mov	r5,r18
   49758:	10001f26 	beq	r2,zero,497d8 <___vfiprintf_internal_r+0xe20>
   4975c:	d9c00815 	stw	r7,32(sp)
   49760:	d8c00715 	stw	r3,28(sp)
   49764:	da400615 	stw	r9,24(sp)
   49768:	db000415 	stw	r12,16(sp)
   4976c:	db400215 	stw	r13,8(sp)
   49770:	00488ac0 	call	488ac <__sprint_r.part.0>
   49774:	103d9b1e 	bne	r2,zero,48de4 <___vfiprintf_internal_r+0x42c>
   49778:	d8c00717 	ldw	r3,28(sp)
   4977c:	d9000b17 	ldw	r4,44(sp)
   49780:	d8800c17 	ldw	r2,48(sp)
   49784:	18fffc04 	addi	r3,r3,-16
   49788:	19400448 	cmpgei	r5,r3,17
   4978c:	d9c00817 	ldw	r7,32(sp)
   49790:	da400617 	ldw	r9,24(sp)
   49794:	db000417 	ldw	r12,16(sp)
   49798:	db400217 	ldw	r13,8(sp)
   4979c:	9811883a 	mov	r8,r19
   497a0:	23c00044 	addi	r15,r4,1
   497a4:	03800404 	movi	r14,16
   497a8:	283fe01e 	bne	r5,zero,4972c <___vfiprintf_internal_r+0xd74>
   497ac:	10c5883a 	add	r2,r2,r3
   497b0:	40c00115 	stw	r3,4(r8)
   497b4:	41c00015 	stw	r7,0(r8)
   497b8:	d8800c15 	stw	r2,48(sp)
   497bc:	dbc00b15 	stw	r15,44(sp)
   497c0:	78c00208 	cmpgei	r3,r15,8
   497c4:	1800511e 	bne	r3,zero,4990c <___vfiprintf_internal_r+0xf54>
   497c8:	42000204 	addi	r8,r8,8
   497cc:	79400044 	addi	r5,r15,1
   497d0:	7809883a 	mov	r4,r15
   497d4:	003d3a06 	br	48cc0 <___vfiprintf_internal_r+0x308>
   497d8:	0009883a 	mov	r4,zero
   497dc:	03c00044 	movi	r15,1
   497e0:	9811883a 	mov	r8,r19
   497e4:	003fce06 	br	49720 <___vfiprintf_internal_r+0xd68>
   497e8:	8d80010e 	bge	r17,r22,497f0 <___vfiprintf_internal_r+0xe38>
   497ec:	b023883a 	mov	r17,r22
   497f0:	d8800117 	ldw	r2,4(sp)
   497f4:	1445883a 	add	r2,r2,r17
   497f8:	d8800115 	stw	r2,4(sp)
   497fc:	003d7306 	br	48dcc <___vfiprintf_internal_r+0x414>
   49800:	1021883a 	mov	r16,r2
   49804:	9839883a 	mov	fp,r19
   49808:	d9000517 	ldw	r4,20(sp)
   4980c:	b08003cc 	andi	r2,r22,15
   49810:	a806973a 	slli	r3,r21,28
   49814:	b02cd13a 	srli	r22,r22,4
   49818:	2085883a 	add	r2,r4,r2
   4981c:	10800003 	ldbu	r2,0(r2)
   49820:	a82ad13a 	srli	r21,r21,4
   49824:	1dacb03a 	or	r22,r3,r22
   49828:	e0bfffc5 	stb	r2,-1(fp)
   4982c:	b544b03a 	or	r2,r22,r21
   49830:	e73fffc4 	addi	fp,fp,-1
   49834:	103ff41e 	bne	r2,zero,49808 <___vfiprintf_internal_r+0xe50>
   49838:	9f2bc83a 	sub	r21,r19,fp
   4983c:	482d883a 	mov	r22,r9
   49840:	4d7d140e 	bge	r9,r21,48c94 <___vfiprintf_internal_r+0x2dc>
   49844:	a82d883a 	mov	r22,r21
   49848:	003d1206 	br	48c94 <___vfiprintf_internal_r+0x2dc>
   4984c:	103f0626 	beq	r2,zero,49468 <___vfiprintf_internal_r+0xab0>
   49850:	d9000017 	ldw	r4,0(sp)
   49854:	d9800a04 	addi	r6,sp,40
   49858:	900b883a 	mov	r5,r18
   4985c:	00488ac0 	call	488ac <__sprint_r.part.0>
   49860:	103d601e 	bne	r2,zero,48de4 <___vfiprintf_internal_r+0x42c>
   49864:	d9400b17 	ldw	r5,44(sp)
   49868:	d8800c17 	ldw	r2,48(sp)
   4986c:	9811883a 	mov	r8,r19
   49870:	29400044 	addi	r5,r5,1
   49874:	003d3c06 	br	48d68 <___vfiprintf_internal_r+0x3b0>
   49878:	d8000b15 	stw	zero,44(sp)
   4987c:	003db106 	br	48f44 <___vfiprintf_internal_r+0x58c>
   49880:	d9000317 	ldw	r4,12(sp)
   49884:	10c0040c 	andi	r3,r2,16
   49888:	25800017 	ldw	r22,0(r4)
   4988c:	21000104 	addi	r4,r4,4
   49890:	d9000315 	stw	r4,12(sp)
   49894:	1800031e 	bne	r3,zero,498a4 <___vfiprintf_internal_r+0xeec>
   49898:	10c0100c 	andi	r3,r2,64
   4989c:	18000126 	beq	r3,zero,498a4 <___vfiprintf_internal_r+0xeec>
   498a0:	b5bfffcc 	andi	r22,r22,65535
   498a4:	d8000945 	stb	zero,37(sp)
   498a8:	48ffffd8 	cmpnei	r3,r9,-1
   498ac:	002b883a 	mov	r21,zero
   498b0:	183e6a1e 	bne	r3,zero,4925c <___vfiprintf_internal_r+0x8a4>
   498b4:	1021883a 	mov	r16,r2
   498b8:	0019883a 	mov	r12,zero
   498bc:	003df506 	br	49094 <___vfiprintf_internal_r+0x6dc>
   498c0:	d9000317 	ldw	r4,12(sp)
   498c4:	10c0040c 	andi	r3,r2,16
   498c8:	25800017 	ldw	r22,0(r4)
   498cc:	21000104 	addi	r4,r4,4
   498d0:	d9000315 	stw	r4,12(sp)
   498d4:	1800031e 	bne	r3,zero,498e4 <___vfiprintf_internal_r+0xf2c>
   498d8:	10c0100c 	andi	r3,r2,64
   498dc:	18000126 	beq	r3,zero,498e4 <___vfiprintf_internal_r+0xf2c>
   498e0:	b5bfffcc 	andi	r22,r22,65535
   498e4:	d8000945 	stb	zero,37(sp)
   498e8:	48ffffd8 	cmpnei	r3,r9,-1
   498ec:	002b883a 	mov	r21,zero
   498f0:	183e731e 	bne	r3,zero,492c0 <___vfiprintf_internal_r+0x908>
   498f4:	1021883a 	mov	r16,r2
   498f8:	003e7a06 	br	492e4 <___vfiprintf_internal_r+0x92c>
   498fc:	01400044 	movi	r5,1
   49900:	0009883a 	mov	r4,zero
   49904:	9811883a 	mov	r8,r19
   49908:	003d1306 	br	48d58 <___vfiprintf_internal_r+0x3a0>
   4990c:	10005726 	beq	r2,zero,49a6c <___vfiprintf_internal_r+0x10b4>
   49910:	d9000017 	ldw	r4,0(sp)
   49914:	d9800a04 	addi	r6,sp,40
   49918:	900b883a 	mov	r5,r18
   4991c:	da400615 	stw	r9,24(sp)
   49920:	db000415 	stw	r12,16(sp)
   49924:	db400215 	stw	r13,8(sp)
   49928:	00488ac0 	call	488ac <__sprint_r.part.0>
   4992c:	103d2d1e 	bne	r2,zero,48de4 <___vfiprintf_internal_r+0x42c>
   49930:	d9000b17 	ldw	r4,44(sp)
   49934:	d8800c17 	ldw	r2,48(sp)
   49938:	da400617 	ldw	r9,24(sp)
   4993c:	db000417 	ldw	r12,16(sp)
   49940:	db400217 	ldw	r13,8(sp)
   49944:	9811883a 	mov	r8,r19
   49948:	21400044 	addi	r5,r4,1
   4994c:	003cdc06 	br	48cc0 <___vfiprintf_internal_r+0x308>
   49950:	d8000945 	stb	zero,37(sp)
   49954:	48bfffd8 	cmpnei	r2,r9,-1
   49958:	103faa26 	beq	r2,zero,49804 <___vfiprintf_internal_r+0xe4c>
   4995c:	00bfdfc4 	movi	r2,-129
   49960:	80a0703a 	and	r16,r16,r2
   49964:	4800621e 	bne	r9,zero,49af0 <___vfiprintf_internal_r+0x1138>
   49968:	002d883a 	mov	r22,zero
   4996c:	002b883a 	mov	r21,zero
   49970:	9839883a 	mov	fp,r19
   49974:	003cc706 	br	48c94 <___vfiprintf_internal_r+0x2dc>
   49978:	a0800007 	ldb	r2,0(r20)
   4997c:	df000315 	stw	fp,12(sp)
   49980:	003c4f06 	br	48ac0 <___vfiprintf_internal_r+0x108>
   49984:	002d883a 	mov	r22,zero
   49988:	9839883a 	mov	fp,r19
   4998c:	003cc106 	br	48c94 <___vfiprintf_internal_r+0x2dc>
   49990:	42000204 	addi	r8,r8,8
   49994:	31400044 	addi	r5,r6,1
   49998:	3009883a 	mov	r4,r6
   4999c:	003cf006 	br	48d60 <___vfiprintf_internal_r+0x3a8>
   499a0:	8080040c 	andi	r2,r16,16
   499a4:	10003e1e 	bne	r2,zero,49aa0 <___vfiprintf_internal_r+0x10e8>
   499a8:	8400100c 	andi	r16,r16,64
   499ac:	80003c26 	beq	r16,zero,49aa0 <___vfiprintf_internal_r+0x10e8>
   499b0:	d8800317 	ldw	r2,12(sp)
   499b4:	d8c00117 	ldw	r3,4(sp)
   499b8:	10800017 	ldw	r2,0(r2)
   499bc:	10c0000d 	sth	r3,0(r2)
   499c0:	003e0506 	br	491d8 <___vfiprintf_internal_r+0x820>
   499c4:	0009883a 	mov	r4,zero
   499c8:	01400044 	movi	r5,1
   499cc:	9811883a 	mov	r8,r19
   499d0:	003ce106 	br	48d58 <___vfiprintf_internal_r+0x3a0>
   499d4:	a82d883a 	mov	r22,r21
   499d8:	2839883a 	mov	fp,r5
   499dc:	003cad06 	br	48c94 <___vfiprintf_internal_r+0x2dc>
   499e0:	e009883a 	mov	r4,fp
   499e4:	da000215 	stw	r8,8(sp)
   499e8:	d8c00315 	stw	r3,12(sp)
   499ec:	00411140 	call	41114 <strlen>
   499f0:	da000217 	ldw	r8,8(sp)
   499f4:	102b883a 	mov	r21,r2
   499f8:	102d883a 	mov	r22,r2
   499fc:	003ca406 	br	48c90 <___vfiprintf_internal_r+0x2d8>
   49a00:	8005883a 	mov	r2,r16
   49a04:	003e0b06 	br	49234 <___vfiprintf_internal_r+0x87c>
   49a08:	00c00174 	movhi	r3,5
   49a0c:	18c04704 	addi	r3,r3,284
   49a10:	d8c00515 	stw	r3,20(sp)
   49a14:	80c0080c 	andi	r3,r16,32
   49a18:	18002826 	beq	r3,zero,49abc <___vfiprintf_internal_r+0x1104>
   49a1c:	d8c00317 	ldw	r3,12(sp)
   49a20:	1d800017 	ldw	r22,0(r3)
   49a24:	1d400117 	ldw	r21,4(r3)
   49a28:	18c00204 	addi	r3,r3,8
   49a2c:	d8c00315 	stw	r3,12(sp)
   49a30:	80c0004c 	andi	r3,r16,1
   49a34:	18001f26 	beq	r3,zero,49ab4 <___vfiprintf_internal_r+0x10fc>
   49a38:	b546b03a 	or	r3,r22,r21
   49a3c:	183fc426 	beq	r3,zero,49950 <___vfiprintf_internal_r+0xf98>
   49a40:	00c00c04 	movi	r3,48
   49a44:	d8c00985 	stb	r3,38(sp)
   49a48:	d88009c5 	stb	r2,39(sp)
   49a4c:	d8000945 	stb	zero,37(sp)
   49a50:	48bfffd8 	cmpnei	r2,r9,-1
   49a54:	80c00094 	ori	r3,r16,2
   49a58:	10006d1e 	bne	r2,zero,49c10 <___vfiprintf_internal_r+0x1258>
   49a5c:	1821883a 	mov	r16,r3
   49a60:	003f6806 	br	49804 <___vfiprintf_internal_r+0xe4c>
   49a64:	8005883a 	mov	r2,r16
   49a68:	003e0b06 	br	49298 <___vfiprintf_internal_r+0x8e0>
   49a6c:	d8c00947 	ldb	r3,37(sp)
   49a70:	18003b26 	beq	r3,zero,49b60 <___vfiprintf_internal_r+0x11a8>
   49a74:	d8800944 	addi	r2,sp,37
   49a78:	d8801715 	stw	r2,92(sp)
   49a7c:	00800044 	movi	r2,1
   49a80:	d8801815 	stw	r2,96(sp)
   49a84:	01400044 	movi	r5,1
   49a88:	9811883a 	mov	r8,r19
   49a8c:	003c9706 	br	48cec <___vfiprintf_internal_r+0x334>
   49a90:	00c00174 	movhi	r3,5
   49a94:	18c04c04 	addi	r3,r3,304
   49a98:	d8c00515 	stw	r3,20(sp)
   49a9c:	003fdd06 	br	49a14 <___vfiprintf_internal_r+0x105c>
   49aa0:	d8800317 	ldw	r2,12(sp)
   49aa4:	d8c00117 	ldw	r3,4(sp)
   49aa8:	10800017 	ldw	r2,0(r2)
   49aac:	10c00015 	stw	r3,0(r2)
   49ab0:	003dc906 	br	491d8 <___vfiprintf_internal_r+0x820>
   49ab4:	8005883a 	mov	r2,r16
   49ab8:	003e4606 	br	493d4 <___vfiprintf_internal_r+0xa1c>
   49abc:	d9000317 	ldw	r4,12(sp)
   49ac0:	80c0040c 	andi	r3,r16,16
   49ac4:	25800017 	ldw	r22,0(r4)
   49ac8:	21000104 	addi	r4,r4,4
   49acc:	d9000315 	stw	r4,12(sp)
   49ad0:	1800051e 	bne	r3,zero,49ae8 <___vfiprintf_internal_r+0x1130>
   49ad4:	80c0100c 	andi	r3,r16,64
   49ad8:	18000326 	beq	r3,zero,49ae8 <___vfiprintf_internal_r+0x1130>
   49adc:	b5bfffcc 	andi	r22,r22,65535
   49ae0:	002b883a 	mov	r21,zero
   49ae4:	003fd206 	br	49a30 <___vfiprintf_internal_r+0x1078>
   49ae8:	002b883a 	mov	r21,zero
   49aec:	003fd006 	br	49a30 <___vfiprintf_internal_r+0x1078>
   49af0:	002d883a 	mov	r22,zero
   49af4:	002b883a 	mov	r21,zero
   49af8:	003f4206 	br	49804 <___vfiprintf_internal_r+0xe4c>
   49afc:	18800060 	cmpeqi	r2,r3,1
   49b00:	1000341e 	bne	r2,zero,49bd4 <___vfiprintf_internal_r+0x121c>
   49b04:	18c000a0 	cmpeqi	r3,r3,2
   49b08:	183ff91e 	bne	r3,zero,49af0 <___vfiprintf_internal_r+0x1138>
   49b0c:	002d883a 	mov	r22,zero
   49b10:	002b883a 	mov	r21,zero
   49b14:	003df306 	br	492e4 <___vfiprintf_internal_r+0x92c>
   49b18:	488001f0 	cmpltui	r2,r9,7
   49b1c:	482b883a 	mov	r21,r9
   49b20:	10000d26 	beq	r2,zero,49b58 <___vfiprintf_internal_r+0x11a0>
   49b24:	07000174 	movhi	fp,5
   49b28:	a82d883a 	mov	r22,r21
   49b2c:	d8c00315 	stw	r3,12(sp)
   49b30:	e7005104 	addi	fp,fp,324
   49b34:	003c5606 	br	48c90 <___vfiprintf_internal_r+0x2d8>
   49b38:	00c00174 	movhi	r3,5
   49b3c:	18c0cc04 	addi	r3,r3,816
   49b40:	d8c00415 	stw	r3,16(sp)
   49b44:	003eb806 	br	49628 <___vfiprintf_internal_r+0xc70>
   49b48:	01400044 	movi	r5,1
   49b4c:	0009883a 	mov	r4,zero
   49b50:	9811883a 	mov	r8,r19
   49b54:	003c8206 	br	48d60 <___vfiprintf_internal_r+0x3a8>
   49b58:	05400184 	movi	r21,6
   49b5c:	003ff106 	br	49b24 <___vfiprintf_internal_r+0x116c>
   49b60:	0009883a 	mov	r4,zero
   49b64:	01400044 	movi	r5,1
   49b68:	9811883a 	mov	r8,r19
   49b6c:	003c6206 	br	48cf8 <___vfiprintf_internal_r+0x340>
   49b70:	d9000017 	ldw	r4,0(sp)
   49b74:	d9800a04 	addi	r6,sp,40
   49b78:	900b883a 	mov	r5,r18
   49b7c:	00488ac0 	call	488ac <__sprint_r.part.0>
   49b80:	003c9806 	br	48de4 <___vfiprintf_internal_r+0x42c>
   49b84:	482d883a 	mov	r22,r9
   49b88:	d8c00315 	stw	r3,12(sp)
   49b8c:	482b883a 	mov	r21,r9
   49b90:	003c3f06 	br	48c90 <___vfiprintf_internal_r+0x2d8>
   49b94:	301f883a 	mov	r15,r6
   49b98:	39c0d004 	addi	r7,r7,832
   49b9c:	003f0306 	br	497ac <___vfiprintf_internal_r+0xdf4>
   49ba0:	21400044 	addi	r5,r4,1
   49ba4:	39c0d004 	addi	r7,r7,832
   49ba8:	003d1206 	br	48ff4 <___vfiprintf_internal_r+0x63c>
   49bac:	00c00174 	movhi	r3,5
   49bb0:	18c0cc04 	addi	r3,r3,816
   49bb4:	280d883a 	mov	r6,r5
   49bb8:	d8c00415 	stw	r3,16(sp)
   49bbc:	003e6106 	br	49544 <___vfiprintf_internal_r+0xb8c>
   49bc0:	00bfffc4 	movi	r2,-1
   49bc4:	d8800115 	stw	r2,4(sp)
   49bc8:	003c8906 	br	48df0 <___vfiprintf_internal_r+0x438>
   49bcc:	05800c04 	movi	r22,48
   49bd0:	003d3406 	br	490a4 <___vfiprintf_internal_r+0x6ec>
   49bd4:	0019883a 	mov	r12,zero
   49bd8:	05800c04 	movi	r22,48
   49bdc:	003d3106 	br	490a4 <___vfiprintf_internal_r+0x6ec>
   49be0:	d8800317 	ldw	r2,12(sp)
   49be4:	12400017 	ldw	r9,0(r2)
   49be8:	17000104 	addi	fp,r2,4
   49bec:	4800010e 	bge	r9,zero,49bf4 <___vfiprintf_internal_r+0x123c>
   49bf0:	027fffc4 	movi	r9,-1
   49bf4:	a0800043 	ldbu	r2,1(r20)
   49bf8:	df000315 	stw	fp,12(sp)
   49bfc:	2029883a 	mov	r20,r4
   49c00:	10803fcc 	andi	r2,r2,255
   49c04:	1080201c 	xori	r2,r2,128
   49c08:	10bfe004 	addi	r2,r2,-128
   49c0c:	003bac06 	br	48ac0 <___vfiprintf_internal_r+0x108>
   49c10:	00bfdfc4 	movi	r2,-129
   49c14:	8084703a 	and	r2,r16,r2
   49c18:	14000094 	ori	r16,r2,2
   49c1c:	003ef906 	br	49804 <___vfiprintf_internal_r+0xe4c>
   49c20:	0019883a 	mov	r12,zero
   49c24:	003d1b06 	br	49094 <___vfiprintf_internal_r+0x6dc>

00049c28 <__vfiprintf_internal>:
   49c28:	00c00174 	movhi	r3,5
   49c2c:	2005883a 	mov	r2,r4
   49c30:	19087d17 	ldw	r4,8692(r3)
   49c34:	300f883a 	mov	r7,r6
   49c38:	280d883a 	mov	r6,r5
   49c3c:	100b883a 	mov	r5,r2
   49c40:	00489b81 	jmpi	489b8 <___vfiprintf_internal_r>

00049c44 <__sbprintf>:
   49c44:	28c0038b 	ldhu	r3,14(r5)
   49c48:	2880030b 	ldhu	r2,12(r5)
   49c4c:	2ac01917 	ldw	r11,100(r5)
   49c50:	1806943a 	slli	r3,r3,16
   49c54:	2a800717 	ldw	r10,28(r5)
   49c58:	2a400917 	ldw	r9,36(r5)
   49c5c:	defee204 	addi	sp,sp,-1144
   49c60:	10bfff4c 	andi	r2,r2,65533
   49c64:	10c4b03a 	or	r2,r2,r3
   49c68:	da001a04 	addi	r8,sp,104
   49c6c:	00c10004 	movi	r3,1024
   49c70:	dc011a15 	stw	r16,1128(sp)
   49c74:	2821883a 	mov	r16,r5
   49c78:	d80b883a 	mov	r5,sp
   49c7c:	dc811c15 	stw	r18,1136(sp)
   49c80:	dc411b15 	stw	r17,1132(sp)
   49c84:	dfc11d15 	stw	ra,1140(sp)
   49c88:	2025883a 	mov	r18,r4
   49c8c:	dac01915 	stw	r11,100(sp)
   49c90:	d8800315 	stw	r2,12(sp)
   49c94:	da800715 	stw	r10,28(sp)
   49c98:	da400915 	stw	r9,36(sp)
   49c9c:	da000015 	stw	r8,0(sp)
   49ca0:	da000415 	stw	r8,16(sp)
   49ca4:	d8c00215 	stw	r3,8(sp)
   49ca8:	d8c00515 	stw	r3,20(sp)
   49cac:	d8000615 	stw	zero,24(sp)
   49cb0:	00489b80 	call	489b8 <___vfiprintf_internal_r>
   49cb4:	1023883a 	mov	r17,r2
   49cb8:	10000d0e 	bge	r2,zero,49cf0 <__sbprintf+0xac>
   49cbc:	d880030b 	ldhu	r2,12(sp)
   49cc0:	1080100c 	andi	r2,r2,64
   49cc4:	10000326 	beq	r2,zero,49cd4 <__sbprintf+0x90>
   49cc8:	8080030b 	ldhu	r2,12(r16)
   49ccc:	10801014 	ori	r2,r2,64
   49cd0:	8080030d 	sth	r2,12(r16)
   49cd4:	8805883a 	mov	r2,r17
   49cd8:	dfc11d17 	ldw	ra,1140(sp)
   49cdc:	dc811c17 	ldw	r18,1136(sp)
   49ce0:	dc411b17 	ldw	r17,1132(sp)
   49ce4:	dc011a17 	ldw	r16,1128(sp)
   49ce8:	dec11e04 	addi	sp,sp,1144
   49cec:	f800283a 	ret
   49cf0:	d80b883a 	mov	r5,sp
   49cf4:	9009883a 	mov	r4,r18
   49cf8:	004536c0 	call	4536c <_fflush_r>
   49cfc:	103fef26 	beq	r2,zero,49cbc <__sbprintf+0x78>
   49d00:	047fffc4 	movi	r17,-1
   49d04:	003fed06 	br	49cbc <__sbprintf+0x78>

00049d08 <_write_r>:
   49d08:	2807883a 	mov	r3,r5
   49d0c:	defffe04 	addi	sp,sp,-8
   49d10:	dc000015 	stw	r16,0(sp)
   49d14:	300b883a 	mov	r5,r6
   49d18:	00800174 	movhi	r2,5
   49d1c:	380d883a 	mov	r6,r7
   49d20:	2021883a 	mov	r16,r4
   49d24:	1809883a 	mov	r4,r3
   49d28:	dfc00115 	stw	ra,4(sp)
   49d2c:	100f8315 	stw	zero,15884(r2)
   49d30:	004e1080 	call	4e108 <write>
   49d34:	10ffffd8 	cmpnei	r3,r2,-1
   49d38:	18000426 	beq	r3,zero,49d4c <_write_r+0x44>
   49d3c:	dfc00117 	ldw	ra,4(sp)
   49d40:	dc000017 	ldw	r16,0(sp)
   49d44:	dec00204 	addi	sp,sp,8
   49d48:	f800283a 	ret
   49d4c:	00c00174 	movhi	r3,5
   49d50:	18cf8317 	ldw	r3,15884(r3)
   49d54:	183ff926 	beq	r3,zero,49d3c <_write_r+0x34>
   49d58:	80c00015 	stw	r3,0(r16)
   49d5c:	dfc00117 	ldw	ra,4(sp)
   49d60:	dc000017 	ldw	r16,0(sp)
   49d64:	dec00204 	addi	sp,sp,8
   49d68:	f800283a 	ret

00049d6c <_close_r>:
   49d6c:	defffe04 	addi	sp,sp,-8
   49d70:	dc000015 	stw	r16,0(sp)
   49d74:	00800174 	movhi	r2,5
   49d78:	2021883a 	mov	r16,r4
   49d7c:	2809883a 	mov	r4,r5
   49d80:	dfc00115 	stw	ra,4(sp)
   49d84:	100f8315 	stw	zero,15884(r2)
   49d88:	004d6fc0 	call	4d6fc <close>
   49d8c:	10ffffd8 	cmpnei	r3,r2,-1
   49d90:	18000426 	beq	r3,zero,49da4 <_close_r+0x38>
   49d94:	dfc00117 	ldw	ra,4(sp)
   49d98:	dc000017 	ldw	r16,0(sp)
   49d9c:	dec00204 	addi	sp,sp,8
   49da0:	f800283a 	ret
   49da4:	00c00174 	movhi	r3,5
   49da8:	18cf8317 	ldw	r3,15884(r3)
   49dac:	183ff926 	beq	r3,zero,49d94 <_close_r+0x28>
   49db0:	80c00015 	stw	r3,0(r16)
   49db4:	dfc00117 	ldw	ra,4(sp)
   49db8:	dc000017 	ldw	r16,0(sp)
   49dbc:	dec00204 	addi	sp,sp,8
   49dc0:	f800283a 	ret

00049dc4 <__assert_func>:
   49dc4:	00800174 	movhi	r2,5
   49dc8:	12087d17 	ldw	r8,8692(r2)
   49dcc:	defffc04 	addi	sp,sp,-16
   49dd0:	3807883a 	mov	r3,r7
   49dd4:	3005883a 	mov	r2,r6
   49dd8:	dfc00315 	stw	ra,12(sp)
   49ddc:	42400317 	ldw	r9,12(r8)
   49de0:	200f883a 	mov	r7,r4
   49de4:	2811883a 	mov	r8,r5
   49de8:	180d883a 	mov	r6,r3
   49dec:	10000a26 	beq	r2,zero,49e18 <__assert_func+0x54>
   49df0:	00c00174 	movhi	r3,5
   49df4:	18c0d404 	addi	r3,r3,848
   49df8:	01400174 	movhi	r5,5
   49dfc:	2940d804 	addi	r5,r5,864
   49e00:	4809883a 	mov	r4,r9
   49e04:	d8c00115 	stw	r3,4(sp)
   49e08:	da000015 	stw	r8,0(sp)
   49e0c:	d8800215 	stw	r2,8(sp)
   49e10:	004a0b40 	call	4a0b4 <fiprintf>
   49e14:	004a8fc0 	call	4a8fc <abort>
   49e18:	00c00174 	movhi	r3,5
   49e1c:	18c0d704 	addi	r3,r3,860
   49e20:	1805883a 	mov	r2,r3
   49e24:	003ff406 	br	49df8 <__assert_func+0x34>

00049e28 <__assert>:
   49e28:	deffff04 	addi	sp,sp,-4
   49e2c:	300f883a 	mov	r7,r6
   49e30:	000d883a 	mov	r6,zero
   49e34:	dfc00015 	stw	ra,0(sp)
   49e38:	0049dc40 	call	49dc4 <__assert_func>

00049e3c <_calloc_r>:
   49e3c:	2804d43a 	srli	r2,r5,16
   49e40:	deffff04 	addi	sp,sp,-4
   49e44:	dfc00015 	stw	ra,0(sp)
   49e48:	3006d43a 	srli	r3,r6,16
   49e4c:	10002a1e 	bne	r2,zero,49ef8 <_calloc_r+0xbc>
   49e50:	1800411e 	bne	r3,zero,49f58 <_calloc_r+0x11c>
   49e54:	31bfffcc 	andi	r6,r6,65535
   49e58:	297fffcc 	andi	r5,r5,65535
   49e5c:	298b383a 	mul	r5,r5,r6
   49e60:	00464280 	call	46428 <_malloc_r>
   49e64:	1009883a 	mov	r4,r2
   49e68:	10003626 	beq	r2,zero,49f44 <_calloc_r+0x108>
   49e6c:	11bfff17 	ldw	r6,-4(r2)
   49e70:	00bfff04 	movi	r2,-4
   49e74:	308c703a 	and	r6,r6,r2
   49e78:	31bfff04 	addi	r6,r6,-4
   49e7c:	30800968 	cmpgeui	r2,r6,37
   49e80:	10000c1e 	bne	r2,zero,49eb4 <_calloc_r+0x78>
   49e84:	30800530 	cmpltui	r2,r6,20
   49e88:	1000111e 	bne	r2,zero,49ed0 <_calloc_r+0x94>
   49e8c:	20000015 	stw	zero,0(r4)
   49e90:	20000115 	stw	zero,4(r4)
   49e94:	30800728 	cmpgeui	r2,r6,28
   49e98:	10001526 	beq	r2,zero,49ef0 <_calloc_r+0xb4>
   49e9c:	20000215 	stw	zero,8(r4)
   49ea0:	20000315 	stw	zero,12(r4)
   49ea4:	31800920 	cmpeqi	r6,r6,36
   49ea8:	3000311e 	bne	r6,zero,49f70 <_calloc_r+0x134>
   49eac:	20800404 	addi	r2,r4,16
   49eb0:	00000806 	br	49ed4 <_calloc_r+0x98>
   49eb4:	000b883a 	mov	r5,zero
   49eb8:	0046ed40 	call	46ed4 <memset>
   49ebc:	1009883a 	mov	r4,r2
   49ec0:	2005883a 	mov	r2,r4
   49ec4:	dfc00017 	ldw	ra,0(sp)
   49ec8:	dec00104 	addi	sp,sp,4
   49ecc:	f800283a 	ret
   49ed0:	2005883a 	mov	r2,r4
   49ed4:	10000015 	stw	zero,0(r2)
   49ed8:	10000115 	stw	zero,4(r2)
   49edc:	10000215 	stw	zero,8(r2)
   49ee0:	2005883a 	mov	r2,r4
   49ee4:	dfc00017 	ldw	ra,0(sp)
   49ee8:	dec00104 	addi	sp,sp,4
   49eec:	f800283a 	ret
   49ef0:	20800204 	addi	r2,r4,8
   49ef4:	003ff706 	br	49ed4 <_calloc_r+0x98>
   49ef8:	1800191e 	bne	r3,zero,49f60 <_calloc_r+0x124>
   49efc:	1007883a 	mov	r3,r2
   49f00:	3005883a 	mov	r2,r6
   49f04:	297fffcc 	andi	r5,r5,65535
   49f08:	31bfffcc 	andi	r6,r6,65535
   49f0c:	298b383a 	mul	r5,r5,r6
   49f10:	18ffffcc 	andi	r3,r3,65535
   49f14:	10bfffcc 	andi	r2,r2,65535
   49f18:	10c5383a 	mul	r2,r2,r3
   49f1c:	2806d43a 	srli	r3,r5,16
   49f20:	10c5883a 	add	r2,r2,r3
   49f24:	1006d43a 	srli	r3,r2,16
   49f28:	18000d1e 	bne	r3,zero,49f60 <_calloc_r+0x124>
   49f2c:	1004943a 	slli	r2,r2,16
   49f30:	297fffcc 	andi	r5,r5,65535
   49f34:	114ab03a 	or	r5,r2,r5
   49f38:	00464280 	call	46428 <_malloc_r>
   49f3c:	1009883a 	mov	r4,r2
   49f40:	103fca1e 	bne	r2,zero,49e6c <_calloc_r+0x30>
   49f44:	0009883a 	mov	r4,zero
   49f48:	2005883a 	mov	r2,r4
   49f4c:	dfc00017 	ldw	ra,0(sp)
   49f50:	dec00104 	addi	sp,sp,4
   49f54:	f800283a 	ret
   49f58:	2805883a 	mov	r2,r5
   49f5c:	003fe906 	br	49f04 <_calloc_r+0xc8>
   49f60:	0049f800 	call	49f80 <__errno>
   49f64:	00c00304 	movi	r3,12
   49f68:	10c00015 	stw	r3,0(r2)
   49f6c:	003ff506 	br	49f44 <_calloc_r+0x108>
   49f70:	20000415 	stw	zero,16(r4)
   49f74:	20800604 	addi	r2,r4,24
   49f78:	20000515 	stw	zero,20(r4)
   49f7c:	003fd506 	br	49ed4 <_calloc_r+0x98>

00049f80 <__errno>:
   49f80:	00800174 	movhi	r2,5
   49f84:	10887d17 	ldw	r2,8692(r2)
   49f88:	f800283a 	ret

00049f8c <_fclose_r>:
   49f8c:	defffc04 	addi	sp,sp,-16
   49f90:	dfc00315 	stw	ra,12(sp)
   49f94:	dc800215 	stw	r18,8(sp)
   49f98:	dc400115 	stw	r17,4(sp)
   49f9c:	dc000015 	stw	r16,0(sp)
   49fa0:	28000726 	beq	r5,zero,49fc0 <_fclose_r+0x34>
   49fa4:	2821883a 	mov	r16,r5
   49fa8:	2023883a 	mov	r17,r4
   49fac:	20000226 	beq	r4,zero,49fb8 <_fclose_r+0x2c>
   49fb0:	20800e17 	ldw	r2,56(r4)
   49fb4:	10002726 	beq	r2,zero,4a054 <_fclose_r+0xc8>
   49fb8:	8080030f 	ldh	r2,12(r16)
   49fbc:	1000081e 	bne	r2,zero,49fe0 <_fclose_r+0x54>
   49fc0:	0025883a 	mov	r18,zero
   49fc4:	9005883a 	mov	r2,r18
   49fc8:	dfc00317 	ldw	ra,12(sp)
   49fcc:	dc800217 	ldw	r18,8(sp)
   49fd0:	dc400117 	ldw	r17,4(sp)
   49fd4:	dc000017 	ldw	r16,0(sp)
   49fd8:	dec00404 	addi	sp,sp,16
   49fdc:	f800283a 	ret
   49fe0:	800b883a 	mov	r5,r16
   49fe4:	8809883a 	mov	r4,r17
   49fe8:	00451640 	call	45164 <__sflush_r>
   49fec:	80c00b17 	ldw	r3,44(r16)
   49ff0:	1025883a 	mov	r18,r2
   49ff4:	18000426 	beq	r3,zero,4a008 <_fclose_r+0x7c>
   49ff8:	81400717 	ldw	r5,28(r16)
   49ffc:	8809883a 	mov	r4,r17
   4a000:	183ee83a 	callr	r3
   4a004:	10001716 	blt	r2,zero,4a064 <_fclose_r+0xd8>
   4a008:	8080030b 	ldhu	r2,12(r16)
   4a00c:	1080200c 	andi	r2,r2,128
   4a010:	1000181e 	bne	r2,zero,4a074 <_fclose_r+0xe8>
   4a014:	81400c17 	ldw	r5,48(r16)
   4a018:	28000526 	beq	r5,zero,4a030 <_fclose_r+0xa4>
   4a01c:	80801004 	addi	r2,r16,64
   4a020:	28800226 	beq	r5,r2,4a02c <_fclose_r+0xa0>
   4a024:	8809883a 	mov	r4,r17
   4a028:	00458f00 	call	458f0 <_free_r>
   4a02c:	80000c15 	stw	zero,48(r16)
   4a030:	81401117 	ldw	r5,68(r16)
   4a034:	28000326 	beq	r5,zero,4a044 <_fclose_r+0xb8>
   4a038:	8809883a 	mov	r4,r17
   4a03c:	00458f00 	call	458f0 <_free_r>
   4a040:	80001115 	stw	zero,68(r16)
   4a044:	00457940 	call	45794 <__sfp_lock_acquire>
   4a048:	8000030d 	sth	zero,12(r16)
   4a04c:	00457980 	call	45798 <__sfp_lock_release>
   4a050:	003fdc06 	br	49fc4 <_fclose_r+0x38>
   4a054:	00457840 	call	45784 <__sinit>
   4a058:	8080030f 	ldh	r2,12(r16)
   4a05c:	103fd826 	beq	r2,zero,49fc0 <_fclose_r+0x34>
   4a060:	003fdf06 	br	49fe0 <_fclose_r+0x54>
   4a064:	8080030b 	ldhu	r2,12(r16)
   4a068:	04bfffc4 	movi	r18,-1
   4a06c:	1080200c 	andi	r2,r2,128
   4a070:	103fe826 	beq	r2,zero,4a014 <_fclose_r+0x88>
   4a074:	81400417 	ldw	r5,16(r16)
   4a078:	8809883a 	mov	r4,r17
   4a07c:	00458f00 	call	458f0 <_free_r>
   4a080:	003fe406 	br	4a014 <_fclose_r+0x88>

0004a084 <fclose>:
   4a084:	00800174 	movhi	r2,5
   4a088:	200b883a 	mov	r5,r4
   4a08c:	11087d17 	ldw	r4,8692(r2)
   4a090:	0049f8c1 	jmpi	49f8c <_fclose_r>

0004a094 <_fiprintf_r>:
   4a094:	defffe04 	addi	sp,sp,-8
   4a098:	dfc00015 	stw	ra,0(sp)
   4a09c:	d9c00115 	stw	r7,4(sp)
   4a0a0:	d9c00104 	addi	r7,sp,4
   4a0a4:	004a6680 	call	4a668 <_vfiprintf_r>
   4a0a8:	dfc00017 	ldw	ra,0(sp)
   4a0ac:	dec00204 	addi	sp,sp,8
   4a0b0:	f800283a 	ret

0004a0b4 <fiprintf>:
   4a0b4:	defffd04 	addi	sp,sp,-12
   4a0b8:	2005883a 	mov	r2,r4
   4a0bc:	dfc00015 	stw	ra,0(sp)
   4a0c0:	d9800115 	stw	r6,4(sp)
   4a0c4:	d9c00215 	stw	r7,8(sp)
   4a0c8:	00c00174 	movhi	r3,5
   4a0cc:	19087d17 	ldw	r4,8692(r3)
   4a0d0:	280d883a 	mov	r6,r5
   4a0d4:	d9c00104 	addi	r7,sp,4
   4a0d8:	100b883a 	mov	r5,r2
   4a0dc:	004a6680 	call	4a668 <_vfiprintf_r>
   4a0e0:	dfc00017 	ldw	ra,0(sp)
   4a0e4:	dec00304 	addi	sp,sp,12
   4a0e8:	f800283a 	ret

0004a0ec <__fputwc>:
   4a0ec:	defff904 	addi	sp,sp,-28
   4a0f0:	dcc00415 	stw	r19,16(sp)
   4a0f4:	dc800315 	stw	r18,12(sp)
   4a0f8:	dc000115 	stw	r16,4(sp)
   4a0fc:	dfc00615 	stw	ra,24(sp)
   4a100:	dd000515 	stw	r20,20(sp)
   4a104:	dc400215 	stw	r17,8(sp)
   4a108:	2027883a 	mov	r19,r4
   4a10c:	2825883a 	mov	r18,r5
   4a110:	3021883a 	mov	r16,r6
   4a114:	004a4180 	call	4a418 <__locale_mb_cur_max>
   4a118:	10800058 	cmpnei	r2,r2,1
   4a11c:	1000071e 	bne	r2,zero,4a13c <__fputwc+0x50>
   4a120:	90bfffc4 	addi	r2,r18,-1
   4a124:	10803fe8 	cmpgeui	r2,r2,255
   4a128:	1000041e 	bne	r2,zero,4a13c <__fputwc+0x50>
   4a12c:	900b883a 	mov	r5,r18
   4a130:	dc8000c5 	stb	r18,3(sp)
   4a134:	05000044 	movi	r20,1
   4a138:	00000a06 	br	4a164 <__fputwc+0x78>
   4a13c:	81c01704 	addi	r7,r16,92
   4a140:	900d883a 	mov	r6,r18
   4a144:	d94000c4 	addi	r5,sp,3
   4a148:	9809883a 	mov	r4,r19
   4a14c:	004a7cc0 	call	4a7cc <_wcrtomb_r>
   4a150:	1029883a 	mov	r20,r2
   4a154:	10bfffd8 	cmpnei	r2,r2,-1
   4a158:	10003826 	beq	r2,zero,4a23c <__fputwc+0x150>
   4a15c:	a0001f26 	beq	r20,zero,4a1dc <__fputwc+0xf0>
   4a160:	d94000c3 	ldbu	r5,3(sp)
   4a164:	0023883a 	mov	r17,zero
   4a168:	00000a06 	br	4a194 <__fputwc+0xa8>
   4a16c:	80800017 	ldw	r2,0(r16)
   4a170:	11400005 	stb	r5,0(r2)
   4a174:	80c00017 	ldw	r3,0(r16)
   4a178:	18c00044 	addi	r3,r3,1
   4a17c:	80c00015 	stw	r3,0(r16)
   4a180:	8c400044 	addi	r17,r17,1
   4a184:	d88000c4 	addi	r2,sp,3
   4a188:	1447883a 	add	r3,r2,r17
   4a18c:	8d00132e 	bgeu	r17,r20,4a1dc <__fputwc+0xf0>
   4a190:	19400003 	ldbu	r5,0(r3)
   4a194:	80c00217 	ldw	r3,8(r16)
   4a198:	18ffffc4 	addi	r3,r3,-1
   4a19c:	80c00215 	stw	r3,8(r16)
   4a1a0:	183ff20e 	bge	r3,zero,4a16c <__fputwc+0x80>
   4a1a4:	80800617 	ldw	r2,24(r16)
   4a1a8:	18801516 	blt	r3,r2,4a200 <__fputwc+0x114>
   4a1ac:	80800017 	ldw	r2,0(r16)
   4a1b0:	11400005 	stb	r5,0(r2)
   4a1b4:	80800017 	ldw	r2,0(r16)
   4a1b8:	10c00003 	ldbu	r3,0(r2)
   4a1bc:	10800044 	addi	r2,r2,1
   4a1c0:	18c002a0 	cmpeqi	r3,r3,10
   4a1c4:	1800161e 	bne	r3,zero,4a220 <__fputwc+0x134>
   4a1c8:	80800015 	stw	r2,0(r16)
   4a1cc:	8c400044 	addi	r17,r17,1
   4a1d0:	d88000c4 	addi	r2,sp,3
   4a1d4:	1447883a 	add	r3,r2,r17
   4a1d8:	8d3fed36 	bltu	r17,r20,4a190 <__fputwc+0xa4>
   4a1dc:	9005883a 	mov	r2,r18
   4a1e0:	dfc00617 	ldw	ra,24(sp)
   4a1e4:	dd000517 	ldw	r20,20(sp)
   4a1e8:	dcc00417 	ldw	r19,16(sp)
   4a1ec:	dc800317 	ldw	r18,12(sp)
   4a1f0:	dc400217 	ldw	r17,8(sp)
   4a1f4:	dc000117 	ldw	r16,4(sp)
   4a1f8:	dec00704 	addi	sp,sp,28
   4a1fc:	f800283a 	ret
   4a200:	29403fcc 	andi	r5,r5,255
   4a204:	800d883a 	mov	r6,r16
   4a208:	9809883a 	mov	r4,r19
   4a20c:	004a66c0 	call	4a66c <__swbuf_r>
   4a210:	10bfffe0 	cmpeqi	r2,r2,-1
   4a214:	103fda26 	beq	r2,zero,4a180 <__fputwc+0x94>
   4a218:	00bfffc4 	movi	r2,-1
   4a21c:	003ff006 	br	4a1e0 <__fputwc+0xf4>
   4a220:	800d883a 	mov	r6,r16
   4a224:	01400284 	movi	r5,10
   4a228:	9809883a 	mov	r4,r19
   4a22c:	004a66c0 	call	4a66c <__swbuf_r>
   4a230:	10bfffe0 	cmpeqi	r2,r2,-1
   4a234:	103fd226 	beq	r2,zero,4a180 <__fputwc+0x94>
   4a238:	003ff706 	br	4a218 <__fputwc+0x12c>
   4a23c:	8080030b 	ldhu	r2,12(r16)
   4a240:	10801014 	ori	r2,r2,64
   4a244:	8080030d 	sth	r2,12(r16)
   4a248:	00bfffc4 	movi	r2,-1
   4a24c:	003fe406 	br	4a1e0 <__fputwc+0xf4>

0004a250 <_fputwc_r>:
   4a250:	3080030b 	ldhu	r2,12(r6)
   4a254:	10c8000c 	andi	r3,r2,8192
   4a258:	1800051e 	bne	r3,zero,4a270 <_fputwc_r+0x20>
   4a25c:	30c01917 	ldw	r3,100(r6)
   4a260:	10880014 	ori	r2,r2,8192
   4a264:	3080030d 	sth	r2,12(r6)
   4a268:	18880014 	ori	r2,r3,8192
   4a26c:	30801915 	stw	r2,100(r6)
   4a270:	004a0ec1 	jmpi	4a0ec <__fputwc>

0004a274 <fputwc>:
   4a274:	defffc04 	addi	sp,sp,-16
   4a278:	00800174 	movhi	r2,5
   4a27c:	dc000215 	stw	r16,8(sp)
   4a280:	14087d17 	ldw	r16,8692(r2)
   4a284:	dfc00315 	stw	ra,12(sp)
   4a288:	280d883a 	mov	r6,r5
   4a28c:	200b883a 	mov	r5,r4
   4a290:	80000226 	beq	r16,zero,4a29c <fputwc+0x28>
   4a294:	80800e17 	ldw	r2,56(r16)
   4a298:	10000d26 	beq	r2,zero,4a2d0 <fputwc+0x5c>
   4a29c:	3080030b 	ldhu	r2,12(r6)
   4a2a0:	10c8000c 	andi	r3,r2,8192
   4a2a4:	1800051e 	bne	r3,zero,4a2bc <fputwc+0x48>
   4a2a8:	30c01917 	ldw	r3,100(r6)
   4a2ac:	10880014 	ori	r2,r2,8192
   4a2b0:	3080030d 	sth	r2,12(r6)
   4a2b4:	18880014 	ori	r2,r3,8192
   4a2b8:	30801915 	stw	r2,100(r6)
   4a2bc:	8009883a 	mov	r4,r16
   4a2c0:	dfc00317 	ldw	ra,12(sp)
   4a2c4:	dc000217 	ldw	r16,8(sp)
   4a2c8:	dec00404 	addi	sp,sp,16
   4a2cc:	004a0ec1 	jmpi	4a0ec <__fputwc>
   4a2d0:	d9000015 	stw	r4,0(sp)
   4a2d4:	8009883a 	mov	r4,r16
   4a2d8:	d9800115 	stw	r6,4(sp)
   4a2dc:	00457840 	call	45784 <__sinit>
   4a2e0:	d9800117 	ldw	r6,4(sp)
   4a2e4:	d9400017 	ldw	r5,0(sp)
   4a2e8:	003fec06 	br	4a29c <fputwc+0x28>

0004a2ec <_fstat_r>:
   4a2ec:	2807883a 	mov	r3,r5
   4a2f0:	defffe04 	addi	sp,sp,-8
   4a2f4:	dc000015 	stw	r16,0(sp)
   4a2f8:	00800174 	movhi	r2,5
   4a2fc:	300b883a 	mov	r5,r6
   4a300:	2021883a 	mov	r16,r4
   4a304:	1809883a 	mov	r4,r3
   4a308:	dfc00115 	stw	ra,4(sp)
   4a30c:	100f8315 	stw	zero,15884(r2)
   4a310:	004d87c0 	call	4d87c <fstat>
   4a314:	10ffffd8 	cmpnei	r3,r2,-1
   4a318:	18000426 	beq	r3,zero,4a32c <_fstat_r+0x40>
   4a31c:	dfc00117 	ldw	ra,4(sp)
   4a320:	dc000017 	ldw	r16,0(sp)
   4a324:	dec00204 	addi	sp,sp,8
   4a328:	f800283a 	ret
   4a32c:	00c00174 	movhi	r3,5
   4a330:	18cf8317 	ldw	r3,15884(r3)
   4a334:	183ff926 	beq	r3,zero,4a31c <_fstat_r+0x30>
   4a338:	80c00015 	stw	r3,0(r16)
   4a33c:	dfc00117 	ldw	ra,4(sp)
   4a340:	dc000017 	ldw	r16,0(sp)
   4a344:	dec00204 	addi	sp,sp,8
   4a348:	f800283a 	ret

0004a34c <_isatty_r>:
   4a34c:	defffe04 	addi	sp,sp,-8
   4a350:	dc000015 	stw	r16,0(sp)
   4a354:	00800174 	movhi	r2,5
   4a358:	2021883a 	mov	r16,r4
   4a35c:	2809883a 	mov	r4,r5
   4a360:	dfc00115 	stw	ra,4(sp)
   4a364:	100f8315 	stw	zero,15884(r2)
   4a368:	004d9940 	call	4d994 <isatty>
   4a36c:	10ffffd8 	cmpnei	r3,r2,-1
   4a370:	18000426 	beq	r3,zero,4a384 <_isatty_r+0x38>
   4a374:	dfc00117 	ldw	ra,4(sp)
   4a378:	dc000017 	ldw	r16,0(sp)
   4a37c:	dec00204 	addi	sp,sp,8
   4a380:	f800283a 	ret
   4a384:	00c00174 	movhi	r3,5
   4a388:	18cf8317 	ldw	r3,15884(r3)
   4a38c:	183ff926 	beq	r3,zero,4a374 <_isatty_r+0x28>
   4a390:	80c00015 	stw	r3,0(r16)
   4a394:	dfc00117 	ldw	ra,4(sp)
   4a398:	dc000017 	ldw	r16,0(sp)
   4a39c:	dec00204 	addi	sp,sp,8
   4a3a0:	f800283a 	ret

0004a3a4 <_setlocale_r>:
   4a3a4:	30001626 	beq	r6,zero,4a400 <_setlocale_r+0x5c>
   4a3a8:	01400174 	movhi	r5,5
   4a3ac:	defffe04 	addi	sp,sp,-8
   4a3b0:	2940e504 	addi	r5,r5,916
   4a3b4:	3009883a 	mov	r4,r6
   4a3b8:	dc000015 	stw	r16,0(sp)
   4a3bc:	dfc00115 	stw	ra,4(sp)
   4a3c0:	3021883a 	mov	r16,r6
   4a3c4:	004a5b00 	call	4a5b0 <strcmp>
   4a3c8:	1000061e 	bne	r2,zero,4a3e4 <_setlocale_r+0x40>
   4a3cc:	00800174 	movhi	r2,5
   4a3d0:	1080e404 	addi	r2,r2,912
   4a3d4:	dfc00117 	ldw	ra,4(sp)
   4a3d8:	dc000017 	ldw	r16,0(sp)
   4a3dc:	dec00204 	addi	sp,sp,8
   4a3e0:	f800283a 	ret
   4a3e4:	80800003 	ldbu	r2,0(r16)
   4a3e8:	10bfef44 	addi	r2,r2,-67
   4a3ec:	10000726 	beq	r2,zero,4a40c <_setlocale_r+0x68>
   4a3f0:	80800003 	ldbu	r2,0(r16)
   4a3f4:	103ff526 	beq	r2,zero,4a3cc <_setlocale_r+0x28>
   4a3f8:	0005883a 	mov	r2,zero
   4a3fc:	003ff506 	br	4a3d4 <_setlocale_r+0x30>
   4a400:	00800174 	movhi	r2,5
   4a404:	1080e404 	addi	r2,r2,912
   4a408:	f800283a 	ret
   4a40c:	80800043 	ldbu	r2,1(r16)
   4a410:	103fee26 	beq	r2,zero,4a3cc <_setlocale_r+0x28>
   4a414:	003ff606 	br	4a3f0 <_setlocale_r+0x4c>

0004a418 <__locale_mb_cur_max>:
   4a418:	00800174 	movhi	r2,5
   4a41c:	1083e907 	ldb	r2,4004(r2)
   4a420:	f800283a 	ret

0004a424 <setlocale>:
   4a424:	28001626 	beq	r5,zero,4a480 <setlocale+0x5c>
   4a428:	defffe04 	addi	sp,sp,-8
   4a42c:	dc000015 	stw	r16,0(sp)
   4a430:	2821883a 	mov	r16,r5
   4a434:	01400174 	movhi	r5,5
   4a438:	2940e504 	addi	r5,r5,916
   4a43c:	8009883a 	mov	r4,r16
   4a440:	dfc00115 	stw	ra,4(sp)
   4a444:	004a5b00 	call	4a5b0 <strcmp>
   4a448:	1000061e 	bne	r2,zero,4a464 <setlocale+0x40>
   4a44c:	00800174 	movhi	r2,5
   4a450:	1080e404 	addi	r2,r2,912
   4a454:	dfc00117 	ldw	ra,4(sp)
   4a458:	dc000017 	ldw	r16,0(sp)
   4a45c:	dec00204 	addi	sp,sp,8
   4a460:	f800283a 	ret
   4a464:	80800003 	ldbu	r2,0(r16)
   4a468:	10bfef44 	addi	r2,r2,-67
   4a46c:	10000726 	beq	r2,zero,4a48c <setlocale+0x68>
   4a470:	80800003 	ldbu	r2,0(r16)
   4a474:	103ff526 	beq	r2,zero,4a44c <setlocale+0x28>
   4a478:	0005883a 	mov	r2,zero
   4a47c:	003ff506 	br	4a454 <setlocale+0x30>
   4a480:	00800174 	movhi	r2,5
   4a484:	1080e404 	addi	r2,r2,912
   4a488:	f800283a 	ret
   4a48c:	80800043 	ldbu	r2,1(r16)
   4a490:	103fee26 	beq	r2,zero,4a44c <setlocale+0x28>
   4a494:	003ff606 	br	4a470 <setlocale+0x4c>

0004a498 <_lseek_r>:
   4a498:	2807883a 	mov	r3,r5
   4a49c:	defffe04 	addi	sp,sp,-8
   4a4a0:	dc000015 	stw	r16,0(sp)
   4a4a4:	300b883a 	mov	r5,r6
   4a4a8:	00800174 	movhi	r2,5
   4a4ac:	380d883a 	mov	r6,r7
   4a4b0:	2021883a 	mov	r16,r4
   4a4b4:	1809883a 	mov	r4,r3
   4a4b8:	dfc00115 	stw	ra,4(sp)
   4a4bc:	100f8315 	stw	zero,15884(r2)
   4a4c0:	004dca40 	call	4dca4 <lseek>
   4a4c4:	10ffffd8 	cmpnei	r3,r2,-1
   4a4c8:	18000426 	beq	r3,zero,4a4dc <_lseek_r+0x44>
   4a4cc:	dfc00117 	ldw	ra,4(sp)
   4a4d0:	dc000017 	ldw	r16,0(sp)
   4a4d4:	dec00204 	addi	sp,sp,8
   4a4d8:	f800283a 	ret
   4a4dc:	00c00174 	movhi	r3,5
   4a4e0:	18cf8317 	ldw	r3,15884(r3)
   4a4e4:	183ff926 	beq	r3,zero,4a4cc <_lseek_r+0x34>
   4a4e8:	80c00015 	stw	r3,0(r16)
   4a4ec:	dfc00117 	ldw	ra,4(sp)
   4a4f0:	dc000017 	ldw	r16,0(sp)
   4a4f4:	dec00204 	addi	sp,sp,8
   4a4f8:	f800283a 	ret

0004a4fc <_mbtowc_r>:
   4a4fc:	00800174 	movhi	r2,5
   4a500:	1083d817 	ldw	r2,3936(r2)
   4a504:	1000683a 	jmp	r2

0004a508 <__ascii_mbtowc>:
   4a508:	deffff04 	addi	sp,sp,-4
   4a50c:	28000826 	beq	r5,zero,4a530 <__ascii_mbtowc+0x28>
   4a510:	30000926 	beq	r6,zero,4a538 <__ascii_mbtowc+0x30>
   4a514:	38000b26 	beq	r7,zero,4a544 <__ascii_mbtowc+0x3c>
   4a518:	30800003 	ldbu	r2,0(r6)
   4a51c:	28800015 	stw	r2,0(r5)
   4a520:	30800003 	ldbu	r2,0(r6)
   4a524:	1004c03a 	cmpne	r2,r2,zero
   4a528:	dec00104 	addi	sp,sp,4
   4a52c:	f800283a 	ret
   4a530:	d80b883a 	mov	r5,sp
   4a534:	303ff71e 	bne	r6,zero,4a514 <__ascii_mbtowc+0xc>
   4a538:	0005883a 	mov	r2,zero
   4a53c:	dec00104 	addi	sp,sp,4
   4a540:	f800283a 	ret
   4a544:	00bfff84 	movi	r2,-2
   4a548:	003ff706 	br	4a528 <__ascii_mbtowc+0x20>

0004a54c <_read_r>:
   4a54c:	2807883a 	mov	r3,r5
   4a550:	defffe04 	addi	sp,sp,-8
   4a554:	dc000015 	stw	r16,0(sp)
   4a558:	300b883a 	mov	r5,r6
   4a55c:	00800174 	movhi	r2,5
   4a560:	380d883a 	mov	r6,r7
   4a564:	2021883a 	mov	r16,r4
   4a568:	1809883a 	mov	r4,r3
   4a56c:	dfc00115 	stw	ra,4(sp)
   4a570:	100f8315 	stw	zero,15884(r2)
   4a574:	004de840 	call	4de84 <read>
   4a578:	10ffffd8 	cmpnei	r3,r2,-1
   4a57c:	18000426 	beq	r3,zero,4a590 <_read_r+0x44>
   4a580:	dfc00117 	ldw	ra,4(sp)
   4a584:	dc000017 	ldw	r16,0(sp)
   4a588:	dec00204 	addi	sp,sp,8
   4a58c:	f800283a 	ret
   4a590:	00c00174 	movhi	r3,5
   4a594:	18cf8317 	ldw	r3,15884(r3)
   4a598:	183ff926 	beq	r3,zero,4a580 <_read_r+0x34>
   4a59c:	80c00015 	stw	r3,0(r16)
   4a5a0:	dfc00117 	ldw	ra,4(sp)
   4a5a4:	dc000017 	ldw	r16,0(sp)
   4a5a8:	dec00204 	addi	sp,sp,8
   4a5ac:	f800283a 	ret

0004a5b0 <strcmp>:
   4a5b0:	2144b03a 	or	r2,r4,r5
   4a5b4:	108000cc 	andi	r2,r2,3
   4a5b8:	1000141e 	bne	r2,zero,4a60c <strcmp+0x5c>
   4a5bc:	20800017 	ldw	r2,0(r4)
   4a5c0:	28c00017 	ldw	r3,0(r5)
   4a5c4:	10c0111e 	bne	r2,r3,4a60c <strcmp+0x5c>
   4a5c8:	01ffbff4 	movhi	r7,65279
   4a5cc:	01a02074 	movhi	r6,32897
   4a5d0:	39ffbfc4 	addi	r7,r7,-257
   4a5d4:	31a02004 	addi	r6,r6,-32640
   4a5d8:	00000306 	br	4a5e8 <strcmp+0x38>
   4a5dc:	20800017 	ldw	r2,0(r4)
   4a5e0:	28c00017 	ldw	r3,0(r5)
   4a5e4:	10c0091e 	bne	r2,r3,4a60c <strcmp+0x5c>
   4a5e8:	11c7883a 	add	r3,r2,r7
   4a5ec:	0084303a 	nor	r2,zero,r2
   4a5f0:	1884703a 	and	r2,r3,r2
   4a5f4:	1184703a 	and	r2,r2,r6
   4a5f8:	21000104 	addi	r4,r4,4
   4a5fc:	29400104 	addi	r5,r5,4
   4a600:	103ff626 	beq	r2,zero,4a5dc <strcmp+0x2c>
   4a604:	0005883a 	mov	r2,zero
   4a608:	f800283a 	ret
   4a60c:	20c00003 	ldbu	r3,0(r4)
   4a610:	18803fcc 	andi	r2,r3,255
   4a614:	1080201c 	xori	r2,r2,128
   4a618:	10bfe004 	addi	r2,r2,-128
   4a61c:	1000071e 	bne	r2,zero,4a63c <strcmp+0x8c>
   4a620:	00000a06 	br	4a64c <strcmp+0x9c>
   4a624:	20c00003 	ldbu	r3,0(r4)
   4a628:	29400044 	addi	r5,r5,1
   4a62c:	18803fcc 	andi	r2,r3,255
   4a630:	1080201c 	xori	r2,r2,128
   4a634:	10bfe004 	addi	r2,r2,-128
   4a638:	10000726 	beq	r2,zero,4a658 <strcmp+0xa8>
   4a63c:	29800007 	ldb	r6,0(r5)
   4a640:	21000044 	addi	r4,r4,1
   4a644:	30bff726 	beq	r6,r2,4a624 <strcmp+0x74>
   4a648:	18803fcc 	andi	r2,r3,255
   4a64c:	28c00003 	ldbu	r3,0(r5)
   4a650:	10c5c83a 	sub	r2,r2,r3
   4a654:	f800283a 	ret
   4a658:	28c00003 	ldbu	r3,0(r5)
   4a65c:	0005883a 	mov	r2,zero
   4a660:	10c5c83a 	sub	r2,r2,r3
   4a664:	f800283a 	ret

0004a668 <_vfiprintf_r>:
   4a668:	00489b81 	jmpi	489b8 <___vfiprintf_internal_r>

0004a66c <__swbuf_r>:
   4a66c:	defffb04 	addi	sp,sp,-20
   4a670:	dcc00315 	stw	r19,12(sp)
   4a674:	dc400115 	stw	r17,4(sp)
   4a678:	dc000015 	stw	r16,0(sp)
   4a67c:	dfc00415 	stw	ra,16(sp)
   4a680:	dc800215 	stw	r18,8(sp)
   4a684:	2027883a 	mov	r19,r4
   4a688:	2823883a 	mov	r17,r5
   4a68c:	3021883a 	mov	r16,r6
   4a690:	20000226 	beq	r4,zero,4a69c <__swbuf_r+0x30>
   4a694:	20800e17 	ldw	r2,56(r4)
   4a698:	10003e26 	beq	r2,zero,4a794 <__swbuf_r+0x128>
   4a69c:	80800617 	ldw	r2,24(r16)
   4a6a0:	80c0030b 	ldhu	r3,12(r16)
   4a6a4:	80800215 	stw	r2,8(r16)
   4a6a8:	1880020c 	andi	r2,r3,8
   4a6ac:	10001f26 	beq	r2,zero,4a72c <__swbuf_r+0xc0>
   4a6b0:	80800417 	ldw	r2,16(r16)
   4a6b4:	10001d26 	beq	r2,zero,4a72c <__swbuf_r+0xc0>
   4a6b8:	1948000c 	andi	r5,r3,8192
   4a6bc:	8c803fcc 	andi	r18,r17,255
   4a6c0:	28002326 	beq	r5,zero,4a750 <__swbuf_r+0xe4>
   4a6c4:	80c00017 	ldw	r3,0(r16)
   4a6c8:	81000517 	ldw	r4,20(r16)
   4a6cc:	1885c83a 	sub	r2,r3,r2
   4a6d0:	1100290e 	bge	r2,r4,4a778 <__swbuf_r+0x10c>
   4a6d4:	10800044 	addi	r2,r2,1
   4a6d8:	81400217 	ldw	r5,8(r16)
   4a6dc:	19000044 	addi	r4,r3,1
   4a6e0:	81000015 	stw	r4,0(r16)
   4a6e4:	297fffc4 	addi	r5,r5,-1
   4a6e8:	81400215 	stw	r5,8(r16)
   4a6ec:	1c400005 	stb	r17,0(r3)
   4a6f0:	80c00517 	ldw	r3,20(r16)
   4a6f4:	18802926 	beq	r3,r2,4a79c <__swbuf_r+0x130>
   4a6f8:	8080030b 	ldhu	r2,12(r16)
   4a6fc:	1080004c 	andi	r2,r2,1
   4a700:	10000226 	beq	r2,zero,4a70c <__swbuf_r+0xa0>
   4a704:	90800298 	cmpnei	r2,r18,10
   4a708:	10002426 	beq	r2,zero,4a79c <__swbuf_r+0x130>
   4a70c:	9005883a 	mov	r2,r18
   4a710:	dfc00417 	ldw	ra,16(sp)
   4a714:	dcc00317 	ldw	r19,12(sp)
   4a718:	dc800217 	ldw	r18,8(sp)
   4a71c:	dc400117 	ldw	r17,4(sp)
   4a720:	dc000017 	ldw	r16,0(sp)
   4a724:	dec00504 	addi	sp,sp,20
   4a728:	f800283a 	ret
   4a72c:	800b883a 	mov	r5,r16
   4a730:	9809883a 	mov	r4,r19
   4a734:	00436340 	call	43634 <__swsetup_r>
   4a738:	10001c1e 	bne	r2,zero,4a7ac <__swbuf_r+0x140>
   4a73c:	80c0030b 	ldhu	r3,12(r16)
   4a740:	80800417 	ldw	r2,16(r16)
   4a744:	8c803fcc 	andi	r18,r17,255
   4a748:	1948000c 	andi	r5,r3,8192
   4a74c:	283fdd1e 	bne	r5,zero,4a6c4 <__swbuf_r+0x58>
   4a750:	81001917 	ldw	r4,100(r16)
   4a754:	18c80014 	ori	r3,r3,8192
   4a758:	0177ffc4 	movi	r5,-8193
   4a75c:	2148703a 	and	r4,r4,r5
   4a760:	80c0030d 	sth	r3,12(r16)
   4a764:	80c00017 	ldw	r3,0(r16)
   4a768:	81001915 	stw	r4,100(r16)
   4a76c:	81000517 	ldw	r4,20(r16)
   4a770:	1885c83a 	sub	r2,r3,r2
   4a774:	113fd716 	blt	r2,r4,4a6d4 <__swbuf_r+0x68>
   4a778:	800b883a 	mov	r5,r16
   4a77c:	9809883a 	mov	r4,r19
   4a780:	004536c0 	call	4536c <_fflush_r>
   4a784:	1000091e 	bne	r2,zero,4a7ac <__swbuf_r+0x140>
   4a788:	80c00017 	ldw	r3,0(r16)
   4a78c:	00800044 	movi	r2,1
   4a790:	003fd106 	br	4a6d8 <__swbuf_r+0x6c>
   4a794:	00457840 	call	45784 <__sinit>
   4a798:	003fc006 	br	4a69c <__swbuf_r+0x30>
   4a79c:	800b883a 	mov	r5,r16
   4a7a0:	9809883a 	mov	r4,r19
   4a7a4:	004536c0 	call	4536c <_fflush_r>
   4a7a8:	103fd826 	beq	r2,zero,4a70c <__swbuf_r+0xa0>
   4a7ac:	04bfffc4 	movi	r18,-1
   4a7b0:	003fd606 	br	4a70c <__swbuf_r+0xa0>

0004a7b4 <__swbuf>:
   4a7b4:	00c00174 	movhi	r3,5
   4a7b8:	2005883a 	mov	r2,r4
   4a7bc:	19087d17 	ldw	r4,8692(r3)
   4a7c0:	280d883a 	mov	r6,r5
   4a7c4:	100b883a 	mov	r5,r2
   4a7c8:	004a66c1 	jmpi	4a66c <__swbuf_r>

0004a7cc <_wcrtomb_r>:
   4a7cc:	defffa04 	addi	sp,sp,-24
   4a7d0:	dc400415 	stw	r17,16(sp)
   4a7d4:	dc000315 	stw	r16,12(sp)
   4a7d8:	00800174 	movhi	r2,5
   4a7dc:	dfc00515 	stw	ra,20(sp)
   4a7e0:	1083d717 	ldw	r2,3932(r2)
   4a7e4:	2023883a 	mov	r17,r4
   4a7e8:	3821883a 	mov	r16,r7
   4a7ec:	28000826 	beq	r5,zero,4a810 <_wcrtomb_r+0x44>
   4a7f0:	103ee83a 	callr	r2
   4a7f4:	10ffffd8 	cmpnei	r3,r2,-1
   4a7f8:	18000a26 	beq	r3,zero,4a824 <_wcrtomb_r+0x58>
   4a7fc:	dfc00517 	ldw	ra,20(sp)
   4a800:	dc400417 	ldw	r17,16(sp)
   4a804:	dc000317 	ldw	r16,12(sp)
   4a808:	dec00604 	addi	sp,sp,24
   4a80c:	f800283a 	ret
   4a810:	000d883a 	mov	r6,zero
   4a814:	d9400084 	addi	r5,sp,2
   4a818:	103ee83a 	callr	r2
   4a81c:	10ffffd8 	cmpnei	r3,r2,-1
   4a820:	183ff61e 	bne	r3,zero,4a7fc <_wcrtomb_r+0x30>
   4a824:	00802284 	movi	r2,138
   4a828:	80000015 	stw	zero,0(r16)
   4a82c:	88800015 	stw	r2,0(r17)
   4a830:	00bfffc4 	movi	r2,-1
   4a834:	003ff106 	br	4a7fc <_wcrtomb_r+0x30>

0004a838 <wcrtomb>:
   4a838:	defffa04 	addi	sp,sp,-24
   4a83c:	00c00174 	movhi	r3,5
   4a840:	dc400415 	stw	r17,16(sp)
   4a844:	dc000315 	stw	r16,12(sp)
   4a848:	1c487d17 	ldw	r17,8692(r3)
   4a84c:	dfc00515 	stw	ra,20(sp)
   4a850:	00c00174 	movhi	r3,5
   4a854:	18c3d717 	ldw	r3,3932(r3)
   4a858:	3021883a 	mov	r16,r6
   4a85c:	20000c26 	beq	r4,zero,4a890 <wcrtomb+0x58>
   4a860:	280d883a 	mov	r6,r5
   4a864:	800f883a 	mov	r7,r16
   4a868:	200b883a 	mov	r5,r4
   4a86c:	8809883a 	mov	r4,r17
   4a870:	183ee83a 	callr	r3
   4a874:	10ffffd8 	cmpnei	r3,r2,-1
   4a878:	18000c26 	beq	r3,zero,4a8ac <wcrtomb+0x74>
   4a87c:	dfc00517 	ldw	ra,20(sp)
   4a880:	dc400417 	ldw	r17,16(sp)
   4a884:	dc000317 	ldw	r16,12(sp)
   4a888:	dec00604 	addi	sp,sp,24
   4a88c:	f800283a 	ret
   4a890:	300f883a 	mov	r7,r6
   4a894:	d9400084 	addi	r5,sp,2
   4a898:	000d883a 	mov	r6,zero
   4a89c:	8809883a 	mov	r4,r17
   4a8a0:	183ee83a 	callr	r3
   4a8a4:	10ffffd8 	cmpnei	r3,r2,-1
   4a8a8:	183ff41e 	bne	r3,zero,4a87c <wcrtomb+0x44>
   4a8ac:	00802284 	movi	r2,138
   4a8b0:	80000015 	stw	zero,0(r16)
   4a8b4:	88800015 	stw	r2,0(r17)
   4a8b8:	00bfffc4 	movi	r2,-1
   4a8bc:	003fef06 	br	4a87c <wcrtomb+0x44>

0004a8c0 <_wctomb_r>:
   4a8c0:	00800174 	movhi	r2,5
   4a8c4:	1083d717 	ldw	r2,3932(r2)
   4a8c8:	1000683a 	jmp	r2

0004a8cc <__ascii_wctomb>:
   4a8cc:	28000926 	beq	r5,zero,4a8f4 <__ascii_wctomb+0x28>
   4a8d0:	30804030 	cmpltui	r2,r6,256
   4a8d4:	10000326 	beq	r2,zero,4a8e4 <__ascii_wctomb+0x18>
   4a8d8:	29800005 	stb	r6,0(r5)
   4a8dc:	00800044 	movi	r2,1
   4a8e0:	f800283a 	ret
   4a8e4:	00802284 	movi	r2,138
   4a8e8:	20800015 	stw	r2,0(r4)
   4a8ec:	00bfffc4 	movi	r2,-1
   4a8f0:	f800283a 	ret
   4a8f4:	0005883a 	mov	r2,zero
   4a8f8:	f800283a 	ret

0004a8fc <abort>:
   4a8fc:	deffff04 	addi	sp,sp,-4
   4a900:	01000184 	movi	r4,6
   4a904:	dfc00015 	stw	ra,0(sp)
   4a908:	004ab6c0 	call	4ab6c <raise>
   4a90c:	01000044 	movi	r4,1
   4a910:	004d7f80 	call	4d7f8 <_exit>

0004a914 <_init_signal_r>:
   4a914:	2080b717 	ldw	r2,732(r4)
   4a918:	10000226 	beq	r2,zero,4a924 <_init_signal_r+0x10>
   4a91c:	0005883a 	mov	r2,zero
   4a920:	f800283a 	ret
   4a924:	defffe04 	addi	sp,sp,-8
   4a928:	01402004 	movi	r5,128
   4a92c:	dc000015 	stw	r16,0(sp)
   4a930:	dfc00115 	stw	ra,4(sp)
   4a934:	2021883a 	mov	r16,r4
   4a938:	00464280 	call	46428 <_malloc_r>
   4a93c:	8080b715 	stw	r2,732(r16)
   4a940:	1009883a 	mov	r4,r2
   4a944:	10000826 	beq	r2,zero,4a968 <_init_signal_r+0x54>
   4a948:	01802004 	movi	r6,128
   4a94c:	000b883a 	mov	r5,zero
   4a950:	0046ed40 	call	46ed4 <memset>
   4a954:	0005883a 	mov	r2,zero
   4a958:	dfc00117 	ldw	ra,4(sp)
   4a95c:	dc000017 	ldw	r16,0(sp)
   4a960:	dec00204 	addi	sp,sp,8
   4a964:	f800283a 	ret
   4a968:	00bfffc4 	movi	r2,-1
   4a96c:	003ffa06 	br	4a958 <_init_signal_r+0x44>

0004a970 <_signal_r>:
   4a970:	defffc04 	addi	sp,sp,-16
   4a974:	dc400115 	stw	r17,4(sp)
   4a978:	dfc00315 	stw	ra,12(sp)
   4a97c:	dc800215 	stw	r18,8(sp)
   4a980:	dc000015 	stw	r16,0(sp)
   4a984:	28800830 	cmpltui	r2,r5,32
   4a988:	2023883a 	mov	r17,r4
   4a98c:	10000e26 	beq	r2,zero,4a9c8 <_signal_r+0x58>
   4a990:	20c0b717 	ldw	r3,732(r4)
   4a994:	2821883a 	mov	r16,r5
   4a998:	3025883a 	mov	r18,r6
   4a99c:	18000e26 	beq	r3,zero,4a9d8 <_signal_r+0x68>
   4a9a0:	802090ba 	slli	r16,r16,2
   4a9a4:	1c07883a 	add	r3,r3,r16
   4a9a8:	18800017 	ldw	r2,0(r3)
   4a9ac:	1c800015 	stw	r18,0(r3)
   4a9b0:	dfc00317 	ldw	ra,12(sp)
   4a9b4:	dc800217 	ldw	r18,8(sp)
   4a9b8:	dc400117 	ldw	r17,4(sp)
   4a9bc:	dc000017 	ldw	r16,0(sp)
   4a9c0:	dec00404 	addi	sp,sp,16
   4a9c4:	f800283a 	ret
   4a9c8:	00800584 	movi	r2,22
   4a9cc:	20800015 	stw	r2,0(r4)
   4a9d0:	00bfffc4 	movi	r2,-1
   4a9d4:	003ff606 	br	4a9b0 <_signal_r+0x40>
   4a9d8:	01402004 	movi	r5,128
   4a9dc:	00464280 	call	46428 <_malloc_r>
   4a9e0:	8880b715 	stw	r2,732(r17)
   4a9e4:	103ffa26 	beq	r2,zero,4a9d0 <_signal_r+0x60>
   4a9e8:	01802004 	movi	r6,128
   4a9ec:	000b883a 	mov	r5,zero
   4a9f0:	1009883a 	mov	r4,r2
   4a9f4:	0046ed40 	call	46ed4 <memset>
   4a9f8:	1007883a 	mov	r3,r2
   4a9fc:	003fe806 	br	4a9a0 <_signal_r+0x30>

0004aa00 <_raise_r>:
   4aa00:	28800830 	cmpltui	r2,r5,32
   4aa04:	10002626 	beq	r2,zero,4aaa0 <_raise_r+0xa0>
   4aa08:	2080b717 	ldw	r2,732(r4)
   4aa0c:	defffd04 	addi	sp,sp,-12
   4aa10:	dc000115 	stw	r16,4(sp)
   4aa14:	dfc00215 	stw	ra,8(sp)
   4aa18:	2821883a 	mov	r16,r5
   4aa1c:	10001026 	beq	r2,zero,4aa60 <_raise_r+0x60>
   4aa20:	280690ba 	slli	r3,r5,2
   4aa24:	10c5883a 	add	r2,r2,r3
   4aa28:	10c00017 	ldw	r3,0(r2)
   4aa2c:	18000c26 	beq	r3,zero,4aa60 <_raise_r+0x60>
   4aa30:	19400060 	cmpeqi	r5,r3,1
   4aa34:	2800051e 	bne	r5,zero,4aa4c <_raise_r+0x4c>
   4aa38:	197fffd8 	cmpnei	r5,r3,-1
   4aa3c:	28001126 	beq	r5,zero,4aa84 <_raise_r+0x84>
   4aa40:	10000015 	stw	zero,0(r2)
   4aa44:	8009883a 	mov	r4,r16
   4aa48:	183ee83a 	callr	r3
   4aa4c:	0005883a 	mov	r2,zero
   4aa50:	dfc00217 	ldw	ra,8(sp)
   4aa54:	dc000117 	ldw	r16,4(sp)
   4aa58:	dec00304 	addi	sp,sp,12
   4aa5c:	f800283a 	ret
   4aa60:	d9000015 	stw	r4,0(sp)
   4aa64:	004ae340 	call	4ae34 <_getpid_r>
   4aa68:	d9000017 	ldw	r4,0(sp)
   4aa6c:	800d883a 	mov	r6,r16
   4aa70:	100b883a 	mov	r5,r2
   4aa74:	dfc00217 	ldw	ra,8(sp)
   4aa78:	dc000117 	ldw	r16,4(sp)
   4aa7c:	dec00304 	addi	sp,sp,12
   4aa80:	004add41 	jmpi	4add4 <_kill_r>
   4aa84:	00800584 	movi	r2,22
   4aa88:	20800015 	stw	r2,0(r4)
   4aa8c:	00800044 	movi	r2,1
   4aa90:	dfc00217 	ldw	ra,8(sp)
   4aa94:	dc000117 	ldw	r16,4(sp)
   4aa98:	dec00304 	addi	sp,sp,12
   4aa9c:	f800283a 	ret
   4aaa0:	00800584 	movi	r2,22
   4aaa4:	20800015 	stw	r2,0(r4)
   4aaa8:	00bfffc4 	movi	r2,-1
   4aaac:	f800283a 	ret

0004aab0 <__sigtramp_r>:
   4aab0:	28800830 	cmpltui	r2,r5,32
   4aab4:	10002b26 	beq	r2,zero,4ab64 <__sigtramp_r+0xb4>
   4aab8:	20c0b717 	ldw	r3,732(r4)
   4aabc:	defffd04 	addi	sp,sp,-12
   4aac0:	dc400115 	stw	r17,4(sp)
   4aac4:	dc000015 	stw	r16,0(sp)
   4aac8:	dfc00215 	stw	ra,8(sp)
   4aacc:	2821883a 	mov	r16,r5
   4aad0:	2023883a 	mov	r17,r4
   4aad4:	18001726 	beq	r3,zero,4ab34 <__sigtramp_r+0x84>
   4aad8:	800490ba 	slli	r2,r16,2
   4aadc:	1887883a 	add	r3,r3,r2
   4aae0:	18800017 	ldw	r2,0(r3)
   4aae4:	10000d26 	beq	r2,zero,4ab1c <__sigtramp_r+0x6c>
   4aae8:	113fffe0 	cmpeqi	r4,r2,-1
   4aaec:	20000f1e 	bne	r4,zero,4ab2c <__sigtramp_r+0x7c>
   4aaf0:	11000060 	cmpeqi	r4,r2,1
   4aaf4:	20000b1e 	bne	r4,zero,4ab24 <__sigtramp_r+0x74>
   4aaf8:	18000015 	stw	zero,0(r3)
   4aafc:	8009883a 	mov	r4,r16
   4ab00:	103ee83a 	callr	r2
   4ab04:	0005883a 	mov	r2,zero
   4ab08:	dfc00217 	ldw	ra,8(sp)
   4ab0c:	dc400117 	ldw	r17,4(sp)
   4ab10:	dc000017 	ldw	r16,0(sp)
   4ab14:	dec00304 	addi	sp,sp,12
   4ab18:	f800283a 	ret
   4ab1c:	00800044 	movi	r2,1
   4ab20:	003ff906 	br	4ab08 <__sigtramp_r+0x58>
   4ab24:	008000c4 	movi	r2,3
   4ab28:	003ff706 	br	4ab08 <__sigtramp_r+0x58>
   4ab2c:	00800084 	movi	r2,2
   4ab30:	003ff506 	br	4ab08 <__sigtramp_r+0x58>
   4ab34:	01402004 	movi	r5,128
   4ab38:	00464280 	call	46428 <_malloc_r>
   4ab3c:	8880b715 	stw	r2,732(r17)
   4ab40:	10000626 	beq	r2,zero,4ab5c <__sigtramp_r+0xac>
   4ab44:	01802004 	movi	r6,128
   4ab48:	000b883a 	mov	r5,zero
   4ab4c:	1009883a 	mov	r4,r2
   4ab50:	0046ed40 	call	46ed4 <memset>
   4ab54:	1007883a 	mov	r3,r2
   4ab58:	003fdf06 	br	4aad8 <__sigtramp_r+0x28>
   4ab5c:	00bfffc4 	movi	r2,-1
   4ab60:	003fe906 	br	4ab08 <__sigtramp_r+0x58>
   4ab64:	00bfffc4 	movi	r2,-1
   4ab68:	f800283a 	ret

0004ab6c <raise>:
   4ab6c:	defffd04 	addi	sp,sp,-12
   4ab70:	dc400115 	stw	r17,4(sp)
   4ab74:	00c00174 	movhi	r3,5
   4ab78:	dfc00215 	stw	ra,8(sp)
   4ab7c:	dc000015 	stw	r16,0(sp)
   4ab80:	20800830 	cmpltui	r2,r4,32
   4ab84:	1c487d17 	ldw	r17,8692(r3)
   4ab88:	10002126 	beq	r2,zero,4ac10 <raise+0xa4>
   4ab8c:	8880b717 	ldw	r2,732(r17)
   4ab90:	2021883a 	mov	r16,r4
   4ab94:	10001026 	beq	r2,zero,4abd8 <raise+0x6c>
   4ab98:	200690ba 	slli	r3,r4,2
   4ab9c:	10c5883a 	add	r2,r2,r3
   4aba0:	10c00017 	ldw	r3,0(r2)
   4aba4:	18000c26 	beq	r3,zero,4abd8 <raise+0x6c>
   4aba8:	19400060 	cmpeqi	r5,r3,1
   4abac:	2800041e 	bne	r5,zero,4abc0 <raise+0x54>
   4abb0:	197fffd8 	cmpnei	r5,r3,-1
   4abb4:	28001226 	beq	r5,zero,4ac00 <raise+0x94>
   4abb8:	10000015 	stw	zero,0(r2)
   4abbc:	183ee83a 	callr	r3
   4abc0:	0005883a 	mov	r2,zero
   4abc4:	dfc00217 	ldw	ra,8(sp)
   4abc8:	dc400117 	ldw	r17,4(sp)
   4abcc:	dc000017 	ldw	r16,0(sp)
   4abd0:	dec00304 	addi	sp,sp,12
   4abd4:	f800283a 	ret
   4abd8:	8809883a 	mov	r4,r17
   4abdc:	004ae340 	call	4ae34 <_getpid_r>
   4abe0:	800d883a 	mov	r6,r16
   4abe4:	100b883a 	mov	r5,r2
   4abe8:	8809883a 	mov	r4,r17
   4abec:	dfc00217 	ldw	ra,8(sp)
   4abf0:	dc400117 	ldw	r17,4(sp)
   4abf4:	dc000017 	ldw	r16,0(sp)
   4abf8:	dec00304 	addi	sp,sp,12
   4abfc:	004add41 	jmpi	4add4 <_kill_r>
   4ac00:	00800584 	movi	r2,22
   4ac04:	88800015 	stw	r2,0(r17)
   4ac08:	00800044 	movi	r2,1
   4ac0c:	003fed06 	br	4abc4 <raise+0x58>
   4ac10:	00800584 	movi	r2,22
   4ac14:	88800015 	stw	r2,0(r17)
   4ac18:	00bfffc4 	movi	r2,-1
   4ac1c:	003fe906 	br	4abc4 <raise+0x58>

0004ac20 <signal>:
   4ac20:	defffc04 	addi	sp,sp,-16
   4ac24:	dc800215 	stw	r18,8(sp)
   4ac28:	00c00174 	movhi	r3,5
   4ac2c:	dfc00315 	stw	ra,12(sp)
   4ac30:	dc400115 	stw	r17,4(sp)
   4ac34:	dc000015 	stw	r16,0(sp)
   4ac38:	20800830 	cmpltui	r2,r4,32
   4ac3c:	1c887d17 	ldw	r18,8692(r3)
   4ac40:	10000e26 	beq	r2,zero,4ac7c <signal+0x5c>
   4ac44:	2021883a 	mov	r16,r4
   4ac48:	9100b717 	ldw	r4,732(r18)
   4ac4c:	2823883a 	mov	r17,r5
   4ac50:	20000e26 	beq	r4,zero,4ac8c <signal+0x6c>
   4ac54:	802090ba 	slli	r16,r16,2
   4ac58:	2409883a 	add	r4,r4,r16
   4ac5c:	20800017 	ldw	r2,0(r4)
   4ac60:	24400015 	stw	r17,0(r4)
   4ac64:	dfc00317 	ldw	ra,12(sp)
   4ac68:	dc800217 	ldw	r18,8(sp)
   4ac6c:	dc400117 	ldw	r17,4(sp)
   4ac70:	dc000017 	ldw	r16,0(sp)
   4ac74:	dec00404 	addi	sp,sp,16
   4ac78:	f800283a 	ret
   4ac7c:	00800584 	movi	r2,22
   4ac80:	90800015 	stw	r2,0(r18)
   4ac84:	00bfffc4 	movi	r2,-1
   4ac88:	003ff606 	br	4ac64 <signal+0x44>
   4ac8c:	9009883a 	mov	r4,r18
   4ac90:	01402004 	movi	r5,128
   4ac94:	00464280 	call	46428 <_malloc_r>
   4ac98:	9080b715 	stw	r2,732(r18)
   4ac9c:	1009883a 	mov	r4,r2
   4aca0:	103ff826 	beq	r2,zero,4ac84 <signal+0x64>
   4aca4:	01802004 	movi	r6,128
   4aca8:	000b883a 	mov	r5,zero
   4acac:	0046ed40 	call	46ed4 <memset>
   4acb0:	1009883a 	mov	r4,r2
   4acb4:	003fe706 	br	4ac54 <signal+0x34>

0004acb8 <_init_signal>:
   4acb8:	defffe04 	addi	sp,sp,-8
   4acbc:	00800174 	movhi	r2,5
   4acc0:	dc000015 	stw	r16,0(sp)
   4acc4:	14087d17 	ldw	r16,8692(r2)
   4acc8:	dfc00115 	stw	ra,4(sp)
   4accc:	8080b717 	ldw	r2,732(r16)
   4acd0:	10000526 	beq	r2,zero,4ace8 <_init_signal+0x30>
   4acd4:	0005883a 	mov	r2,zero
   4acd8:	dfc00117 	ldw	ra,4(sp)
   4acdc:	dc000017 	ldw	r16,0(sp)
   4ace0:	dec00204 	addi	sp,sp,8
   4ace4:	f800283a 	ret
   4ace8:	8009883a 	mov	r4,r16
   4acec:	01402004 	movi	r5,128
   4acf0:	00464280 	call	46428 <_malloc_r>
   4acf4:	8080b715 	stw	r2,732(r16)
   4acf8:	1009883a 	mov	r4,r2
   4acfc:	10000426 	beq	r2,zero,4ad10 <_init_signal+0x58>
   4ad00:	01802004 	movi	r6,128
   4ad04:	000b883a 	mov	r5,zero
   4ad08:	0046ed40 	call	46ed4 <memset>
   4ad0c:	003ff106 	br	4acd4 <_init_signal+0x1c>
   4ad10:	00bfffc4 	movi	r2,-1
   4ad14:	003ff006 	br	4acd8 <_init_signal+0x20>

0004ad18 <__sigtramp>:
   4ad18:	defffd04 	addi	sp,sp,-12
   4ad1c:	dc400115 	stw	r17,4(sp)
   4ad20:	00c00174 	movhi	r3,5
   4ad24:	dfc00215 	stw	ra,8(sp)
   4ad28:	dc000015 	stw	r16,0(sp)
   4ad2c:	20800830 	cmpltui	r2,r4,32
   4ad30:	1c487d17 	ldw	r17,8692(r3)
   4ad34:	10002526 	beq	r2,zero,4adcc <__sigtramp+0xb4>
   4ad38:	88c0b717 	ldw	r3,732(r17)
   4ad3c:	2021883a 	mov	r16,r4
   4ad40:	18001726 	beq	r3,zero,4ada0 <__sigtramp+0x88>
   4ad44:	800490ba 	slli	r2,r16,2
   4ad48:	1887883a 	add	r3,r3,r2
   4ad4c:	18800017 	ldw	r2,0(r3)
   4ad50:	10000d26 	beq	r2,zero,4ad88 <__sigtramp+0x70>
   4ad54:	113fffe0 	cmpeqi	r4,r2,-1
   4ad58:	20000f1e 	bne	r4,zero,4ad98 <__sigtramp+0x80>
   4ad5c:	11000060 	cmpeqi	r4,r2,1
   4ad60:	20000b1e 	bne	r4,zero,4ad90 <__sigtramp+0x78>
   4ad64:	18000015 	stw	zero,0(r3)
   4ad68:	8009883a 	mov	r4,r16
   4ad6c:	103ee83a 	callr	r2
   4ad70:	0005883a 	mov	r2,zero
   4ad74:	dfc00217 	ldw	ra,8(sp)
   4ad78:	dc400117 	ldw	r17,4(sp)
   4ad7c:	dc000017 	ldw	r16,0(sp)
   4ad80:	dec00304 	addi	sp,sp,12
   4ad84:	f800283a 	ret
   4ad88:	00800044 	movi	r2,1
   4ad8c:	003ff906 	br	4ad74 <__sigtramp+0x5c>
   4ad90:	008000c4 	movi	r2,3
   4ad94:	003ff706 	br	4ad74 <__sigtramp+0x5c>
   4ad98:	00800084 	movi	r2,2
   4ad9c:	003ff506 	br	4ad74 <__sigtramp+0x5c>
   4ada0:	01402004 	movi	r5,128
   4ada4:	8809883a 	mov	r4,r17
   4ada8:	00464280 	call	46428 <_malloc_r>
   4adac:	8880b715 	stw	r2,732(r17)
   4adb0:	10000626 	beq	r2,zero,4adcc <__sigtramp+0xb4>
   4adb4:	01802004 	movi	r6,128
   4adb8:	000b883a 	mov	r5,zero
   4adbc:	1009883a 	mov	r4,r2
   4adc0:	0046ed40 	call	46ed4 <memset>
   4adc4:	1007883a 	mov	r3,r2
   4adc8:	003fde06 	br	4ad44 <__sigtramp+0x2c>
   4adcc:	00bfffc4 	movi	r2,-1
   4add0:	003fe806 	br	4ad74 <__sigtramp+0x5c>

0004add4 <_kill_r>:
   4add4:	2807883a 	mov	r3,r5
   4add8:	defffe04 	addi	sp,sp,-8
   4addc:	dc000015 	stw	r16,0(sp)
   4ade0:	00800174 	movhi	r2,5
   4ade4:	300b883a 	mov	r5,r6
   4ade8:	2021883a 	mov	r16,r4
   4adec:	1809883a 	mov	r4,r3
   4adf0:	dfc00115 	stw	ra,4(sp)
   4adf4:	100f8315 	stw	zero,15884(r2)
   4adf8:	004da800 	call	4da80 <kill>
   4adfc:	10ffffd8 	cmpnei	r3,r2,-1
   4ae00:	18000426 	beq	r3,zero,4ae14 <_kill_r+0x40>
   4ae04:	dfc00117 	ldw	ra,4(sp)
   4ae08:	dc000017 	ldw	r16,0(sp)
   4ae0c:	dec00204 	addi	sp,sp,8
   4ae10:	f800283a 	ret
   4ae14:	00c00174 	movhi	r3,5
   4ae18:	18cf8317 	ldw	r3,15884(r3)
   4ae1c:	183ff926 	beq	r3,zero,4ae04 <_kill_r+0x30>
   4ae20:	80c00015 	stw	r3,0(r16)
   4ae24:	dfc00117 	ldw	ra,4(sp)
   4ae28:	dc000017 	ldw	r16,0(sp)
   4ae2c:	dec00204 	addi	sp,sp,8
   4ae30:	f800283a 	ret

0004ae34 <_getpid_r>:
   4ae34:	004d92c1 	jmpi	4d92c <getpid>

0004ae38 <__udivdi3>:
   4ae38:	defff504 	addi	sp,sp,-44
   4ae3c:	dc800315 	stw	r18,12(sp)
   4ae40:	dc000115 	stw	r16,4(sp)
   4ae44:	dfc00a15 	stw	ra,40(sp)
   4ae48:	df000915 	stw	fp,36(sp)
   4ae4c:	ddc00815 	stw	r23,32(sp)
   4ae50:	dd800715 	stw	r22,28(sp)
   4ae54:	dd400615 	stw	r21,24(sp)
   4ae58:	dd000515 	stw	r20,20(sp)
   4ae5c:	dcc00415 	stw	r19,16(sp)
   4ae60:	dc400215 	stw	r17,8(sp)
   4ae64:	2025883a 	mov	r18,r4
   4ae68:	2821883a 	mov	r16,r5
   4ae6c:	3800401e 	bne	r7,zero,4af70 <__udivdi3+0x138>
   4ae70:	3023883a 	mov	r17,r6
   4ae74:	2027883a 	mov	r19,r4
   4ae78:	29805d2e 	bgeu	r5,r6,4aff0 <__udivdi3+0x1b8>
   4ae7c:	00bfffd4 	movui	r2,65535
   4ae80:	282d883a 	mov	r22,r5
   4ae84:	1180982e 	bgeu	r2,r6,4b0e8 <__udivdi3+0x2b0>
   4ae88:	00804034 	movhi	r2,256
   4ae8c:	30812536 	bltu	r6,r2,4b324 <__udivdi3+0x4ec>
   4ae90:	00c00604 	movi	r3,24
   4ae94:	30cad83a 	srl	r5,r6,r3
   4ae98:	00800174 	movhi	r2,5
   4ae9c:	01000804 	movi	r4,32
   4aea0:	2885883a 	add	r2,r5,r2
   4aea4:	10800203 	ldbu	r2,8(r2)
   4aea8:	10c5883a 	add	r2,r2,r3
   4aeac:	2087c83a 	sub	r3,r4,r2
   4aeb0:	20800526 	beq	r4,r2,4aec8 <__udivdi3+0x90>
   4aeb4:	80ec983a 	sll	r22,r16,r3
   4aeb8:	9084d83a 	srl	r2,r18,r2
   4aebc:	30e2983a 	sll	r17,r6,r3
   4aec0:	90e6983a 	sll	r19,r18,r3
   4aec4:	15acb03a 	or	r22,r2,r22
   4aec8:	882ad43a 	srli	r21,r17,16
   4aecc:	b009883a 	mov	r4,r22
   4aed0:	8d3fffcc 	andi	r20,r17,65535
   4aed4:	a80b883a 	mov	r5,r21
   4aed8:	0040f700 	call	40f70 <__umodsi3>
   4aedc:	b009883a 	mov	r4,r22
   4aee0:	a80b883a 	mov	r5,r21
   4aee4:	1025883a 	mov	r18,r2
   4aee8:	0040f0c0 	call	40f0c <__udivsi3>
   4aeec:	9008943a 	slli	r4,r18,16
   4aef0:	9806d43a 	srli	r3,r19,16
   4aef4:	1021883a 	mov	r16,r2
   4aef8:	a085383a 	mul	r2,r20,r2
   4aefc:	20c8b03a 	or	r4,r4,r3
   4af00:	2080052e 	bgeu	r4,r2,4af18 <__udivdi3+0xe0>
   4af04:	2449883a 	add	r4,r4,r17
   4af08:	80ffffc4 	addi	r3,r16,-1
   4af0c:	24400136 	bltu	r4,r17,4af14 <__udivdi3+0xdc>
   4af10:	20811a36 	bltu	r4,r2,4b37c <__udivdi3+0x544>
   4af14:	1821883a 	mov	r16,r3
   4af18:	20a5c83a 	sub	r18,r4,r2
   4af1c:	9009883a 	mov	r4,r18
   4af20:	a80b883a 	mov	r5,r21
   4af24:	0040f700 	call	40f70 <__umodsi3>
   4af28:	9009883a 	mov	r4,r18
   4af2c:	a80b883a 	mov	r5,r21
   4af30:	1025883a 	mov	r18,r2
   4af34:	0040f0c0 	call	40f0c <__udivsi3>
   4af38:	9006943a 	slli	r3,r18,16
   4af3c:	a0a9383a 	mul	r20,r20,r2
   4af40:	9cffffcc 	andi	r19,r19,65535
   4af44:	1cc6b03a 	or	r3,r3,r19
   4af48:	1d00052e 	bgeu	r3,r20,4af60 <__udivdi3+0x128>
   4af4c:	88c7883a 	add	r3,r17,r3
   4af50:	113fffc4 	addi	r4,r2,-1
   4af54:	1c400136 	bltu	r3,r17,4af5c <__udivdi3+0x124>
   4af58:	1d010136 	bltu	r3,r20,4b360 <__udivdi3+0x528>
   4af5c:	2005883a 	mov	r2,r4
   4af60:	800c943a 	slli	r6,r16,16
   4af64:	0007883a 	mov	r3,zero
   4af68:	3084b03a 	or	r2,r6,r2
   4af6c:	00000306 	br	4af7c <__udivdi3+0x144>
   4af70:	29c00e2e 	bgeu	r5,r7,4afac <__udivdi3+0x174>
   4af74:	0007883a 	mov	r3,zero
   4af78:	0005883a 	mov	r2,zero
   4af7c:	dfc00a17 	ldw	ra,40(sp)
   4af80:	df000917 	ldw	fp,36(sp)
   4af84:	ddc00817 	ldw	r23,32(sp)
   4af88:	dd800717 	ldw	r22,28(sp)
   4af8c:	dd400617 	ldw	r21,24(sp)
   4af90:	dd000517 	ldw	r20,20(sp)
   4af94:	dcc00417 	ldw	r19,16(sp)
   4af98:	dc800317 	ldw	r18,12(sp)
   4af9c:	dc400217 	ldw	r17,8(sp)
   4afa0:	dc000117 	ldw	r16,4(sp)
   4afa4:	dec00b04 	addi	sp,sp,44
   4afa8:	f800283a 	ret
   4afac:	00bfffd4 	movui	r2,65535
   4afb0:	11c0562e 	bgeu	r2,r7,4b10c <__udivdi3+0x2d4>
   4afb4:	00804034 	movhi	r2,256
   4afb8:	3880d836 	bltu	r7,r2,4b31c <__udivdi3+0x4e4>
   4afbc:	00c00604 	movi	r3,24
   4afc0:	38cad83a 	srl	r5,r7,r3
   4afc4:	00800174 	movhi	r2,5
   4afc8:	01000804 	movi	r4,32
   4afcc:	2885883a 	add	r2,r5,r2
   4afd0:	10800203 	ldbu	r2,8(r2)
   4afd4:	10c5883a 	add	r2,r2,r3
   4afd8:	20adc83a 	sub	r22,r4,r2
   4afdc:	2080801e 	bne	r4,r2,4b1e0 <__udivdi3+0x3a8>
   4afe0:	3c00d236 	bltu	r7,r16,4b32c <__udivdi3+0x4f4>
   4afe4:	9185403a 	cmpgeu	r2,r18,r6
   4afe8:	0007883a 	mov	r3,zero
   4afec:	003fe306 	br	4af7c <__udivdi3+0x144>
   4aff0:	3000401e 	bne	r6,zero,4b0f4 <__udivdi3+0x2bc>
   4aff4:	000b883a 	mov	r5,zero
   4aff8:	01000044 	movi	r4,1
   4affc:	0040f0c0 	call	40f0c <__udivsi3>
   4b000:	1023883a 	mov	r17,r2
   4b004:	88804028 	cmpgeui	r2,r17,256
   4b008:	100490fa 	slli	r2,r2,3
   4b00c:	888ad83a 	srl	r5,r17,r2
   4b010:	00c00174 	movhi	r3,5
   4b014:	01000804 	movi	r4,32
   4b018:	28c7883a 	add	r3,r5,r3
   4b01c:	18c00203 	ldbu	r3,8(r3)
   4b020:	1887883a 	add	r3,r3,r2
   4b024:	20cdc83a 	sub	r6,r4,r3
   4b028:	20c03b1e 	bne	r4,r3,4b118 <__udivdi3+0x2e0>
   4b02c:	8828d43a 	srli	r20,r17,16
   4b030:	8461c83a 	sub	r16,r16,r17
   4b034:	8d7fffcc 	andi	r21,r17,65535
   4b038:	00c00044 	movi	r3,1
   4b03c:	8009883a 	mov	r4,r16
   4b040:	a00b883a 	mov	r5,r20
   4b044:	d8c00015 	stw	r3,0(sp)
   4b048:	0040f700 	call	40f70 <__umodsi3>
   4b04c:	8009883a 	mov	r4,r16
   4b050:	a00b883a 	mov	r5,r20
   4b054:	1025883a 	mov	r18,r2
   4b058:	0040f0c0 	call	40f0c <__udivsi3>
   4b05c:	9008943a 	slli	r4,r18,16
   4b060:	980ad43a 	srli	r5,r19,16
   4b064:	1021883a 	mov	r16,r2
   4b068:	1545383a 	mul	r2,r2,r21
   4b06c:	2148b03a 	or	r4,r4,r5
   4b070:	d8c00017 	ldw	r3,0(sp)
   4b074:	2080052e 	bgeu	r4,r2,4b08c <__udivdi3+0x254>
   4b078:	2449883a 	add	r4,r4,r17
   4b07c:	817fffc4 	addi	r5,r16,-1
   4b080:	24400136 	bltu	r4,r17,4b088 <__udivdi3+0x250>
   4b084:	2080b836 	bltu	r4,r2,4b368 <__udivdi3+0x530>
   4b088:	2821883a 	mov	r16,r5
   4b08c:	20a5c83a 	sub	r18,r4,r2
   4b090:	9009883a 	mov	r4,r18
   4b094:	a00b883a 	mov	r5,r20
   4b098:	d8c00015 	stw	r3,0(sp)
   4b09c:	0040f700 	call	40f70 <__umodsi3>
   4b0a0:	9009883a 	mov	r4,r18
   4b0a4:	a00b883a 	mov	r5,r20
   4b0a8:	1025883a 	mov	r18,r2
   4b0ac:	0040f0c0 	call	40f0c <__udivsi3>
   4b0b0:	9008943a 	slli	r4,r18,16
   4b0b4:	156b383a 	mul	r21,r2,r21
   4b0b8:	9cffffcc 	andi	r19,r19,65535
   4b0bc:	24c8b03a 	or	r4,r4,r19
   4b0c0:	d8c00017 	ldw	r3,0(sp)
   4b0c4:	2540052e 	bgeu	r4,r21,4b0dc <__udivdi3+0x2a4>
   4b0c8:	8909883a 	add	r4,r17,r4
   4b0cc:	117fffc4 	addi	r5,r2,-1
   4b0d0:	24400136 	bltu	r4,r17,4b0d8 <__udivdi3+0x2a0>
   4b0d4:	2540a036 	bltu	r4,r21,4b358 <__udivdi3+0x520>
   4b0d8:	2805883a 	mov	r2,r5
   4b0dc:	800c943a 	slli	r6,r16,16
   4b0e0:	3084b03a 	or	r2,r6,r2
   4b0e4:	003fa506 	br	4af7c <__udivdi3+0x144>
   4b0e8:	30c04028 	cmpgeui	r3,r6,256
   4b0ec:	180690fa 	slli	r3,r3,3
   4b0f0:	003f6806 	br	4ae94 <__udivdi3+0x5c>
   4b0f4:	00bfffd4 	movui	r2,65535
   4b0f8:	11bfc22e 	bgeu	r2,r6,4b004 <__udivdi3+0x1cc>
   4b0fc:	00804034 	movhi	r2,256
   4b100:	30809c2e 	bgeu	r6,r2,4b374 <__udivdi3+0x53c>
   4b104:	00800404 	movi	r2,16
   4b108:	003fc006 	br	4b00c <__udivdi3+0x1d4>
   4b10c:	38c04028 	cmpgeui	r3,r7,256
   4b110:	180690fa 	slli	r3,r3,3
   4b114:	003faa06 	br	4afc0 <__udivdi3+0x188>
   4b118:	89a2983a 	sll	r17,r17,r6
   4b11c:	80ead83a 	srl	r21,r16,r3
   4b120:	81a0983a 	sll	r16,r16,r6
   4b124:	8828d43a 	srli	r20,r17,16
   4b128:	90c6d83a 	srl	r3,r18,r3
   4b12c:	a809883a 	mov	r4,r21
   4b130:	a00b883a 	mov	r5,r20
   4b134:	1c2cb03a 	or	r22,r3,r16
   4b138:	91a6983a 	sll	r19,r18,r6
   4b13c:	0040f700 	call	40f70 <__umodsi3>
   4b140:	a809883a 	mov	r4,r21
   4b144:	a00b883a 	mov	r5,r20
   4b148:	1021883a 	mov	r16,r2
   4b14c:	0040f0c0 	call	40f0c <__udivsi3>
   4b150:	8008943a 	slli	r4,r16,16
   4b154:	b00ad43a 	srli	r5,r22,16
   4b158:	8d7fffcc 	andi	r21,r17,65535
   4b15c:	1025883a 	mov	r18,r2
   4b160:	a885383a 	mul	r2,r21,r2
   4b164:	2148b03a 	or	r4,r4,r5
   4b168:	2080062e 	bgeu	r4,r2,4b184 <__udivdi3+0x34c>
   4b16c:	2449883a 	add	r4,r4,r17
   4b170:	90ffffc4 	addi	r3,r18,-1
   4b174:	24407636 	bltu	r4,r17,4b350 <__udivdi3+0x518>
   4b178:	2080752e 	bgeu	r4,r2,4b350 <__udivdi3+0x518>
   4b17c:	94bfff84 	addi	r18,r18,-2
   4b180:	2449883a 	add	r4,r4,r17
   4b184:	20a1c83a 	sub	r16,r4,r2
   4b188:	8009883a 	mov	r4,r16
   4b18c:	a00b883a 	mov	r5,r20
   4b190:	0040f700 	call	40f70 <__umodsi3>
   4b194:	8009883a 	mov	r4,r16
   4b198:	a00b883a 	mov	r5,r20
   4b19c:	1021883a 	mov	r16,r2
   4b1a0:	8020943a 	slli	r16,r16,16
   4b1a4:	0040f0c0 	call	40f0c <__udivsi3>
   4b1a8:	a889383a 	mul	r4,r21,r2
   4b1ac:	b5bfffcc 	andi	r22,r22,65535
   4b1b0:	85a0b03a 	or	r16,r16,r22
   4b1b4:	8100062e 	bgeu	r16,r4,4b1d0 <__udivdi3+0x398>
   4b1b8:	8461883a 	add	r16,r16,r17
   4b1bc:	10ffffc4 	addi	r3,r2,-1
   4b1c0:	84405f36 	bltu	r16,r17,4b340 <__udivdi3+0x508>
   4b1c4:	81005e2e 	bgeu	r16,r4,4b340 <__udivdi3+0x508>
   4b1c8:	10bfff84 	addi	r2,r2,-2
   4b1cc:	8461883a 	add	r16,r16,r17
   4b1d0:	9006943a 	slli	r3,r18,16
   4b1d4:	8121c83a 	sub	r16,r16,r4
   4b1d8:	1886b03a 	or	r3,r3,r2
   4b1dc:	003f9706 	br	4b03c <__udivdi3+0x204>
   4b1e0:	30aed83a 	srl	r23,r6,r2
   4b1e4:	3d8e983a 	sll	r7,r7,r22
   4b1e8:	80a8d83a 	srl	r20,r16,r2
   4b1ec:	90a2d83a 	srl	r17,r18,r2
   4b1f0:	b9eeb03a 	or	r23,r23,r7
   4b1f4:	b826d43a 	srli	r19,r23,16
   4b1f8:	8584983a 	sll	r2,r16,r22
   4b1fc:	a009883a 	mov	r4,r20
   4b200:	980b883a 	mov	r5,r19
   4b204:	35aa983a 	sll	r21,r6,r22
   4b208:	88a2b03a 	or	r17,r17,r2
   4b20c:	0040f700 	call	40f70 <__umodsi3>
   4b210:	a009883a 	mov	r4,r20
   4b214:	980b883a 	mov	r5,r19
   4b218:	1029883a 	mov	r20,r2
   4b21c:	0040f0c0 	call	40f0c <__udivsi3>
   4b220:	a008943a 	slli	r4,r20,16
   4b224:	8806d43a 	srli	r3,r17,16
   4b228:	bf3fffcc 	andi	fp,r23,65535
   4b22c:	1021883a 	mov	r16,r2
   4b230:	e085383a 	mul	r2,fp,r2
   4b234:	20c8b03a 	or	r4,r4,r3
   4b238:	2080062e 	bgeu	r4,r2,4b254 <__udivdi3+0x41c>
   4b23c:	25c9883a 	add	r4,r4,r23
   4b240:	80ffffc4 	addi	r3,r16,-1
   4b244:	25c04036 	bltu	r4,r23,4b348 <__udivdi3+0x510>
   4b248:	20803f2e 	bgeu	r4,r2,4b348 <__udivdi3+0x510>
   4b24c:	843fff84 	addi	r16,r16,-2
   4b250:	25c9883a 	add	r4,r4,r23
   4b254:	20a9c83a 	sub	r20,r4,r2
   4b258:	980b883a 	mov	r5,r19
   4b25c:	a009883a 	mov	r4,r20
   4b260:	0040f700 	call	40f70 <__umodsi3>
   4b264:	980b883a 	mov	r5,r19
   4b268:	a009883a 	mov	r4,r20
   4b26c:	1027883a 	mov	r19,r2
   4b270:	0040f0c0 	call	40f0c <__udivsi3>
   4b274:	9806943a 	slli	r3,r19,16
   4b278:	e0b9383a 	mul	fp,fp,r2
   4b27c:	8c7fffcc 	andi	r17,r17,65535
   4b280:	1c46b03a 	or	r3,r3,r17
   4b284:	1009883a 	mov	r4,r2
   4b288:	1f00062e 	bgeu	r3,fp,4b2a4 <__udivdi3+0x46c>
   4b28c:	1dc7883a 	add	r3,r3,r23
   4b290:	10bfffc4 	addi	r2,r2,-1
   4b294:	1dc02836 	bltu	r3,r23,4b338 <__udivdi3+0x500>
   4b298:	1f00272e 	bgeu	r3,fp,4b338 <__udivdi3+0x500>
   4b29c:	213fff84 	addi	r4,r4,-2
   4b2a0:	1dc7883a 	add	r3,r3,r23
   4b2a4:	8004943a 	slli	r2,r16,16
   4b2a8:	a80ed43a 	srli	r7,r21,16
   4b2ac:	217fffcc 	andi	r5,r4,65535
   4b2b0:	1104b03a 	or	r2,r2,r4
   4b2b4:	1008d43a 	srli	r4,r2,16
   4b2b8:	ad7fffcc 	andi	r21,r21,65535
   4b2bc:	2d51383a 	mul	r8,r5,r21
   4b2c0:	256b383a 	mul	r21,r4,r21
   4b2c4:	29cb383a 	mul	r5,r5,r7
   4b2c8:	400cd43a 	srli	r6,r8,16
   4b2cc:	21c9383a 	mul	r4,r4,r7
   4b2d0:	2d4b883a 	add	r5,r5,r21
   4b2d4:	314b883a 	add	r5,r6,r5
   4b2d8:	1f07c83a 	sub	r3,r3,fp
   4b2dc:	2d40022e 	bgeu	r5,r21,4b2e8 <__udivdi3+0x4b0>
   4b2e0:	01800074 	movhi	r6,1
   4b2e4:	2189883a 	add	r4,r4,r6
   4b2e8:	280cd43a 	srli	r6,r5,16
   4b2ec:	3109883a 	add	r4,r6,r4
   4b2f0:	19000836 	bltu	r3,r4,4b314 <__udivdi3+0x4dc>
   4b2f4:	19000226 	beq	r3,r4,4b300 <__udivdi3+0x4c8>
   4b2f8:	0007883a 	mov	r3,zero
   4b2fc:	003f1f06 	br	4af7c <__udivdi3+0x144>
   4b300:	280a943a 	slli	r5,r5,16
   4b304:	9588983a 	sll	r4,r18,r22
   4b308:	423fffcc 	andi	r8,r8,65535
   4b30c:	2a0b883a 	add	r5,r5,r8
   4b310:	217ff92e 	bgeu	r4,r5,4b2f8 <__udivdi3+0x4c0>
   4b314:	10bfffc4 	addi	r2,r2,-1
   4b318:	003ff706 	br	4b2f8 <__udivdi3+0x4c0>
   4b31c:	00c00404 	movi	r3,16
   4b320:	003f2706 	br	4afc0 <__udivdi3+0x188>
   4b324:	00c00404 	movi	r3,16
   4b328:	003eda06 	br	4ae94 <__udivdi3+0x5c>
   4b32c:	0007883a 	mov	r3,zero
   4b330:	00800044 	movi	r2,1
   4b334:	003f1106 	br	4af7c <__udivdi3+0x144>
   4b338:	1009883a 	mov	r4,r2
   4b33c:	003fd906 	br	4b2a4 <__udivdi3+0x46c>
   4b340:	1805883a 	mov	r2,r3
   4b344:	003fa206 	br	4b1d0 <__udivdi3+0x398>
   4b348:	1821883a 	mov	r16,r3
   4b34c:	003fc106 	br	4b254 <__udivdi3+0x41c>
   4b350:	1825883a 	mov	r18,r3
   4b354:	003f8b06 	br	4b184 <__udivdi3+0x34c>
   4b358:	10bfff84 	addi	r2,r2,-2
   4b35c:	003f5f06 	br	4b0dc <__udivdi3+0x2a4>
   4b360:	10bfff84 	addi	r2,r2,-2
   4b364:	003efe06 	br	4af60 <__udivdi3+0x128>
   4b368:	843fff84 	addi	r16,r16,-2
   4b36c:	2449883a 	add	r4,r4,r17
   4b370:	003f4606 	br	4b08c <__udivdi3+0x254>
   4b374:	00800604 	movi	r2,24
   4b378:	003f2406 	br	4b00c <__udivdi3+0x1d4>
   4b37c:	843fff84 	addi	r16,r16,-2
   4b380:	2449883a 	add	r4,r4,r17
   4b384:	003ee406 	br	4af18 <__udivdi3+0xe0>

0004b388 <__umoddi3>:
   4b388:	defff504 	addi	sp,sp,-44
   4b38c:	dcc00415 	stw	r19,16(sp)
   4b390:	dc000115 	stw	r16,4(sp)
   4b394:	dfc00a15 	stw	ra,40(sp)
   4b398:	df000915 	stw	fp,36(sp)
   4b39c:	ddc00815 	stw	r23,32(sp)
   4b3a0:	dd800715 	stw	r22,28(sp)
   4b3a4:	dd400615 	stw	r21,24(sp)
   4b3a8:	dd000515 	stw	r20,20(sp)
   4b3ac:	dc800315 	stw	r18,12(sp)
   4b3b0:	dc400215 	stw	r17,8(sp)
   4b3b4:	2827883a 	mov	r19,r5
   4b3b8:	2021883a 	mov	r16,r4
   4b3bc:	38003b1e 	bne	r7,zero,4b4ac <__umoddi3+0x124>
   4b3c0:	3029883a 	mov	r20,r6
   4b3c4:	2025883a 	mov	r18,r4
   4b3c8:	29805d2e 	bgeu	r5,r6,4b540 <__umoddi3+0x1b8>
   4b3cc:	00bfffd4 	movui	r2,65535
   4b3d0:	282f883a 	mov	r23,r5
   4b3d4:	11808e2e 	bgeu	r2,r6,4b610 <__umoddi3+0x288>
   4b3d8:	00804034 	movhi	r2,256
   4b3dc:	30811e36 	bltu	r6,r2,4b858 <__umoddi3+0x4d0>
   4b3e0:	00c00604 	movi	r3,24
   4b3e4:	30cad83a 	srl	r5,r6,r3
   4b3e8:	00800174 	movhi	r2,5
   4b3ec:	01000804 	movi	r4,32
   4b3f0:	2885883a 	add	r2,r5,r2
   4b3f4:	10800203 	ldbu	r2,8(r2)
   4b3f8:	10c5883a 	add	r2,r2,r3
   4b3fc:	20a3c83a 	sub	r17,r4,r2
   4b400:	20800526 	beq	r4,r2,4b418 <__umoddi3+0x90>
   4b404:	9c6e983a 	sll	r23,r19,r17
   4b408:	8084d83a 	srl	r2,r16,r2
   4b40c:	3468983a 	sll	r20,r6,r17
   4b410:	8464983a 	sll	r18,r16,r17
   4b414:	15eeb03a 	or	r23,r2,r23
   4b418:	a02cd43a 	srli	r22,r20,16
   4b41c:	b809883a 	mov	r4,r23
   4b420:	a57fffcc 	andi	r21,r20,65535
   4b424:	b00b883a 	mov	r5,r22
   4b428:	0040f700 	call	40f70 <__umodsi3>
   4b42c:	b809883a 	mov	r4,r23
   4b430:	b00b883a 	mov	r5,r22
   4b434:	1021883a 	mov	r16,r2
   4b438:	0040f0c0 	call	40f0c <__udivsi3>
   4b43c:	8008943a 	slli	r4,r16,16
   4b440:	9006d43a 	srli	r3,r18,16
   4b444:	a885383a 	mul	r2,r21,r2
   4b448:	20c8b03a 	or	r4,r4,r3
   4b44c:	2080032e 	bgeu	r4,r2,4b45c <__umoddi3+0xd4>
   4b450:	2509883a 	add	r4,r4,r20
   4b454:	25000136 	bltu	r4,r20,4b45c <__umoddi3+0xd4>
   4b458:	20810d36 	bltu	r4,r2,4b890 <__umoddi3+0x508>
   4b45c:	20a7c83a 	sub	r19,r4,r2
   4b460:	b00b883a 	mov	r5,r22
   4b464:	9809883a 	mov	r4,r19
   4b468:	0040f700 	call	40f70 <__umodsi3>
   4b46c:	1021883a 	mov	r16,r2
   4b470:	b00b883a 	mov	r5,r22
   4b474:	9809883a 	mov	r4,r19
   4b478:	8020943a 	slli	r16,r16,16
   4b47c:	0040f0c0 	call	40f0c <__udivsi3>
   4b480:	a8ab383a 	mul	r21,r21,r2
   4b484:	94bfffcc 	andi	r18,r18,65535
   4b488:	84a0b03a 	or	r16,r16,r18
   4b48c:	8540032e 	bgeu	r16,r21,4b49c <__umoddi3+0x114>
   4b490:	8521883a 	add	r16,r16,r20
   4b494:	85000136 	bltu	r16,r20,4b49c <__umoddi3+0x114>
   4b498:	8540f736 	bltu	r16,r21,4b878 <__umoddi3+0x4f0>
   4b49c:	8561c83a 	sub	r16,r16,r21
   4b4a0:	8444d83a 	srl	r2,r16,r17
   4b4a4:	0007883a 	mov	r3,zero
   4b4a8:	00000406 	br	4b4bc <__umoddi3+0x134>
   4b4ac:	2807883a 	mov	r3,r5
   4b4b0:	200b883a 	mov	r5,r4
   4b4b4:	99c00d2e 	bgeu	r19,r7,4b4ec <__umoddi3+0x164>
   4b4b8:	2005883a 	mov	r2,r4
   4b4bc:	dfc00a17 	ldw	ra,40(sp)
   4b4c0:	df000917 	ldw	fp,36(sp)
   4b4c4:	ddc00817 	ldw	r23,32(sp)
   4b4c8:	dd800717 	ldw	r22,28(sp)
   4b4cc:	dd400617 	ldw	r21,24(sp)
   4b4d0:	dd000517 	ldw	r20,20(sp)
   4b4d4:	dcc00417 	ldw	r19,16(sp)
   4b4d8:	dc800317 	ldw	r18,12(sp)
   4b4dc:	dc400217 	ldw	r17,8(sp)
   4b4e0:	dc000117 	ldw	r16,4(sp)
   4b4e4:	dec00b04 	addi	sp,sp,44
   4b4e8:	f800283a 	ret
   4b4ec:	00bfffd4 	movui	r2,65535
   4b4f0:	11c0502e 	bgeu	r2,r7,4b634 <__umoddi3+0x2ac>
   4b4f4:	00804034 	movhi	r2,256
   4b4f8:	3880d936 	bltu	r7,r2,4b860 <__umoddi3+0x4d8>
   4b4fc:	01000604 	movi	r4,24
   4b500:	3912d83a 	srl	r9,r7,r4
   4b504:	00800174 	movhi	r2,5
   4b508:	02000804 	movi	r8,32
   4b50c:	4885883a 	add	r2,r9,r2
   4b510:	15000203 	ldbu	r20,8(r2)
   4b514:	a129883a 	add	r20,r20,r4
   4b518:	4525c83a 	sub	r18,r8,r20
   4b51c:	4500731e 	bne	r8,r20,4b6ec <__umoddi3+0x364>
   4b520:	3cc00136 	bltu	r7,r19,4b528 <__umoddi3+0x1a0>
   4b524:	81800436 	bltu	r16,r6,4b538 <__umoddi3+0x1b0>
   4b528:	818bc83a 	sub	r5,r16,r6
   4b52c:	99cfc83a 	sub	r7,r19,r7
   4b530:	8147803a 	cmpltu	r3,r16,r5
   4b534:	38c7c83a 	sub	r3,r7,r3
   4b538:	2805883a 	mov	r2,r5
   4b53c:	003fdf06 	br	4b4bc <__umoddi3+0x134>
   4b540:	3000361e 	bne	r6,zero,4b61c <__umoddi3+0x294>
   4b544:	000b883a 	mov	r5,zero
   4b548:	01000044 	movi	r4,1
   4b54c:	0040f0c0 	call	40f0c <__udivsi3>
   4b550:	1029883a 	mov	r20,r2
   4b554:	a0804028 	cmpgeui	r2,r20,256
   4b558:	100490fa 	slli	r2,r2,3
   4b55c:	a08ad83a 	srl	r5,r20,r2
   4b560:	00c00174 	movhi	r3,5
   4b564:	01000804 	movi	r4,32
   4b568:	28c7883a 	add	r3,r5,r3
   4b56c:	1dc00203 	ldbu	r23,8(r3)
   4b570:	b8af883a 	add	r23,r23,r2
   4b574:	25e3c83a 	sub	r17,r4,r23
   4b578:	25c0311e 	bne	r4,r23,4b640 <__umoddi3+0x2b8>
   4b57c:	a02ad43a 	srli	r21,r20,16
   4b580:	9d27c83a 	sub	r19,r19,r20
   4b584:	a5bfffcc 	andi	r22,r20,65535
   4b588:	a80b883a 	mov	r5,r21
   4b58c:	9809883a 	mov	r4,r19
   4b590:	0040f700 	call	40f70 <__umodsi3>
   4b594:	9809883a 	mov	r4,r19
   4b598:	a80b883a 	mov	r5,r21
   4b59c:	1021883a 	mov	r16,r2
   4b5a0:	0040f0c0 	call	40f0c <__udivsi3>
   4b5a4:	8008943a 	slli	r4,r16,16
   4b5a8:	9006d43a 	srli	r3,r18,16
   4b5ac:	1585383a 	mul	r2,r2,r22
   4b5b0:	20c8b03a 	or	r4,r4,r3
   4b5b4:	2080032e 	bgeu	r4,r2,4b5c4 <__umoddi3+0x23c>
   4b5b8:	2509883a 	add	r4,r4,r20
   4b5bc:	25000136 	bltu	r4,r20,4b5c4 <__umoddi3+0x23c>
   4b5c0:	2080af36 	bltu	r4,r2,4b880 <__umoddi3+0x4f8>
   4b5c4:	20a7c83a 	sub	r19,r4,r2
   4b5c8:	a80b883a 	mov	r5,r21
   4b5cc:	9809883a 	mov	r4,r19
   4b5d0:	0040f700 	call	40f70 <__umodsi3>
   4b5d4:	1021883a 	mov	r16,r2
   4b5d8:	a80b883a 	mov	r5,r21
   4b5dc:	9809883a 	mov	r4,r19
   4b5e0:	8020943a 	slli	r16,r16,16
   4b5e4:	0040f0c0 	call	40f0c <__udivsi3>
   4b5e8:	1585383a 	mul	r2,r2,r22
   4b5ec:	94bfffcc 	andi	r18,r18,65535
   4b5f0:	84a0b03a 	or	r16,r16,r18
   4b5f4:	8080042e 	bgeu	r16,r2,4b608 <__umoddi3+0x280>
   4b5f8:	8521883a 	add	r16,r16,r20
   4b5fc:	85000236 	bltu	r16,r20,4b608 <__umoddi3+0x280>
   4b600:	8080012e 	bgeu	r16,r2,4b608 <__umoddi3+0x280>
   4b604:	8521883a 	add	r16,r16,r20
   4b608:	80a1c83a 	sub	r16,r16,r2
   4b60c:	003fa406 	br	4b4a0 <__umoddi3+0x118>
   4b610:	30c04028 	cmpgeui	r3,r6,256
   4b614:	180690fa 	slli	r3,r3,3
   4b618:	003f7206 	br	4b3e4 <__umoddi3+0x5c>
   4b61c:	00bfffd4 	movui	r2,65535
   4b620:	11bfcc2e 	bgeu	r2,r6,4b554 <__umoddi3+0x1cc>
   4b624:	00804034 	movhi	r2,256
   4b628:	3080972e 	bgeu	r6,r2,4b888 <__umoddi3+0x500>
   4b62c:	00800404 	movi	r2,16
   4b630:	003fca06 	br	4b55c <__umoddi3+0x1d4>
   4b634:	39004028 	cmpgeui	r4,r7,256
   4b638:	200890fa 	slli	r4,r4,3
   4b63c:	003fb006 	br	4b500 <__umoddi3+0x178>
   4b640:	a468983a 	sll	r20,r20,r17
   4b644:	9decd83a 	srl	r22,r19,r23
   4b648:	85eed83a 	srl	r23,r16,r23
   4b64c:	a02ad43a 	srli	r21,r20,16
   4b650:	b009883a 	mov	r4,r22
   4b654:	9c66983a 	sll	r19,r19,r17
   4b658:	a80b883a 	mov	r5,r21
   4b65c:	0040f700 	call	40f70 <__umodsi3>
   4b660:	b009883a 	mov	r4,r22
   4b664:	a80b883a 	mov	r5,r21
   4b668:	1025883a 	mov	r18,r2
   4b66c:	bceeb03a 	or	r23,r23,r19
   4b670:	0040f0c0 	call	40f0c <__udivsi3>
   4b674:	9008943a 	slli	r4,r18,16
   4b678:	b806d43a 	srli	r3,r23,16
   4b67c:	a5bfffcc 	andi	r22,r20,65535
   4b680:	b085383a 	mul	r2,r22,r2
   4b684:	20c8b03a 	or	r4,r4,r3
   4b688:	8464983a 	sll	r18,r16,r17
   4b68c:	2080042e 	bgeu	r4,r2,4b6a0 <__umoddi3+0x318>
   4b690:	2509883a 	add	r4,r4,r20
   4b694:	25000236 	bltu	r4,r20,4b6a0 <__umoddi3+0x318>
   4b698:	2080012e 	bgeu	r4,r2,4b6a0 <__umoddi3+0x318>
   4b69c:	2509883a 	add	r4,r4,r20
   4b6a0:	20a1c83a 	sub	r16,r4,r2
   4b6a4:	a80b883a 	mov	r5,r21
   4b6a8:	8009883a 	mov	r4,r16
   4b6ac:	0040f700 	call	40f70 <__umodsi3>
   4b6b0:	1027883a 	mov	r19,r2
   4b6b4:	a80b883a 	mov	r5,r21
   4b6b8:	8009883a 	mov	r4,r16
   4b6bc:	9826943a 	slli	r19,r19,16
   4b6c0:	0040f0c0 	call	40f0c <__udivsi3>
   4b6c4:	b085383a 	mul	r2,r22,r2
   4b6c8:	bdffffcc 	andi	r23,r23,65535
   4b6cc:	9de6b03a 	or	r19,r19,r23
   4b6d0:	9880042e 	bgeu	r19,r2,4b6e4 <__umoddi3+0x35c>
   4b6d4:	9d27883a 	add	r19,r19,r20
   4b6d8:	9d000236 	bltu	r19,r20,4b6e4 <__umoddi3+0x35c>
   4b6dc:	9880012e 	bgeu	r19,r2,4b6e4 <__umoddi3+0x35c>
   4b6e0:	9d27883a 	add	r19,r19,r20
   4b6e4:	98a7c83a 	sub	r19,r19,r2
   4b6e8:	003fa706 	br	4b588 <__umoddi3+0x200>
   4b6ec:	352cd83a 	srl	r22,r6,r20
   4b6f0:	3c8e983a 	sll	r7,r7,r18
   4b6f4:	9d2ed83a 	srl	r23,r19,r20
   4b6f8:	8504d83a 	srl	r2,r16,r20
   4b6fc:	b1ecb03a 	or	r22,r22,r7
   4b700:	b02ad43a 	srli	r21,r22,16
   4b704:	9ca6983a 	sll	r19,r19,r18
   4b708:	b809883a 	mov	r4,r23
   4b70c:	a80b883a 	mov	r5,r21
   4b710:	34a2983a 	sll	r17,r6,r18
   4b714:	14e6b03a 	or	r19,r2,r19
   4b718:	0040f700 	call	40f70 <__umodsi3>
   4b71c:	b809883a 	mov	r4,r23
   4b720:	a80b883a 	mov	r5,r21
   4b724:	102f883a 	mov	r23,r2
   4b728:	0040f0c0 	call	40f0c <__udivsi3>
   4b72c:	b808943a 	slli	r4,r23,16
   4b730:	9806d43a 	srli	r3,r19,16
   4b734:	b1bfffcc 	andi	r6,r22,65535
   4b738:	1039883a 	mov	fp,r2
   4b73c:	3085383a 	mul	r2,r6,r2
   4b740:	20c8b03a 	or	r4,r4,r3
   4b744:	84ae983a 	sll	r23,r16,r18
   4b748:	2080062e 	bgeu	r4,r2,4b764 <__umoddi3+0x3dc>
   4b74c:	2589883a 	add	r4,r4,r22
   4b750:	e0ffffc4 	addi	r3,fp,-1
   4b754:	25804636 	bltu	r4,r22,4b870 <__umoddi3+0x4e8>
   4b758:	2080452e 	bgeu	r4,r2,4b870 <__umoddi3+0x4e8>
   4b75c:	e73fff84 	addi	fp,fp,-2
   4b760:	2589883a 	add	r4,r4,r22
   4b764:	20a1c83a 	sub	r16,r4,r2
   4b768:	8009883a 	mov	r4,r16
   4b76c:	a80b883a 	mov	r5,r21
   4b770:	d9800015 	stw	r6,0(sp)
   4b774:	0040f700 	call	40f70 <__umodsi3>
   4b778:	a80b883a 	mov	r5,r21
   4b77c:	8009883a 	mov	r4,r16
   4b780:	1021883a 	mov	r16,r2
   4b784:	0040f0c0 	call	40f0c <__udivsi3>
   4b788:	d9800017 	ldw	r6,0(sp)
   4b78c:	8006943a 	slli	r3,r16,16
   4b790:	9cffffcc 	andi	r19,r19,65535
   4b794:	308b383a 	mul	r5,r6,r2
   4b798:	1cc6b03a 	or	r3,r3,r19
   4b79c:	1940062e 	bgeu	r3,r5,4b7b8 <__umoddi3+0x430>
   4b7a0:	1d87883a 	add	r3,r3,r22
   4b7a4:	113fffc4 	addi	r4,r2,-1
   4b7a8:	1d802f36 	bltu	r3,r22,4b868 <__umoddi3+0x4e0>
   4b7ac:	19402e2e 	bgeu	r3,r5,4b868 <__umoddi3+0x4e0>
   4b7b0:	10bfff84 	addi	r2,r2,-2
   4b7b4:	1d87883a 	add	r3,r3,r22
   4b7b8:	e038943a 	slli	fp,fp,16
   4b7bc:	113fffcc 	andi	r4,r2,65535
   4b7c0:	8810d43a 	srli	r8,r17,16
   4b7c4:	e0b8b03a 	or	fp,fp,r2
   4b7c8:	e038d43a 	srli	fp,fp,16
   4b7cc:	89bfffcc 	andi	r6,r17,65535
   4b7d0:	218f383a 	mul	r7,r4,r6
   4b7d4:	e18d383a 	mul	r6,fp,r6
   4b7d8:	2209383a 	mul	r4,r4,r8
   4b7dc:	3804d43a 	srli	r2,r7,16
   4b7e0:	e239383a 	mul	fp,fp,r8
   4b7e4:	2189883a 	add	r4,r4,r6
   4b7e8:	1105883a 	add	r2,r2,r4
   4b7ec:	1947c83a 	sub	r3,r3,r5
   4b7f0:	1180022e 	bgeu	r2,r6,4b7fc <__umoddi3+0x474>
   4b7f4:	01000074 	movhi	r4,1
   4b7f8:	e139883a 	add	fp,fp,r4
   4b7fc:	1008d43a 	srli	r4,r2,16
   4b800:	1004943a 	slli	r2,r2,16
   4b804:	39ffffcc 	andi	r7,r7,65535
   4b808:	2709883a 	add	r4,r4,fp
   4b80c:	11c5883a 	add	r2,r2,r7
   4b810:	19000b36 	bltu	r3,r4,4b840 <__umoddi3+0x4b8>
   4b814:	19000926 	beq	r3,r4,4b83c <__umoddi3+0x4b4>
   4b818:	b885c83a 	sub	r2,r23,r2
   4b81c:	b8af803a 	cmpltu	r23,r23,r2
   4b820:	1907c83a 	sub	r3,r3,r4
   4b824:	1dc7c83a 	sub	r3,r3,r23
   4b828:	1d28983a 	sll	r20,r3,r20
   4b82c:	1484d83a 	srl	r2,r2,r18
   4b830:	1c86d83a 	srl	r3,r3,r18
   4b834:	a084b03a 	or	r2,r20,r2
   4b838:	003f2006 	br	4b4bc <__umoddi3+0x134>
   4b83c:	b8bff62e 	bgeu	r23,r2,4b818 <__umoddi3+0x490>
   4b840:	1463c83a 	sub	r17,r2,r17
   4b844:	1445803a 	cmpltu	r2,r2,r17
   4b848:	1585883a 	add	r2,r2,r22
   4b84c:	2089c83a 	sub	r4,r4,r2
   4b850:	8805883a 	mov	r2,r17
   4b854:	003ff006 	br	4b818 <__umoddi3+0x490>
   4b858:	00c00404 	movi	r3,16
   4b85c:	003ee106 	br	4b3e4 <__umoddi3+0x5c>
   4b860:	01000404 	movi	r4,16
   4b864:	003f2606 	br	4b500 <__umoddi3+0x178>
   4b868:	2005883a 	mov	r2,r4
   4b86c:	003fd206 	br	4b7b8 <__umoddi3+0x430>
   4b870:	1839883a 	mov	fp,r3
   4b874:	003fbb06 	br	4b764 <__umoddi3+0x3dc>
   4b878:	8521883a 	add	r16,r16,r20
   4b87c:	003f0706 	br	4b49c <__umoddi3+0x114>
   4b880:	2509883a 	add	r4,r4,r20
   4b884:	003f4f06 	br	4b5c4 <__umoddi3+0x23c>
   4b888:	00800604 	movi	r2,24
   4b88c:	003f3306 	br	4b55c <__umoddi3+0x1d4>
   4b890:	2509883a 	add	r4,r4,r20
   4b894:	003ef106 	br	4b45c <__umoddi3+0xd4>

0004b898 <__adddf3>:
   4b898:	00c00434 	movhi	r3,16
   4b89c:	18ffffc4 	addi	r3,r3,-1
   4b8a0:	defffa04 	addi	sp,sp,-24
   4b8a4:	2810d7fa 	srli	r8,r5,31
   4b8a8:	3804d53a 	srli	r2,r7,20
   4b8ac:	28d4703a 	and	r10,r5,r3
   4b8b0:	38d2703a 	and	r9,r7,r3
   4b8b4:	280ad53a 	srli	r5,r5,20
   4b8b8:	501490fa 	slli	r10,r10,3
   4b8bc:	481290fa 	slli	r9,r9,3
   4b8c0:	3016d77a 	srli	r11,r6,29
   4b8c4:	dc400115 	stw	r17,4(sp)
   4b8c8:	380ed7fa 	srli	r7,r7,31
   4b8cc:	2022d77a 	srli	r17,r4,29
   4b8d0:	dd000415 	stw	r20,16(sp)
   4b8d4:	dcc00315 	stw	r19,12(sp)
   4b8d8:	dc000015 	stw	r16,0(sp)
   4b8dc:	1081ffcc 	andi	r2,r2,2047
   4b8e0:	2c01ffcc 	andi	r16,r5,2047
   4b8e4:	dfc00515 	stw	ra,20(sp)
   4b8e8:	dc800215 	stw	r18,8(sp)
   4b8ec:	201890fa 	slli	r12,r4,3
   4b8f0:	301a90fa 	slli	r13,r6,3
   4b8f4:	4027883a 	mov	r19,r8
   4b8f8:	45003fcc 	andi	r20,r8,255
   4b8fc:	8aa2b03a 	or	r17,r17,r10
   4b900:	5a56b03a 	or	r11,r11,r9
   4b904:	808bc83a 	sub	r5,r16,r2
   4b908:	41c07526 	beq	r8,r7,4bae0 <__adddf3+0x248>
   4b90c:	0140540e 	bge	zero,r5,4ba60 <__adddf3+0x1c8>
   4b910:	10008b26 	beq	r2,zero,4bb40 <__adddf3+0x2a8>
   4b914:	8081ffe0 	cmpeqi	r2,r16,2047
   4b918:	10010d1e 	bne	r2,zero,4bd50 <__adddf3+0x4b8>
   4b91c:	28800e48 	cmpgei	r2,r5,57
   4b920:	1000c11e 	bne	r2,zero,4bc28 <__adddf3+0x390>
   4b924:	5ac02034 	orhi	r11,r11,128
   4b928:	28800808 	cmpgei	r2,r5,32
   4b92c:	1001461e 	bne	r2,zero,4be48 <__adddf3+0x5b0>
   4b930:	00800804 	movi	r2,32
   4b934:	1145c83a 	sub	r2,r2,r5
   4b938:	58a4983a 	sll	r18,r11,r2
   4b93c:	6946d83a 	srl	r3,r13,r5
   4b940:	6884983a 	sll	r2,r13,r2
   4b944:	594ad83a 	srl	r5,r11,r5
   4b948:	90e4b03a 	or	r18,r18,r3
   4b94c:	1004c03a 	cmpne	r2,r2,zero
   4b950:	90a4b03a 	or	r18,r18,r2
   4b954:	8963c83a 	sub	r17,r17,r5
   4b958:	64a5c83a 	sub	r18,r12,r18
   4b95c:	6485803a 	cmpltu	r2,r12,r18
   4b960:	88a3c83a 	sub	r17,r17,r2
   4b964:	8880202c 	andhi	r2,r17,128
   4b968:	1000b826 	beq	r2,zero,4bc4c <__adddf3+0x3b4>
   4b96c:	00802034 	movhi	r2,128
   4b970:	10bfffc4 	addi	r2,r2,-1
   4b974:	88a2703a 	and	r17,r17,r2
   4b978:	8800d026 	beq	r17,zero,4bcbc <__adddf3+0x424>
   4b97c:	8809883a 	mov	r4,r17
   4b980:	0040dc80 	call	40dc8 <__clzsi2>
   4b984:	113ffe04 	addi	r4,r2,-8
   4b988:	00c00804 	movi	r3,32
   4b98c:	1905c83a 	sub	r2,r3,r4
   4b990:	9084d83a 	srl	r2,r18,r2
   4b994:	8922983a 	sll	r17,r17,r4
   4b998:	9124983a 	sll	r18,r18,r4
   4b99c:	1444b03a 	or	r2,r2,r17
   4b9a0:	2400ff16 	blt	r4,r16,4bda0 <__adddf3+0x508>
   4b9a4:	2409c83a 	sub	r4,r4,r16
   4b9a8:	21000044 	addi	r4,r4,1
   4b9ac:	1907c83a 	sub	r3,r3,r4
   4b9b0:	90ca983a 	sll	r5,r18,r3
   4b9b4:	9122d83a 	srl	r17,r18,r4
   4b9b8:	280ac03a 	cmpne	r5,r5,zero
   4b9bc:	10c6983a 	sll	r3,r2,r3
   4b9c0:	894ab03a 	or	r5,r17,r5
   4b9c4:	1122d83a 	srl	r17,r2,r4
   4b9c8:	0021883a 	mov	r16,zero
   4b9cc:	1964b03a 	or	r18,r3,r5
   4b9d0:	908001cc 	andi	r2,r18,7
   4b9d4:	10000726 	beq	r2,zero,4b9f4 <__adddf3+0x15c>
   4b9d8:	908003cc 	andi	r2,r18,15
   4b9dc:	10800120 	cmpeqi	r2,r2,4
   4b9e0:	1000041e 	bne	r2,zero,4b9f4 <__adddf3+0x15c>
   4b9e4:	90800104 	addi	r2,r18,4
   4b9e8:	14a5803a 	cmpltu	r18,r2,r18
   4b9ec:	8ca3883a 	add	r17,r17,r18
   4b9f0:	1025883a 	mov	r18,r2
   4b9f4:	8880202c 	andhi	r2,r17,128
   4b9f8:	1000c926 	beq	r2,zero,4bd20 <__adddf3+0x488>
   4b9fc:	8081ffa0 	cmpeqi	r2,r16,2046
   4ba00:	84000044 	addi	r16,r16,1
   4ba04:	1000841e 	bne	r2,zero,4bc18 <__adddf3+0x380>
   4ba08:	013fe034 	movhi	r4,65408
   4ba0c:	213fffc4 	addi	r4,r4,-1
   4ba10:	8908703a 	and	r4,r17,r4
   4ba14:	2004977a 	slli	r2,r4,29
   4ba18:	2008927a 	slli	r4,r4,9
   4ba1c:	9024d0fa 	srli	r18,r18,3
   4ba20:	80c1ffcc 	andi	r3,r16,2047
   4ba24:	2008d33a 	srli	r4,r4,12
   4ba28:	1484b03a 	or	r2,r2,r18
   4ba2c:	a027883a 	mov	r19,r20
   4ba30:	1806953a 	slli	r3,r3,20
   4ba34:	982697fa 	slli	r19,r19,31
   4ba38:	1906b03a 	or	r3,r3,r4
   4ba3c:	1cc6b03a 	or	r3,r3,r19
   4ba40:	dfc00517 	ldw	ra,20(sp)
   4ba44:	dd000417 	ldw	r20,16(sp)
   4ba48:	dcc00317 	ldw	r19,12(sp)
   4ba4c:	dc800217 	ldw	r18,8(sp)
   4ba50:	dc400117 	ldw	r17,4(sp)
   4ba54:	dc000017 	ldw	r16,0(sp)
   4ba58:	dec00604 	addi	sp,sp,24
   4ba5c:	f800283a 	ret
   4ba60:	3a803fcc 	andi	r10,r7,255
   4ba64:	28004026 	beq	r5,zero,4bb68 <__adddf3+0x2d0>
   4ba68:	140bc83a 	sub	r5,r2,r16
   4ba6c:	8000e61e 	bne	r16,zero,4be08 <__adddf3+0x570>
   4ba70:	8b06b03a 	or	r3,r17,r12
   4ba74:	1800c426 	beq	r3,zero,4bd88 <__adddf3+0x4f0>
   4ba78:	28ffffc4 	addi	r3,r5,-1
   4ba7c:	18017a26 	beq	r3,zero,4c068 <__adddf3+0x7d0>
   4ba80:	2941ffe0 	cmpeqi	r5,r5,2047
   4ba84:	28019a1e 	bne	r5,zero,4c0f0 <__adddf3+0x858>
   4ba88:	19000e48 	cmpgei	r4,r3,57
   4ba8c:	20010c1e 	bne	r4,zero,4bec0 <__adddf3+0x628>
   4ba90:	180b883a 	mov	r5,r3
   4ba94:	28c00808 	cmpgei	r3,r5,32
   4ba98:	1801521e 	bne	r3,zero,4bfe4 <__adddf3+0x74c>
   4ba9c:	00c00804 	movi	r3,32
   4baa0:	1947c83a 	sub	r3,r3,r5
   4baa4:	88e4983a 	sll	r18,r17,r3
   4baa8:	6148d83a 	srl	r4,r12,r5
   4baac:	60c6983a 	sll	r3,r12,r3
   4bab0:	894ad83a 	srl	r5,r17,r5
   4bab4:	9124b03a 	or	r18,r18,r4
   4bab8:	1806c03a 	cmpne	r3,r3,zero
   4babc:	90e4b03a 	or	r18,r18,r3
   4bac0:	5957c83a 	sub	r11,r11,r5
   4bac4:	6ca5c83a 	sub	r18,r13,r18
   4bac8:	6c9b803a 	cmpltu	r13,r13,r18
   4bacc:	5b63c83a 	sub	r17,r11,r13
   4bad0:	3827883a 	mov	r19,r7
   4bad4:	1021883a 	mov	r16,r2
   4bad8:	5029883a 	mov	r20,r10
   4badc:	003fa106 	br	4b964 <__adddf3+0xcc>
   4bae0:	01405d0e 	bge	zero,r5,4bc58 <__adddf3+0x3c0>
   4bae4:	1000351e 	bne	r2,zero,4bbbc <__adddf3+0x324>
   4bae8:	5b44b03a 	or	r2,r11,r13
   4baec:	1000a926 	beq	r2,zero,4bd94 <__adddf3+0x4fc>
   4baf0:	28bfffc4 	addi	r2,r5,-1
   4baf4:	10004e26 	beq	r2,zero,4bc30 <__adddf3+0x398>
   4baf8:	2941ffe0 	cmpeqi	r5,r5,2047
   4bafc:	2801121e 	bne	r5,zero,4bf48 <__adddf3+0x6b0>
   4bb00:	10c00e48 	cmpgei	r3,r2,57
   4bb04:	1800311e 	bne	r3,zero,4bbcc <__adddf3+0x334>
   4bb08:	100b883a 	mov	r5,r2
   4bb0c:	28800808 	cmpgei	r2,r5,32
   4bb10:	1001181e 	bne	r2,zero,4bf74 <__adddf3+0x6dc>
   4bb14:	00800804 	movi	r2,32
   4bb18:	1145c83a 	sub	r2,r2,r5
   4bb1c:	58a4983a 	sll	r18,r11,r2
   4bb20:	6946d83a 	srl	r3,r13,r5
   4bb24:	6884983a 	sll	r2,r13,r2
   4bb28:	594ad83a 	srl	r5,r11,r5
   4bb2c:	90e4b03a 	or	r18,r18,r3
   4bb30:	1004c03a 	cmpne	r2,r2,zero
   4bb34:	90a4b03a 	or	r18,r18,r2
   4bb38:	8963883a 	add	r17,r17,r5
   4bb3c:	00002406 	br	4bbd0 <__adddf3+0x338>
   4bb40:	5b44b03a 	or	r2,r11,r13
   4bb44:	10009326 	beq	r2,zero,4bd94 <__adddf3+0x4fc>
   4bb48:	28bfffc4 	addi	r2,r5,-1
   4bb4c:	1000f826 	beq	r2,zero,4bf30 <__adddf3+0x698>
   4bb50:	2941ffe0 	cmpeqi	r5,r5,2047
   4bb54:	2800fc1e 	bne	r5,zero,4bf48 <__adddf3+0x6b0>
   4bb58:	10c00e48 	cmpgei	r3,r2,57
   4bb5c:	1800321e 	bne	r3,zero,4bc28 <__adddf3+0x390>
   4bb60:	100b883a 	mov	r5,r2
   4bb64:	003f7006 	br	4b928 <__adddf3+0x90>
   4bb68:	80800044 	addi	r2,r16,1
   4bb6c:	1081ff8c 	andi	r2,r2,2046
   4bb70:	1000ab1e 	bne	r2,zero,4be20 <__adddf3+0x588>
   4bb74:	8b0ab03a 	or	r5,r17,r12
   4bb78:	5b44b03a 	or	r2,r11,r13
   4bb7c:	8000e71e 	bne	r16,zero,4bf1c <__adddf3+0x684>
   4bb80:	28014126 	beq	r5,zero,4c088 <__adddf3+0x7f0>
   4bb84:	10010626 	beq	r2,zero,4bfa0 <__adddf3+0x708>
   4bb88:	6365c83a 	sub	r18,r12,r13
   4bb8c:	6485803a 	cmpltu	r2,r12,r18
   4bb90:	8ac7c83a 	sub	r3,r17,r11
   4bb94:	1887c83a 	sub	r3,r3,r2
   4bb98:	1880202c 	andhi	r2,r3,128
   4bb9c:	10017326 	beq	r2,zero,4c16c <__adddf3+0x8d4>
   4bba0:	6b25c83a 	sub	r18,r13,r12
   4bba4:	5c57c83a 	sub	r11,r11,r17
   4bba8:	6c9b803a 	cmpltu	r13,r13,r18
   4bbac:	5b63c83a 	sub	r17,r11,r13
   4bbb0:	3827883a 	mov	r19,r7
   4bbb4:	5029883a 	mov	r20,r10
   4bbb8:	003f8506 	br	4b9d0 <__adddf3+0x138>
   4bbbc:	8081ffe0 	cmpeqi	r2,r16,2047
   4bbc0:	1000631e 	bne	r2,zero,4bd50 <__adddf3+0x4b8>
   4bbc4:	28800e48 	cmpgei	r2,r5,57
   4bbc8:	1000aa26 	beq	r2,zero,4be74 <__adddf3+0x5dc>
   4bbcc:	04800044 	movi	r18,1
   4bbd0:	9325883a 	add	r18,r18,r12
   4bbd4:	9305803a 	cmpltu	r2,r18,r12
   4bbd8:	88a3883a 	add	r17,r17,r2
   4bbdc:	8880202c 	andhi	r2,r17,128
   4bbe0:	10001a26 	beq	r2,zero,4bc4c <__adddf3+0x3b4>
   4bbe4:	84000044 	addi	r16,r16,1
   4bbe8:	8081ffe0 	cmpeqi	r2,r16,2047
   4bbec:	10000a1e 	bne	r2,zero,4bc18 <__adddf3+0x380>
   4bbf0:	00bfe034 	movhi	r2,65408
   4bbf4:	10bfffc4 	addi	r2,r2,-1
   4bbf8:	9006d07a 	srli	r3,r18,1
   4bbfc:	8884703a 	and	r2,r17,r2
   4bc00:	100897fa 	slli	r4,r2,31
   4bc04:	9480004c 	andi	r18,r18,1
   4bc08:	1c86b03a 	or	r3,r3,r18
   4bc0c:	1022d07a 	srli	r17,r2,1
   4bc10:	20e4b03a 	or	r18,r4,r3
   4bc14:	003f6e06 	br	4b9d0 <__adddf3+0x138>
   4bc18:	00c1ffc4 	movi	r3,2047
   4bc1c:	0009883a 	mov	r4,zero
   4bc20:	0005883a 	mov	r2,zero
   4bc24:	003f8206 	br	4ba30 <__adddf3+0x198>
   4bc28:	04800044 	movi	r18,1
   4bc2c:	003f4a06 	br	4b958 <__adddf3+0xc0>
   4bc30:	6365883a 	add	r18,r12,r13
   4bc34:	8ad7883a 	add	r11,r17,r11
   4bc38:	9305803a 	cmpltu	r2,r18,r12
   4bc3c:	58a3883a 	add	r17,r11,r2
   4bc40:	8880202c 	andhi	r2,r17,128
   4bc44:	1001061e 	bne	r2,zero,4c060 <__adddf3+0x7c8>
   4bc48:	04000044 	movi	r16,1
   4bc4c:	908001cc 	andi	r2,r18,7
   4bc50:	103f611e 	bne	r2,zero,4b9d8 <__adddf3+0x140>
   4bc54:	00006906 	br	4bdfc <__adddf3+0x564>
   4bc58:	28005626 	beq	r5,zero,4bdb4 <__adddf3+0x51c>
   4bc5c:	140bc83a 	sub	r5,r2,r16
   4bc60:	80008626 	beq	r16,zero,4be7c <__adddf3+0x5e4>
   4bc64:	10c1ffe0 	cmpeqi	r3,r2,2047
   4bc68:	1801101e 	bne	r3,zero,4c0ac <__adddf3+0x814>
   4bc6c:	28c00e48 	cmpgei	r3,r5,57
   4bc70:	1800da1e 	bne	r3,zero,4bfdc <__adddf3+0x744>
   4bc74:	8c402034 	orhi	r17,r17,128
   4bc78:	28c00808 	cmpgei	r3,r5,32
   4bc7c:	1801241e 	bne	r3,zero,4c110 <__adddf3+0x878>
   4bc80:	00c00804 	movi	r3,32
   4bc84:	1947c83a 	sub	r3,r3,r5
   4bc88:	88e4983a 	sll	r18,r17,r3
   4bc8c:	6148d83a 	srl	r4,r12,r5
   4bc90:	60c6983a 	sll	r3,r12,r3
   4bc94:	894ad83a 	srl	r5,r17,r5
   4bc98:	9124b03a 	or	r18,r18,r4
   4bc9c:	1806c03a 	cmpne	r3,r3,zero
   4bca0:	90e4b03a 	or	r18,r18,r3
   4bca4:	5957883a 	add	r11,r11,r5
   4bca8:	9365883a 	add	r18,r18,r13
   4bcac:	935b803a 	cmpltu	r13,r18,r13
   4bcb0:	6ae3883a 	add	r17,r13,r11
   4bcb4:	1021883a 	mov	r16,r2
   4bcb8:	003fc806 	br	4bbdc <__adddf3+0x344>
   4bcbc:	9009883a 	mov	r4,r18
   4bcc0:	0040dc80 	call	40dc8 <__clzsi2>
   4bcc4:	11000604 	addi	r4,r2,24
   4bcc8:	20c00808 	cmpgei	r3,r4,32
   4bccc:	183f2e26 	beq	r3,zero,4b988 <__adddf3+0xf0>
   4bcd0:	10bffe04 	addi	r2,r2,-8
   4bcd4:	9084983a 	sll	r2,r18,r2
   4bcd8:	24007216 	blt	r4,r16,4bea4 <__adddf3+0x60c>
   4bcdc:	2425c83a 	sub	r18,r4,r16
   4bce0:	91000044 	addi	r4,r18,1
   4bce4:	20c00808 	cmpgei	r3,r4,32
   4bce8:	18012426 	beq	r3,zero,4c17c <__adddf3+0x8e4>
   4bcec:	94bff844 	addi	r18,r18,-31
   4bcf0:	20c00820 	cmpeqi	r3,r4,32
   4bcf4:	14a4d83a 	srl	r18,r2,r18
   4bcf8:	1800051e 	bne	r3,zero,4bd10 <__adddf3+0x478>
   4bcfc:	00c01004 	movi	r3,64
   4bd00:	1907c83a 	sub	r3,r3,r4
   4bd04:	10c4983a 	sll	r2,r2,r3
   4bd08:	1004c03a 	cmpne	r2,r2,zero
   4bd0c:	90a4b03a 	or	r18,r18,r2
   4bd10:	908001cc 	andi	r2,r18,7
   4bd14:	0021883a 	mov	r16,zero
   4bd18:	103f2f1e 	bne	r2,zero,4b9d8 <__adddf3+0x140>
   4bd1c:	00003706 	br	4bdfc <__adddf3+0x564>
   4bd20:	9004d0fa 	srli	r2,r18,3
   4bd24:	880a977a 	slli	r5,r17,29
   4bd28:	8101ffe0 	cmpeqi	r4,r16,2047
   4bd2c:	8806d0fa 	srli	r3,r17,3
   4bd30:	2884b03a 	or	r2,r5,r2
   4bd34:	20000c1e 	bne	r4,zero,4bd68 <__adddf3+0x4d0>
   4bd38:	01000434 	movhi	r4,16
   4bd3c:	213fffc4 	addi	r4,r4,-1
   4bd40:	1908703a 	and	r4,r3,r4
   4bd44:	80c1ffcc 	andi	r3,r16,2047
   4bd48:	003f3906 	br	4ba30 <__adddf3+0x198>
   4bd4c:	1000b31e 	bne	r2,zero,4c01c <__adddf3+0x784>
   4bd50:	880a977a 	slli	r5,r17,29
   4bd54:	00880034 	movhi	r2,8192
   4bd58:	10bfffc4 	addi	r2,r2,-1
   4bd5c:	8806d0fa 	srli	r3,r17,3
   4bd60:	2084703a 	and	r2,r4,r2
   4bd64:	1144b03a 	or	r2,r2,r5
   4bd68:	10c8b03a 	or	r4,r2,r3
   4bd6c:	20010726 	beq	r4,zero,4c18c <__adddf3+0x8f4>
   4bd70:	01400434 	movhi	r5,16
   4bd74:	19000234 	orhi	r4,r3,8
   4bd78:	297fffc4 	addi	r5,r5,-1
   4bd7c:	2148703a 	and	r4,r4,r5
   4bd80:	00c1ffc4 	movi	r3,2047
   4bd84:	003f2a06 	br	4ba30 <__adddf3+0x198>
   4bd88:	6819883a 	mov	r12,r13
   4bd8c:	5823883a 	mov	r17,r11
   4bd90:	3827883a 	mov	r19,r7
   4bd94:	6004d0fa 	srli	r2,r12,3
   4bd98:	2821883a 	mov	r16,r5
   4bd9c:	003fe106 	br	4bd24 <__adddf3+0x48c>
   4bda0:	047fe034 	movhi	r17,65408
   4bda4:	8c7fffc4 	addi	r17,r17,-1
   4bda8:	8121c83a 	sub	r16,r16,r4
   4bdac:	1462703a 	and	r17,r2,r17
   4bdb0:	003f0706 	br	4b9d0 <__adddf3+0x138>
   4bdb4:	80c00044 	addi	r3,r16,1
   4bdb8:	1881ff8c 	andi	r2,r3,2046
   4bdbc:	1000421e 	bne	r2,zero,4bec8 <__adddf3+0x630>
   4bdc0:	8b04b03a 	or	r2,r17,r12
   4bdc4:	8000921e 	bne	r16,zero,4c010 <__adddf3+0x778>
   4bdc8:	1000c226 	beq	r2,zero,4c0d4 <__adddf3+0x83c>
   4bdcc:	5b44b03a 	or	r2,r11,r13
   4bdd0:	10007326 	beq	r2,zero,4bfa0 <__adddf3+0x708>
   4bdd4:	6365883a 	add	r18,r12,r13
   4bdd8:	9305803a 	cmpltu	r2,r18,r12
   4bddc:	8ad7883a 	add	r11,r17,r11
   4bde0:	58a3883a 	add	r17,r11,r2
   4bde4:	8880202c 	andhi	r2,r17,128
   4bde8:	10000426 	beq	r2,zero,4bdfc <__adddf3+0x564>
   4bdec:	00bfe034 	movhi	r2,65408
   4bdf0:	10bfffc4 	addi	r2,r2,-1
   4bdf4:	88a2703a 	and	r17,r17,r2
   4bdf8:	04000044 	movi	r16,1
   4bdfc:	800b883a 	mov	r5,r16
   4be00:	9019883a 	mov	r12,r18
   4be04:	003fe306 	br	4bd94 <__adddf3+0x4fc>
   4be08:	10c1ffe0 	cmpeqi	r3,r2,2047
   4be0c:	18006b1e 	bne	r3,zero,4bfbc <__adddf3+0x724>
   4be10:	28c00e48 	cmpgei	r3,r5,57
   4be14:	18002a1e 	bne	r3,zero,4bec0 <__adddf3+0x628>
   4be18:	8c402034 	orhi	r17,r17,128
   4be1c:	003f1d06 	br	4ba94 <__adddf3+0x1fc>
   4be20:	6365c83a 	sub	r18,r12,r13
   4be24:	6485803a 	cmpltu	r2,r12,r18
   4be28:	8ac7c83a 	sub	r3,r17,r11
   4be2c:	1887c83a 	sub	r3,r3,r2
   4be30:	1880202c 	andhi	r2,r3,128
   4be34:	1000321e 	bne	r2,zero,4bf00 <__adddf3+0x668>
   4be38:	90c4b03a 	or	r2,r18,r3
   4be3c:	10004926 	beq	r2,zero,4bf64 <__adddf3+0x6cc>
   4be40:	1823883a 	mov	r17,r3
   4be44:	003ecc06 	br	4b978 <__adddf3+0xe0>
   4be48:	28bff804 	addi	r2,r5,-32
   4be4c:	28c00820 	cmpeqi	r3,r5,32
   4be50:	5884d83a 	srl	r2,r11,r2
   4be54:	1800041e 	bne	r3,zero,4be68 <__adddf3+0x5d0>
   4be58:	00c01004 	movi	r3,64
   4be5c:	1947c83a 	sub	r3,r3,r5
   4be60:	58c6983a 	sll	r3,r11,r3
   4be64:	68dab03a 	or	r13,r13,r3
   4be68:	6824c03a 	cmpne	r18,r13,zero
   4be6c:	90a4b03a 	or	r18,r18,r2
   4be70:	003eb906 	br	4b958 <__adddf3+0xc0>
   4be74:	5ac02034 	orhi	r11,r11,128
   4be78:	003f2406 	br	4bb0c <__adddf3+0x274>
   4be7c:	8b06b03a 	or	r3,r17,r12
   4be80:	18009126 	beq	r3,zero,4c0c8 <__adddf3+0x830>
   4be84:	28ffffc4 	addi	r3,r5,-1
   4be88:	1800ac26 	beq	r3,zero,4c13c <__adddf3+0x8a4>
   4be8c:	2941ffe0 	cmpeqi	r5,r5,2047
   4be90:	2800861e 	bne	r5,zero,4c0ac <__adddf3+0x814>
   4be94:	19000e48 	cmpgei	r4,r3,57
   4be98:	2000501e 	bne	r4,zero,4bfdc <__adddf3+0x744>
   4be9c:	180b883a 	mov	r5,r3
   4bea0:	003f7506 	br	4bc78 <__adddf3+0x3e0>
   4bea4:	00ffe034 	movhi	r3,65408
   4bea8:	18ffffc4 	addi	r3,r3,-1
   4beac:	10c6703a 	and	r3,r2,r3
   4beb0:	1804977a 	slli	r2,r3,29
   4beb4:	8121c83a 	sub	r16,r16,r4
   4beb8:	1806d0fa 	srli	r3,r3,3
   4bebc:	003f9e06 	br	4bd38 <__adddf3+0x4a0>
   4bec0:	04800044 	movi	r18,1
   4bec4:	003eff06 	br	4bac4 <__adddf3+0x22c>
   4bec8:	1881ffe0 	cmpeqi	r2,r3,2047
   4becc:	103f521e 	bne	r2,zero,4bc18 <__adddf3+0x380>
   4bed0:	6349883a 	add	r4,r12,r13
   4bed4:	8ad7883a 	add	r11,r17,r11
   4bed8:	2305803a 	cmpltu	r2,r4,r12
   4bedc:	5885883a 	add	r2,r11,r2
   4bee0:	2008d07a 	srli	r4,r4,1
   4bee4:	102497fa 	slli	r18,r2,31
   4bee8:	1022d07a 	srli	r17,r2,1
   4beec:	208001cc 	andi	r2,r4,7
   4bef0:	9124b03a 	or	r18,r18,r4
   4bef4:	1821883a 	mov	r16,r3
   4bef8:	103eb71e 	bne	r2,zero,4b9d8 <__adddf3+0x140>
   4befc:	003fbf06 	br	4bdfc <__adddf3+0x564>
   4bf00:	6b25c83a 	sub	r18,r13,r12
   4bf04:	5c57c83a 	sub	r11,r11,r17
   4bf08:	6c9b803a 	cmpltu	r13,r13,r18
   4bf0c:	5b63c83a 	sub	r17,r11,r13
   4bf10:	3827883a 	mov	r19,r7
   4bf14:	5029883a 	mov	r20,r10
   4bf18:	003e9706 	br	4b978 <__adddf3+0xe0>
   4bf1c:	283f8b1e 	bne	r5,zero,4bd4c <__adddf3+0x4b4>
   4bf20:	1000261e 	bne	r2,zero,4bfbc <__adddf3+0x724>
   4bf24:	00bfffc4 	movi	r2,-1
   4bf28:	0027883a 	mov	r19,zero
   4bf2c:	003f9006 	br	4bd70 <__adddf3+0x4d8>
   4bf30:	6365c83a 	sub	r18,r12,r13
   4bf34:	8ad7c83a 	sub	r11,r17,r11
   4bf38:	6485803a 	cmpltu	r2,r12,r18
   4bf3c:	58a3c83a 	sub	r17,r11,r2
   4bf40:	04000044 	movi	r16,1
   4bf44:	003e8706 	br	4b964 <__adddf3+0xcc>
   4bf48:	8804977a 	slli	r2,r17,29
   4bf4c:	00c80034 	movhi	r3,8192
   4bf50:	18ffffc4 	addi	r3,r3,-1
   4bf54:	20c8703a 	and	r4,r4,r3
   4bf58:	2084b03a 	or	r2,r4,r2
   4bf5c:	8806d0fa 	srli	r3,r17,3
   4bf60:	003f8106 	br	4bd68 <__adddf3+0x4d0>
   4bf64:	0027883a 	mov	r19,zero
   4bf68:	0007883a 	mov	r3,zero
   4bf6c:	0009883a 	mov	r4,zero
   4bf70:	003eaf06 	br	4ba30 <__adddf3+0x198>
   4bf74:	28bff804 	addi	r2,r5,-32
   4bf78:	28c00820 	cmpeqi	r3,r5,32
   4bf7c:	5884d83a 	srl	r2,r11,r2
   4bf80:	1800041e 	bne	r3,zero,4bf94 <__adddf3+0x6fc>
   4bf84:	00c01004 	movi	r3,64
   4bf88:	1947c83a 	sub	r3,r3,r5
   4bf8c:	58c6983a 	sll	r3,r11,r3
   4bf90:	68dab03a 	or	r13,r13,r3
   4bf94:	6824c03a 	cmpne	r18,r13,zero
   4bf98:	90a4b03a 	or	r18,r18,r2
   4bf9c:	003f0c06 	br	4bbd0 <__adddf3+0x338>
   4bfa0:	880a977a 	slli	r5,r17,29
   4bfa4:	00880034 	movhi	r2,8192
   4bfa8:	10bfffc4 	addi	r2,r2,-1
   4bfac:	2084703a 	and	r2,r4,r2
   4bfb0:	8806d0fa 	srli	r3,r17,3
   4bfb4:	1144b03a 	or	r2,r2,r5
   4bfb8:	003f5f06 	br	4bd38 <__adddf3+0x4a0>
   4bfbc:	5804977a 	slli	r2,r11,29
   4bfc0:	00c80034 	movhi	r3,8192
   4bfc4:	18ffffc4 	addi	r3,r3,-1
   4bfc8:	30c8703a 	and	r4,r6,r3
   4bfcc:	1104b03a 	or	r2,r2,r4
   4bfd0:	5806d0fa 	srli	r3,r11,3
   4bfd4:	3827883a 	mov	r19,r7
   4bfd8:	003f6306 	br	4bd68 <__adddf3+0x4d0>
   4bfdc:	04800044 	movi	r18,1
   4bfe0:	003f3106 	br	4bca8 <__adddf3+0x410>
   4bfe4:	28fff804 	addi	r3,r5,-32
   4bfe8:	29000820 	cmpeqi	r4,r5,32
   4bfec:	88c6d83a 	srl	r3,r17,r3
   4bff0:	2000041e 	bne	r4,zero,4c004 <__adddf3+0x76c>
   4bff4:	01001004 	movi	r4,64
   4bff8:	2149c83a 	sub	r4,r4,r5
   4bffc:	8908983a 	sll	r4,r17,r4
   4c000:	6118b03a 	or	r12,r12,r4
   4c004:	6024c03a 	cmpne	r18,r12,zero
   4c008:	90e4b03a 	or	r18,r18,r3
   4c00c:	003ead06 	br	4bac4 <__adddf3+0x22c>
   4c010:	10004f26 	beq	r2,zero,4c150 <__adddf3+0x8b8>
   4c014:	5b5ab03a 	or	r13,r11,r13
   4c018:	683f4d26 	beq	r13,zero,4bd50 <__adddf3+0x4b8>
   4c01c:	8806d0fa 	srli	r3,r17,3
   4c020:	01480034 	movhi	r5,8192
   4c024:	8822977a 	slli	r17,r17,29
   4c028:	297fffc4 	addi	r5,r5,-1
   4c02c:	2144703a 	and	r2,r4,r5
   4c030:	1900022c 	andhi	r4,r3,8
   4c034:	1444b03a 	or	r2,r2,r17
   4c038:	203f4b26 	beq	r4,zero,4bd68 <__adddf3+0x4d0>
   4c03c:	5808d0fa 	srli	r4,r11,3
   4c040:	2200022c 	andhi	r8,r4,8
   4c044:	403f481e 	bne	r8,zero,4bd68 <__adddf3+0x4d0>
   4c048:	5804977a 	slli	r2,r11,29
   4c04c:	314a703a 	and	r5,r6,r5
   4c050:	3827883a 	mov	r19,r7
   4c054:	2884b03a 	or	r2,r5,r2
   4c058:	2007883a 	mov	r3,r4
   4c05c:	003f4206 	br	4bd68 <__adddf3+0x4d0>
   4c060:	04000084 	movi	r16,2
   4c064:	003ee206 	br	4bbf0 <__adddf3+0x358>
   4c068:	6b25c83a 	sub	r18,r13,r12
   4c06c:	5c57c83a 	sub	r11,r11,r17
   4c070:	6c9b803a 	cmpltu	r13,r13,r18
   4c074:	5b63c83a 	sub	r17,r11,r13
   4c078:	3827883a 	mov	r19,r7
   4c07c:	5029883a 	mov	r20,r10
   4c080:	04000044 	movi	r16,1
   4c084:	003e3706 	br	4b964 <__adddf3+0xcc>
   4c088:	103fb626 	beq	r2,zero,4bf64 <__adddf3+0x6cc>
   4c08c:	5808977a 	slli	r4,r11,29
   4c090:	00880034 	movhi	r2,8192
   4c094:	10bfffc4 	addi	r2,r2,-1
   4c098:	3084703a 	and	r2,r6,r2
   4c09c:	5806d0fa 	srli	r3,r11,3
   4c0a0:	1104b03a 	or	r2,r2,r4
   4c0a4:	3827883a 	mov	r19,r7
   4c0a8:	003f2306 	br	4bd38 <__adddf3+0x4a0>
   4c0ac:	5808977a 	slli	r4,r11,29
   4c0b0:	00880034 	movhi	r2,8192
   4c0b4:	10bfffc4 	addi	r2,r2,-1
   4c0b8:	3084703a 	and	r2,r6,r2
   4c0bc:	5806d0fa 	srli	r3,r11,3
   4c0c0:	1104b03a 	or	r2,r2,r4
   4c0c4:	003f2806 	br	4bd68 <__adddf3+0x4d0>
   4c0c8:	6819883a 	mov	r12,r13
   4c0cc:	5823883a 	mov	r17,r11
   4c0d0:	003f3006 	br	4bd94 <__adddf3+0x4fc>
   4c0d4:	5808977a 	slli	r4,r11,29
   4c0d8:	00880034 	movhi	r2,8192
   4c0dc:	10bfffc4 	addi	r2,r2,-1
   4c0e0:	3084703a 	and	r2,r6,r2
   4c0e4:	5806d0fa 	srli	r3,r11,3
   4c0e8:	1104b03a 	or	r2,r2,r4
   4c0ec:	003f1206 	br	4bd38 <__adddf3+0x4a0>
   4c0f0:	5808977a 	slli	r4,r11,29
   4c0f4:	00880034 	movhi	r2,8192
   4c0f8:	10bfffc4 	addi	r2,r2,-1
   4c0fc:	3084703a 	and	r2,r6,r2
   4c100:	5806d0fa 	srli	r3,r11,3
   4c104:	1104b03a 	or	r2,r2,r4
   4c108:	3827883a 	mov	r19,r7
   4c10c:	003f1606 	br	4bd68 <__adddf3+0x4d0>
   4c110:	28fff804 	addi	r3,r5,-32
   4c114:	29000820 	cmpeqi	r4,r5,32
   4c118:	88c6d83a 	srl	r3,r17,r3
   4c11c:	2000041e 	bne	r4,zero,4c130 <__adddf3+0x898>
   4c120:	01001004 	movi	r4,64
   4c124:	2149c83a 	sub	r4,r4,r5
   4c128:	8908983a 	sll	r4,r17,r4
   4c12c:	6118b03a 	or	r12,r12,r4
   4c130:	6024c03a 	cmpne	r18,r12,zero
   4c134:	90e4b03a 	or	r18,r18,r3
   4c138:	003edb06 	br	4bca8 <__adddf3+0x410>
   4c13c:	6365883a 	add	r18,r12,r13
   4c140:	8ad7883a 	add	r11,r17,r11
   4c144:	935b803a 	cmpltu	r13,r18,r13
   4c148:	5b63883a 	add	r17,r11,r13
   4c14c:	003ebc06 	br	4bc40 <__adddf3+0x3a8>
   4c150:	5804977a 	slli	r2,r11,29
   4c154:	00c80034 	movhi	r3,8192
   4c158:	18ffffc4 	addi	r3,r3,-1
   4c15c:	30cc703a 	and	r6,r6,r3
   4c160:	1184b03a 	or	r2,r2,r6
   4c164:	5806d0fa 	srli	r3,r11,3
   4c168:	003eff06 	br	4bd68 <__adddf3+0x4d0>
   4c16c:	90c4b03a 	or	r2,r18,r3
   4c170:	103f7c26 	beq	r2,zero,4bf64 <__adddf3+0x6cc>
   4c174:	1823883a 	mov	r17,r3
   4c178:	003f2006 	br	4bdfc <__adddf3+0x564>
   4c17c:	00c00804 	movi	r3,32
   4c180:	1907c83a 	sub	r3,r3,r4
   4c184:	000b883a 	mov	r5,zero
   4c188:	003e0c06 	br	4b9bc <__adddf3+0x124>
   4c18c:	0005883a 	mov	r2,zero
   4c190:	00c1ffc4 	movi	r3,2047
   4c194:	0009883a 	mov	r4,zero
   4c198:	003e2506 	br	4ba30 <__adddf3+0x198>

0004c19c <__eqdf2>:
   4c19c:	2810d53a 	srli	r8,r5,20
   4c1a0:	3804d53a 	srli	r2,r7,20
   4c1a4:	00c00434 	movhi	r3,16
   4c1a8:	4201ffcc 	andi	r8,r8,2047
   4c1ac:	18ffffc4 	addi	r3,r3,-1
   4c1b0:	4241ffe0 	cmpeqi	r9,r8,2047
   4c1b4:	2816d7fa 	srli	r11,r5,31
   4c1b8:	3814d7fa 	srli	r10,r7,31
   4c1bc:	28ca703a 	and	r5,r5,r3
   4c1c0:	38ce703a 	and	r7,r7,r3
   4c1c4:	1081ffcc 	andi	r2,r2,2047
   4c1c8:	4800061e 	bne	r9,zero,4c1e4 <__eqdf2+0x48>
   4c1cc:	10c1ffe0 	cmpeqi	r3,r2,2047
   4c1d0:	1800061e 	bne	r3,zero,4c1ec <__eqdf2+0x50>
   4c1d4:	4080051e 	bne	r8,r2,4c1ec <__eqdf2+0x50>
   4c1d8:	00800044 	movi	r2,1
   4c1dc:	29c00b26 	beq	r5,r7,4c20c <__eqdf2+0x70>
   4c1e0:	f800283a 	ret
   4c1e4:	1081ffd8 	cmpnei	r2,r2,2047
   4c1e8:	10000226 	beq	r2,zero,4c1f4 <__eqdf2+0x58>
   4c1ec:	00800044 	movi	r2,1
   4c1f0:	f800283a 	ret
   4c1f4:	29cab03a 	or	r5,r5,r7
   4c1f8:	2984b03a 	or	r2,r5,r6
   4c1fc:	1104b03a 	or	r2,r2,r4
   4c200:	103ffa1e 	bne	r2,zero,4c1ec <__eqdf2+0x50>
   4c204:	5a84c03a 	cmpne	r2,r11,r10
   4c208:	f800283a 	ret
   4c20c:	21800126 	beq	r4,r6,4c214 <__eqdf2+0x78>
   4c210:	f800283a 	ret
   4c214:	5a800426 	beq	r11,r10,4c228 <__eqdf2+0x8c>
   4c218:	403ffd1e 	bne	r8,zero,4c210 <__eqdf2+0x74>
   4c21c:	290ab03a 	or	r5,r5,r4
   4c220:	2804c03a 	cmpne	r2,r5,zero
   4c224:	f800283a 	ret
   4c228:	0005883a 	mov	r2,zero
   4c22c:	003ff806 	br	4c210 <__eqdf2+0x74>

0004c230 <__gedf2>:
   4c230:	2810d53a 	srli	r8,r5,20
   4c234:	3812d53a 	srli	r9,r7,20
   4c238:	00c00434 	movhi	r3,16
   4c23c:	4201ffcc 	andi	r8,r8,2047
   4c240:	18ffffc4 	addi	r3,r3,-1
   4c244:	4281ffd8 	cmpnei	r10,r8,2047
   4c248:	2816d7fa 	srli	r11,r5,31
   4c24c:	3804d7fa 	srli	r2,r7,31
   4c250:	28ca703a 	and	r5,r5,r3
   4c254:	38ce703a 	and	r7,r7,r3
   4c258:	48c1ffcc 	andi	r3,r9,2047
   4c25c:	50001426 	beq	r10,zero,4c2b0 <__gedf2+0x80>
   4c260:	1a41ffd8 	cmpnei	r9,r3,2047
   4c264:	48000926 	beq	r9,zero,4c28c <__gedf2+0x5c>
   4c268:	40001b1e 	bne	r8,zero,4c2d8 <__gedf2+0xa8>
   4c26c:	2910b03a 	or	r8,r5,r4
   4c270:	1800161e 	bne	r3,zero,4c2cc <__gedf2+0x9c>
   4c274:	3986b03a 	or	r3,r7,r6
   4c278:	18002126 	beq	r3,zero,4c300 <__gedf2+0xd0>
   4c27c:	4000291e 	bne	r8,zero,4c324 <__gedf2+0xf4>
   4c280:	1000111e 	bne	r2,zero,4c2c8 <__gedf2+0x98>
   4c284:	00bfffc4 	movi	r2,-1
   4c288:	f800283a 	ret
   4c28c:	398eb03a 	or	r7,r7,r6
   4c290:	3800221e 	bne	r7,zero,4c31c <__gedf2+0xec>
   4c294:	4000021e 	bne	r8,zero,4c2a0 <__gedf2+0x70>
   4c298:	2908b03a 	or	r4,r5,r4
   4c29c:	203ff826 	beq	r4,zero,4c280 <__gedf2+0x50>
   4c2a0:	5880071e 	bne	r11,r2,4c2c0 <__gedf2+0x90>
   4c2a4:	583ff726 	beq	r11,zero,4c284 <__gedf2+0x54>
   4c2a8:	5805883a 	mov	r2,r11
   4c2ac:	f800283a 	ret
   4c2b0:	290ab03a 	or	r5,r5,r4
   4c2b4:	2800191e 	bne	r5,zero,4c31c <__gedf2+0xec>
   4c2b8:	1901ffe0 	cmpeqi	r4,r3,2047
   4c2bc:	2000131e 	bne	r4,zero,4c30c <__gedf2+0xdc>
   4c2c0:	00800044 	movi	r2,1
   4c2c4:	583fef1e 	bne	r11,zero,4c284 <__gedf2+0x54>
   4c2c8:	f800283a 	ret
   4c2cc:	403ff41e 	bne	r8,zero,4c2a0 <__gedf2+0x70>
   4c2d0:	103ffd1e 	bne	r2,zero,4c2c8 <__gedf2+0x98>
   4c2d4:	003feb06 	br	4c284 <__gedf2+0x54>
   4c2d8:	183ff926 	beq	r3,zero,4c2c0 <__gedf2+0x90>
   4c2dc:	58bff81e 	bne	r11,r2,4c2c0 <__gedf2+0x90>
   4c2e0:	1a3ff716 	blt	r3,r8,4c2c0 <__gedf2+0x90>
   4c2e4:	40ffef16 	blt	r8,r3,4c2a4 <__gedf2+0x74>
   4c2e8:	397ff536 	bltu	r7,r5,4c2c0 <__gedf2+0x90>
   4c2ec:	29ffed1e 	bne	r5,r7,4c2a4 <__gedf2+0x74>
   4c2f0:	313ff336 	bltu	r6,r4,4c2c0 <__gedf2+0x90>
   4c2f4:	21bfeb36 	bltu	r4,r6,4c2a4 <__gedf2+0x74>
   4c2f8:	0005883a 	mov	r2,zero
   4c2fc:	f800283a 	ret
   4c300:	0005883a 	mov	r2,zero
   4c304:	403fee1e 	bne	r8,zero,4c2c0 <__gedf2+0x90>
   4c308:	f800283a 	ret
   4c30c:	398eb03a 	or	r7,r7,r6
   4c310:	3800021e 	bne	r7,zero,4c31c <__gedf2+0xec>
   4c314:	58bff826 	beq	r11,r2,4c2f8 <__gedf2+0xc8>
   4c318:	003fe906 	br	4c2c0 <__gedf2+0x90>
   4c31c:	00bfff84 	movi	r2,-2
   4c320:	f800283a 	ret
   4c324:	58bff026 	beq	r11,r2,4c2e8 <__gedf2+0xb8>
   4c328:	003fe506 	br	4c2c0 <__gedf2+0x90>

0004c32c <__ledf2>:
   4c32c:	2810d53a 	srli	r8,r5,20
   4c330:	3812d53a 	srli	r9,r7,20
   4c334:	00c00434 	movhi	r3,16
   4c338:	4201ffcc 	andi	r8,r8,2047
   4c33c:	18ffffc4 	addi	r3,r3,-1
   4c340:	4281ffd8 	cmpnei	r10,r8,2047
   4c344:	2816d7fa 	srli	r11,r5,31
   4c348:	3804d7fa 	srli	r2,r7,31
   4c34c:	28ca703a 	and	r5,r5,r3
   4c350:	38ce703a 	and	r7,r7,r3
   4c354:	48c1ffcc 	andi	r3,r9,2047
   4c358:	50001426 	beq	r10,zero,4c3ac <__ledf2+0x80>
   4c35c:	1a41ffd8 	cmpnei	r9,r3,2047
   4c360:	48000926 	beq	r9,zero,4c388 <__ledf2+0x5c>
   4c364:	4000191e 	bne	r8,zero,4c3cc <__ledf2+0xa0>
   4c368:	2910b03a 	or	r8,r5,r4
   4c36c:	1800221e 	bne	r3,zero,4c3f8 <__ledf2+0xcc>
   4c370:	3986b03a 	or	r3,r7,r6
   4c374:	18002326 	beq	r3,zero,4c404 <__ledf2+0xd8>
   4c378:	4000281e 	bne	r8,zero,4c41c <__ledf2+0xf0>
   4c37c:	10000a1e 	bne	r2,zero,4c3a8 <__ledf2+0x7c>
   4c380:	00bfffc4 	movi	r2,-1
   4c384:	f800283a 	ret
   4c388:	398eb03a 	or	r7,r7,r6
   4c38c:	38000d1e 	bne	r7,zero,4c3c4 <__ledf2+0x98>
   4c390:	4000021e 	bne	r8,zero,4c39c <__ledf2+0x70>
   4c394:	290ab03a 	or	r5,r5,r4
   4c398:	283ff826 	beq	r5,zero,4c37c <__ledf2+0x50>
   4c39c:	58801326 	beq	r11,r2,4c3ec <__ledf2+0xc0>
   4c3a0:	00800044 	movi	r2,1
   4c3a4:	583ff61e 	bne	r11,zero,4c380 <__ledf2+0x54>
   4c3a8:	f800283a 	ret
   4c3ac:	290ab03a 	or	r5,r5,r4
   4c3b0:	2800041e 	bne	r5,zero,4c3c4 <__ledf2+0x98>
   4c3b4:	1901ffe0 	cmpeqi	r4,r3,2047
   4c3b8:	203ff926 	beq	r4,zero,4c3a0 <__ledf2+0x74>
   4c3bc:	398eb03a 	or	r7,r7,r6
   4c3c0:	38001326 	beq	r7,zero,4c410 <__ledf2+0xe4>
   4c3c4:	00800084 	movi	r2,2
   4c3c8:	f800283a 	ret
   4c3cc:	183ff426 	beq	r3,zero,4c3a0 <__ledf2+0x74>
   4c3d0:	58bff31e 	bne	r11,r2,4c3a0 <__ledf2+0x74>
   4c3d4:	1a3ff216 	blt	r3,r8,4c3a0 <__ledf2+0x74>
   4c3d8:	40c00416 	blt	r8,r3,4c3ec <__ledf2+0xc0>
   4c3dc:	397ff036 	bltu	r7,r5,4c3a0 <__ledf2+0x74>
   4c3e0:	29c0021e 	bne	r5,r7,4c3ec <__ledf2+0xc0>
   4c3e4:	313fee36 	bltu	r6,r4,4c3a0 <__ledf2+0x74>
   4c3e8:	21800a2e 	bgeu	r4,r6,4c414 <__ledf2+0xe8>
   4c3ec:	583fe426 	beq	r11,zero,4c380 <__ledf2+0x54>
   4c3f0:	5805883a 	mov	r2,r11
   4c3f4:	f800283a 	ret
   4c3f8:	403fe81e 	bne	r8,zero,4c39c <__ledf2+0x70>
   4c3fc:	103fea1e 	bne	r2,zero,4c3a8 <__ledf2+0x7c>
   4c400:	003fdf06 	br	4c380 <__ledf2+0x54>
   4c404:	0005883a 	mov	r2,zero
   4c408:	403fe726 	beq	r8,zero,4c3a8 <__ledf2+0x7c>
   4c40c:	003fe406 	br	4c3a0 <__ledf2+0x74>
   4c410:	58bfe31e 	bne	r11,r2,4c3a0 <__ledf2+0x74>
   4c414:	0005883a 	mov	r2,zero
   4c418:	f800283a 	ret
   4c41c:	58bfef26 	beq	r11,r2,4c3dc <__ledf2+0xb0>
   4c420:	003fdf06 	br	4c3a0 <__ledf2+0x74>

0004c424 <__muldf3>:
   4c424:	defff304 	addi	sp,sp,-52
   4c428:	2804d53a 	srli	r2,r5,20
   4c42c:	df000b15 	stw	fp,44(sp)
   4c430:	2838d7fa 	srli	fp,r5,31
   4c434:	00c00434 	movhi	r3,16
   4c438:	ddc00a15 	stw	r23,40(sp)
   4c43c:	dd400815 	stw	r21,32(sp)
   4c440:	dc400415 	stw	r17,16(sp)
   4c444:	dc000315 	stw	r16,12(sp)
   4c448:	18ffffc4 	addi	r3,r3,-1
   4c44c:	dfc00c15 	stw	ra,48(sp)
   4c450:	dd800915 	stw	r22,36(sp)
   4c454:	dd000715 	stw	r20,28(sp)
   4c458:	dcc00615 	stw	r19,24(sp)
   4c45c:	dc800515 	stw	r18,20(sp)
   4c460:	1081ffcc 	andi	r2,r2,2047
   4c464:	2021883a 	mov	r16,r4
   4c468:	382f883a 	mov	r23,r7
   4c46c:	28e2703a 	and	r17,r5,r3
   4c470:	e02b883a 	mov	r21,fp
   4c474:	10009126 	beq	r2,zero,4c6bc <__muldf3+0x298>
   4c478:	10c1ffe0 	cmpeqi	r3,r2,2047
   4c47c:	1800a41e 	bne	r3,zero,4c710 <__muldf3+0x2ec>
   4c480:	882290fa 	slli	r17,r17,3
   4c484:	2006d77a 	srli	r3,r4,29
   4c488:	202890fa 	slli	r20,r4,3
   4c48c:	14ff0044 	addi	r19,r2,-1023
   4c490:	1c62b03a 	or	r17,r3,r17
   4c494:	8c402034 	orhi	r17,r17,128
   4c498:	0025883a 	mov	r18,zero
   4c49c:	000f883a 	mov	r7,zero
   4c4a0:	b804d53a 	srli	r2,r23,20
   4c4a4:	04000434 	movhi	r16,16
   4c4a8:	843fffc4 	addi	r16,r16,-1
   4c4ac:	1081ffcc 	andi	r2,r2,2047
   4c4b0:	b80ad7fa 	srli	r5,r23,31
   4c4b4:	302d883a 	mov	r22,r6
   4c4b8:	bc20703a 	and	r16,r23,r16
   4c4bc:	10006526 	beq	r2,zero,4c654 <__muldf3+0x230>
   4c4c0:	10c1ffe0 	cmpeqi	r3,r2,2047
   4c4c4:	1800291e 	bne	r3,zero,4c56c <__muldf3+0x148>
   4c4c8:	3006d77a 	srli	r3,r6,29
   4c4cc:	800890fa 	slli	r4,r16,3
   4c4d0:	10bf0044 	addi	r2,r2,-1023
   4c4d4:	14c5883a 	add	r2,r2,r19
   4c4d8:	1920b03a 	or	r16,r3,r4
   4c4dc:	90c002c8 	cmpgei	r3,r18,11
   4c4e0:	302c90fa 	slli	r22,r6,3
   4c4e4:	84002034 	orhi	r16,r16,128
   4c4e8:	0009883a 	mov	r4,zero
   4c4ec:	14c00044 	addi	r19,r2,1
   4c4f0:	18002c1e 	bne	r3,zero,4c5a4 <__muldf3+0x180>
   4c4f4:	2f2af03a 	xor	r21,r5,fp
   4c4f8:	90c000c8 	cmpgei	r3,r18,3
   4c4fc:	1800251e 	bne	r3,zero,4c594 <__muldf3+0x170>
   4c500:	94bfffc4 	addi	r18,r18,-1
   4c504:	948000a8 	cmpgeui	r18,r18,2
   4c508:	9000cb1e 	bne	r18,zero,4c838 <__muldf3+0x414>
   4c50c:	208000a0 	cmpeqi	r2,r4,2
   4c510:	1000861e 	bne	r2,zero,4c72c <__muldf3+0x308>
   4c514:	21000060 	cmpeqi	r4,r4,1
   4c518:	20002b26 	beq	r4,zero,4c5c8 <__muldf3+0x1a4>
   4c51c:	0009883a 	mov	r4,zero
   4c520:	0021883a 	mov	r16,zero
   4c524:	0029883a 	mov	r20,zero
   4c528:	2006953a 	slli	r3,r4,20
   4c52c:	a82a97fa 	slli	r21,r21,31
   4c530:	a005883a 	mov	r2,r20
   4c534:	1c06b03a 	or	r3,r3,r16
   4c538:	1d46b03a 	or	r3,r3,r21
   4c53c:	dfc00c17 	ldw	ra,48(sp)
   4c540:	df000b17 	ldw	fp,44(sp)
   4c544:	ddc00a17 	ldw	r23,40(sp)
   4c548:	dd800917 	ldw	r22,36(sp)
   4c54c:	dd400817 	ldw	r21,32(sp)
   4c550:	dd000717 	ldw	r20,28(sp)
   4c554:	dcc00617 	ldw	r19,24(sp)
   4c558:	dc800517 	ldw	r18,20(sp)
   4c55c:	dc400417 	ldw	r17,16(sp)
   4c560:	dc000317 	ldw	r16,12(sp)
   4c564:	dec00d04 	addi	sp,sp,52
   4c568:	f800283a 	ret
   4c56c:	8186b03a 	or	r3,r16,r6
   4c570:	9881ffc4 	addi	r2,r19,2047
   4c574:	18007726 	beq	r3,zero,4c754 <__muldf3+0x330>
   4c578:	948000d4 	ori	r18,r18,3
   4c57c:	90c002c8 	cmpgei	r3,r18,11
   4c580:	2f38f03a 	xor	fp,r5,fp
   4c584:	9cc20004 	addi	r19,r19,2048
   4c588:	1801501e 	bne	r3,zero,4cacc <__muldf3+0x6a8>
   4c58c:	e02b883a 	mov	r21,fp
   4c590:	010000c4 	movi	r4,3
   4c594:	00c00044 	movi	r3,1
   4c598:	1c86983a 	sll	r3,r3,r18
   4c59c:	19814c0c 	andi	r6,r3,1328
   4c5a0:	30002326 	beq	r6,zero,4c630 <__muldf3+0x20c>
   4c5a4:	388000a0 	cmpeqi	r2,r7,2
   4c5a8:	1000601e 	bne	r2,zero,4c72c <__muldf3+0x308>
   4c5ac:	388000e0 	cmpeqi	r2,r7,3
   4c5b0:	10010b1e 	bne	r2,zero,4c9e0 <__muldf3+0x5bc>
   4c5b4:	3809883a 	mov	r4,r7
   4c5b8:	21000060 	cmpeqi	r4,r4,1
   4c5bc:	8821883a 	mov	r16,r17
   4c5c0:	a02d883a 	mov	r22,r20
   4c5c4:	203fd51e 	bne	r4,zero,4c51c <__muldf3+0xf8>
   4c5c8:	98c0ffc4 	addi	r3,r19,1023
   4c5cc:	00c07d0e 	bge	zero,r3,4c7c4 <__muldf3+0x3a0>
   4c5d0:	b08001cc 	andi	r2,r22,7
   4c5d4:	10000726 	beq	r2,zero,4c5f4 <__muldf3+0x1d0>
   4c5d8:	b08003cc 	andi	r2,r22,15
   4c5dc:	10800120 	cmpeqi	r2,r2,4
   4c5e0:	1000041e 	bne	r2,zero,4c5f4 <__muldf3+0x1d0>
   4c5e4:	b0800104 	addi	r2,r22,4
   4c5e8:	15ad803a 	cmpltu	r22,r2,r22
   4c5ec:	85a1883a 	add	r16,r16,r22
   4c5f0:	102d883a 	mov	r22,r2
   4c5f4:	8080402c 	andhi	r2,r16,256
   4c5f8:	10000426 	beq	r2,zero,4c60c <__muldf3+0x1e8>
   4c5fc:	00bfc034 	movhi	r2,65280
   4c600:	10bfffc4 	addi	r2,r2,-1
   4c604:	80a0703a 	and	r16,r16,r2
   4c608:	98c10004 	addi	r3,r19,1024
   4c60c:	1881ffc8 	cmpgei	r2,r3,2047
   4c610:	1000461e 	bne	r2,zero,4c72c <__muldf3+0x308>
   4c614:	8028977a 	slli	r20,r16,29
   4c618:	b02cd0fa 	srli	r22,r22,3
   4c61c:	8020927a 	slli	r16,r16,9
   4c620:	1901ffcc 	andi	r4,r3,2047
   4c624:	a5a8b03a 	or	r20,r20,r22
   4c628:	8020d33a 	srli	r16,r16,12
   4c62c:	003fbe06 	br	4c528 <__muldf3+0x104>
   4c630:	1980900c 	andi	r6,r3,576
   4c634:	3000411e 	bne	r6,zero,4c73c <__muldf3+0x318>
   4c638:	18c0220c 	andi	r3,r3,136
   4c63c:	18007e26 	beq	r3,zero,4c838 <__muldf3+0x414>
   4c640:	282b883a 	mov	r21,r5
   4c644:	8023883a 	mov	r17,r16
   4c648:	b029883a 	mov	r20,r22
   4c64c:	200f883a 	mov	r7,r4
   4c650:	003fd406 	br	4c5a4 <__muldf3+0x180>
   4c654:	8184b03a 	or	r2,r16,r6
   4c658:	10005126 	beq	r2,zero,4c7a0 <__muldf3+0x37c>
   4c65c:	d9800215 	stw	r6,8(sp)
   4c660:	d9400115 	stw	r5,4(sp)
   4c664:	d9c00015 	stw	r7,0(sp)
   4c668:	8000ec26 	beq	r16,zero,4ca1c <__muldf3+0x5f8>
   4c66c:	8009883a 	mov	r4,r16
   4c670:	0040dc80 	call	40dc8 <__clzsi2>
   4c674:	d9c00017 	ldw	r7,0(sp)
   4c678:	d9400117 	ldw	r5,4(sp)
   4c67c:	d9800217 	ldw	r6,8(sp)
   4c680:	113ffd44 	addi	r4,r2,-11
   4c684:	00c00744 	movi	r3,29
   4c688:	15bffe04 	addi	r22,r2,-8
   4c68c:	1907c83a 	sub	r3,r3,r4
   4c690:	85a0983a 	sll	r16,r16,r22
   4c694:	30c6d83a 	srl	r3,r6,r3
   4c698:	35ac983a 	sll	r22,r6,r22
   4c69c:	1c20b03a 	or	r16,r3,r16
   4c6a0:	9885c83a 	sub	r2,r19,r2
   4c6a4:	10bf0344 	addi	r2,r2,-1011
   4c6a8:	90c002c8 	cmpgei	r3,r18,11
   4c6ac:	0009883a 	mov	r4,zero
   4c6b0:	14c00044 	addi	r19,r2,1
   4c6b4:	183f8f26 	beq	r3,zero,4c4f4 <__muldf3+0xd0>
   4c6b8:	003fba06 	br	4c5a4 <__muldf3+0x180>
   4c6bc:	2468b03a 	or	r20,r4,r17
   4c6c0:	a0003226 	beq	r20,zero,4c78c <__muldf3+0x368>
   4c6c4:	d9800015 	stw	r6,0(sp)
   4c6c8:	8800ca26 	beq	r17,zero,4c9f4 <__muldf3+0x5d0>
   4c6cc:	8809883a 	mov	r4,r17
   4c6d0:	0040dc80 	call	40dc8 <__clzsi2>
   4c6d4:	d9800017 	ldw	r6,0(sp)
   4c6d8:	1009883a 	mov	r4,r2
   4c6dc:	117ffd44 	addi	r5,r2,-11
   4c6e0:	00c00744 	movi	r3,29
   4c6e4:	253ffe04 	addi	r20,r4,-8
   4c6e8:	1947c83a 	sub	r3,r3,r5
   4c6ec:	8d22983a 	sll	r17,r17,r20
   4c6f0:	80c6d83a 	srl	r3,r16,r3
   4c6f4:	8528983a 	sll	r20,r16,r20
   4c6f8:	1c62b03a 	or	r17,r3,r17
   4c6fc:	00bf0344 	movi	r2,-1011
   4c700:	1127c83a 	sub	r19,r2,r4
   4c704:	0025883a 	mov	r18,zero
   4c708:	000f883a 	mov	r7,zero
   4c70c:	003f6406 	br	4c4a0 <__muldf3+0x7c>
   4c710:	2468b03a 	or	r20,r4,r17
   4c714:	a000181e 	bne	r20,zero,4c778 <__muldf3+0x354>
   4c718:	0023883a 	mov	r17,zero
   4c71c:	04800204 	movi	r18,8
   4c720:	04c1ffc4 	movi	r19,2047
   4c724:	01c00084 	movi	r7,2
   4c728:	003f5d06 	br	4c4a0 <__muldf3+0x7c>
   4c72c:	0101ffc4 	movi	r4,2047
   4c730:	0021883a 	mov	r16,zero
   4c734:	0029883a 	mov	r20,zero
   4c738:	003f7b06 	br	4c528 <__muldf3+0x104>
   4c73c:	04000434 	movhi	r16,16
   4c740:	002b883a 	mov	r21,zero
   4c744:	843fffc4 	addi	r16,r16,-1
   4c748:	053fffc4 	movi	r20,-1
   4c74c:	0101ffc4 	movi	r4,2047
   4c750:	003f7506 	br	4c528 <__muldf3+0x104>
   4c754:	94800094 	ori	r18,r18,2
   4c758:	90c002c8 	cmpgei	r3,r18,11
   4c75c:	9cc20004 	addi	r19,r19,2048
   4c760:	183f901e 	bne	r3,zero,4c5a4 <__muldf3+0x180>
   4c764:	2f2af03a 	xor	r21,r5,fp
   4c768:	002d883a 	mov	r22,zero
   4c76c:	0021883a 	mov	r16,zero
   4c770:	01000084 	movi	r4,2
   4c774:	003f6006 	br	4c4f8 <__muldf3+0xd4>
   4c778:	2029883a 	mov	r20,r4
   4c77c:	04800304 	movi	r18,12
   4c780:	04c1ffc4 	movi	r19,2047
   4c784:	01c000c4 	movi	r7,3
   4c788:	003f4506 	br	4c4a0 <__muldf3+0x7c>
   4c78c:	0023883a 	mov	r17,zero
   4c790:	04800104 	movi	r18,4
   4c794:	0027883a 	mov	r19,zero
   4c798:	01c00044 	movi	r7,1
   4c79c:	003f4006 	br	4c4a0 <__muldf3+0x7c>
   4c7a0:	94800054 	ori	r18,r18,1
   4c7a4:	9805883a 	mov	r2,r19
   4c7a8:	90c002c8 	cmpgei	r3,r18,11
   4c7ac:	0021883a 	mov	r16,zero
   4c7b0:	002d883a 	mov	r22,zero
   4c7b4:	01000044 	movi	r4,1
   4c7b8:	14c00044 	addi	r19,r2,1
   4c7bc:	183f4d26 	beq	r3,zero,4c4f4 <__muldf3+0xd0>
   4c7c0:	003f7806 	br	4c5a4 <__muldf3+0x180>
   4c7c4:	01000044 	movi	r4,1
   4c7c8:	20c9c83a 	sub	r4,r4,r3
   4c7cc:	20800e48 	cmpgei	r2,r4,57
   4c7d0:	103f521e 	bne	r2,zero,4c51c <__muldf3+0xf8>
   4c7d4:	20800808 	cmpgei	r2,r4,32
   4c7d8:	1000a11e 	bne	r2,zero,4ca60 <__muldf3+0x63c>
   4c7dc:	9cc10784 	addi	r19,r19,1054
   4c7e0:	b104d83a 	srl	r2,r22,r4
   4c7e4:	84e8983a 	sll	r20,r16,r19
   4c7e8:	b4e6983a 	sll	r19,r22,r19
   4c7ec:	8108d83a 	srl	r4,r16,r4
   4c7f0:	a0a8b03a 	or	r20,r20,r2
   4c7f4:	9826c03a 	cmpne	r19,r19,zero
   4c7f8:	a4e8b03a 	or	r20,r20,r19
   4c7fc:	a08001cc 	andi	r2,r20,7
   4c800:	10000726 	beq	r2,zero,4c820 <__muldf3+0x3fc>
   4c804:	a08003cc 	andi	r2,r20,15
   4c808:	10800120 	cmpeqi	r2,r2,4
   4c80c:	1000041e 	bne	r2,zero,4c820 <__muldf3+0x3fc>
   4c810:	a0800104 	addi	r2,r20,4
   4c814:	1529803a 	cmpltu	r20,r2,r20
   4c818:	2509883a 	add	r4,r4,r20
   4c81c:	1029883a 	mov	r20,r2
   4c820:	2080202c 	andhi	r2,r4,128
   4c824:	1000a526 	beq	r2,zero,4cabc <__muldf3+0x698>
   4c828:	01000044 	movi	r4,1
   4c82c:	0021883a 	mov	r16,zero
   4c830:	0029883a 	mov	r20,zero
   4c834:	003f3c06 	br	4c528 <__muldf3+0x104>
   4c838:	a018d43a 	srli	r12,r20,16
   4c83c:	b010d43a 	srli	r8,r22,16
   4c840:	a53fffcc 	andi	r20,r20,65535
   4c844:	b5bfffcc 	andi	r22,r22,65535
   4c848:	b509383a 	mul	r4,r22,r20
   4c84c:	658d383a 	mul	r6,r12,r22
   4c850:	450b383a 	mul	r5,r8,r20
   4c854:	2006d43a 	srli	r3,r4,16
   4c858:	620f383a 	mul	r7,r12,r8
   4c85c:	298b883a 	add	r5,r5,r6
   4c860:	1947883a 	add	r3,r3,r5
   4c864:	1980022e 	bgeu	r3,r6,4c870 <__muldf3+0x44c>
   4c868:	01400074 	movhi	r5,1
   4c86c:	394f883a 	add	r7,r7,r5
   4c870:	8014d43a 	srli	r10,r16,16
   4c874:	843fffcc 	andi	r16,r16,65535
   4c878:	8517383a 	mul	r11,r16,r20
   4c87c:	641b383a 	mul	r13,r12,r16
   4c880:	5529383a 	mul	r20,r10,r20
   4c884:	580ad43a 	srli	r5,r11,16
   4c888:	180c943a 	slli	r6,r3,16
   4c88c:	a369883a 	add	r20,r20,r13
   4c890:	227fffcc 	andi	r9,r4,65535
   4c894:	2d0b883a 	add	r5,r5,r20
   4c898:	1808d43a 	srli	r4,r3,16
   4c89c:	6299383a 	mul	r12,r12,r10
   4c8a0:	324d883a 	add	r6,r6,r9
   4c8a4:	2b40022e 	bgeu	r5,r13,4c8b0 <__muldf3+0x48c>
   4c8a8:	00c00074 	movhi	r3,1
   4c8ac:	60d9883a 	add	r12,r12,r3
   4c8b0:	881ad43a 	srli	r13,r17,16
   4c8b4:	8c7fffcc 	andi	r17,r17,65535
   4c8b8:	b45f383a 	mul	r15,r22,r17
   4c8bc:	445d383a 	mul	r14,r8,r17
   4c8c0:	6dad383a 	mul	r22,r13,r22
   4c8c4:	2812943a 	slli	r9,r5,16
   4c8c8:	7806d43a 	srli	r3,r15,16
   4c8cc:	280ad43a 	srli	r5,r5,16
   4c8d0:	5affffcc 	andi	r11,r11,65535
   4c8d4:	759d883a 	add	r14,r14,r22
   4c8d8:	4ad3883a 	add	r9,r9,r11
   4c8dc:	1b87883a 	add	r3,r3,r14
   4c8e0:	4365383a 	mul	r18,r8,r13
   4c8e4:	2b17883a 	add	r11,r5,r12
   4c8e8:	2249883a 	add	r4,r4,r9
   4c8ec:	1d80022e 	bgeu	r3,r22,4c8f8 <__muldf3+0x4d4>
   4c8f0:	01400074 	movhi	r5,1
   4c8f4:	9165883a 	add	r18,r18,r5
   4c8f8:	8459383a 	mul	r12,r16,r17
   4c8fc:	5463383a 	mul	r17,r10,r17
   4c900:	6c21383a 	mul	r16,r13,r16
   4c904:	6010d43a 	srli	r8,r12,16
   4c908:	181cd43a 	srli	r14,r3,16
   4c90c:	180a943a 	slli	r5,r3,16
   4c910:	8c23883a 	add	r17,r17,r16
   4c914:	78ffffcc 	andi	r3,r15,65535
   4c918:	4451883a 	add	r8,r8,r17
   4c91c:	5355383a 	mul	r10,r10,r13
   4c920:	749d883a 	add	r14,r14,r18
   4c924:	28cb883a 	add	r5,r5,r3
   4c928:	4400022e 	bgeu	r8,r16,4c934 <__muldf3+0x510>
   4c92c:	00c00074 	movhi	r3,1
   4c930:	50d5883a 	add	r10,r10,r3
   4c934:	4006943a 	slli	r3,r8,16
   4c938:	633fffcc 	andi	r12,r12,65535
   4c93c:	21c9883a 	add	r4,r4,r7
   4c940:	1b07883a 	add	r3,r3,r12
   4c944:	2253803a 	cmpltu	r9,r4,r9
   4c948:	1ac7883a 	add	r3,r3,r11
   4c94c:	2149883a 	add	r4,r4,r5
   4c950:	1a5b883a 	add	r13,r3,r9
   4c954:	214b803a 	cmpltu	r5,r4,r5
   4c958:	6b8f883a 	add	r7,r13,r14
   4c95c:	4010d43a 	srli	r8,r8,16
   4c960:	3959883a 	add	r12,r7,r5
   4c964:	1ae1803a 	cmpltu	r16,r3,r11
   4c968:	6a5b803a 	cmpltu	r13,r13,r9
   4c96c:	614b803a 	cmpltu	r5,r12,r5
   4c970:	8360b03a 	or	r16,r16,r13
   4c974:	3b8f803a 	cmpltu	r7,r7,r14
   4c978:	394eb03a 	or	r7,r7,r5
   4c97c:	8221883a 	add	r16,r16,r8
   4c980:	202c927a 	slli	r22,r4,9
   4c984:	81e1883a 	add	r16,r16,r7
   4c988:	82a1883a 	add	r16,r16,r10
   4c98c:	8020927a 	slli	r16,r16,9
   4c990:	2008d5fa 	srli	r4,r4,23
   4c994:	600ad5fa 	srli	r5,r12,23
   4c998:	6006927a 	slli	r3,r12,9
   4c99c:	b1acb03a 	or	r22,r22,r6
   4c9a0:	b02cc03a 	cmpne	r22,r22,zero
   4c9a4:	b12cb03a 	or	r22,r22,r4
   4c9a8:	8100402c 	andhi	r4,r16,256
   4c9ac:	b0ecb03a 	or	r22,r22,r3
   4c9b0:	8160b03a 	or	r16,r16,r5
   4c9b4:	20002826 	beq	r4,zero,4ca58 <__muldf3+0x634>
   4c9b8:	b006d07a 	srli	r3,r22,1
   4c9bc:	800497fa 	slli	r2,r16,31
   4c9c0:	b580004c 	andi	r22,r22,1
   4c9c4:	1d86b03a 	or	r3,r3,r22
   4c9c8:	8020d07a 	srli	r16,r16,1
   4c9cc:	18acb03a 	or	r22,r3,r2
   4c9d0:	003efd06 	br	4c5c8 <__muldf3+0x1a4>
   4c9d4:	282b883a 	mov	r21,r5
   4c9d8:	8023883a 	mov	r17,r16
   4c9dc:	3029883a 	mov	r20,r6
   4c9e0:	00800434 	movhi	r2,16
   4c9e4:	8c000234 	orhi	r16,r17,8
   4c9e8:	10bfffc4 	addi	r2,r2,-1
   4c9ec:	80a0703a 	and	r16,r16,r2
   4c9f0:	003f5606 	br	4c74c <__muldf3+0x328>
   4c9f4:	0040dc80 	call	40dc8 <__clzsi2>
   4c9f8:	11400544 	addi	r5,r2,21
   4c9fc:	28c00748 	cmpgei	r3,r5,29
   4ca00:	d9800017 	ldw	r6,0(sp)
   4ca04:	11000804 	addi	r4,r2,32
   4ca08:	183f3526 	beq	r3,zero,4c6e0 <__muldf3+0x2bc>
   4ca0c:	10bffe04 	addi	r2,r2,-8
   4ca10:	80a2983a 	sll	r17,r16,r2
   4ca14:	0029883a 	mov	r20,zero
   4ca18:	003f3806 	br	4c6fc <__muldf3+0x2d8>
   4ca1c:	3009883a 	mov	r4,r6
   4ca20:	0040dc80 	call	40dc8 <__clzsi2>
   4ca24:	11000544 	addi	r4,r2,21
   4ca28:	22000748 	cmpgei	r8,r4,29
   4ca2c:	1007883a 	mov	r3,r2
   4ca30:	d9c00017 	ldw	r7,0(sp)
   4ca34:	d9400117 	ldw	r5,4(sp)
   4ca38:	d9800217 	ldw	r6,8(sp)
   4ca3c:	10800804 	addi	r2,r2,32
   4ca40:	403f1026 	beq	r8,zero,4c684 <__muldf3+0x260>
   4ca44:	18fffe04 	addi	r3,r3,-8
   4ca48:	b0c6983a 	sll	r3,r22,r3
   4ca4c:	002d883a 	mov	r22,zero
   4ca50:	1821883a 	mov	r16,r3
   4ca54:	003f1206 	br	4c6a0 <__muldf3+0x27c>
   4ca58:	1027883a 	mov	r19,r2
   4ca5c:	003eda06 	br	4c5c8 <__muldf3+0x1a4>
   4ca60:	00bff844 	movi	r2,-31
   4ca64:	10c7c83a 	sub	r3,r2,r3
   4ca68:	21000820 	cmpeqi	r4,r4,32
   4ca6c:	80c6d83a 	srl	r3,r16,r3
   4ca70:	2000031e 	bne	r4,zero,4ca80 <__muldf3+0x65c>
   4ca74:	9cc10f84 	addi	r19,r19,1086
   4ca78:	84e6983a 	sll	r19,r16,r19
   4ca7c:	b4ecb03a 	or	r22,r22,r19
   4ca80:	b028c03a 	cmpne	r20,r22,zero
   4ca84:	a0e8b03a 	or	r20,r20,r3
   4ca88:	a08001cc 	andi	r2,r20,7
   4ca8c:	1000051e 	bne	r2,zero,4caa4 <__muldf3+0x680>
   4ca90:	0021883a 	mov	r16,zero
   4ca94:	a028d0fa 	srli	r20,r20,3
   4ca98:	0009883a 	mov	r4,zero
   4ca9c:	a0a8b03a 	or	r20,r20,r2
   4caa0:	003ea106 	br	4c528 <__muldf3+0x104>
   4caa4:	a08003cc 	andi	r2,r20,15
   4caa8:	10800120 	cmpeqi	r2,r2,4
   4caac:	1000111e 	bne	r2,zero,4caf4 <__muldf3+0x6d0>
   4cab0:	a0800104 	addi	r2,r20,4
   4cab4:	1509803a 	cmpltu	r4,r2,r20
   4cab8:	1029883a 	mov	r20,r2
   4cabc:	2020927a 	slli	r16,r4,9
   4cac0:	2004977a 	slli	r2,r4,29
   4cac4:	8020d33a 	srli	r16,r16,12
   4cac8:	003ff206 	br	4ca94 <__muldf3+0x670>
   4cacc:	948003e0 	cmpeqi	r18,r18,15
   4cad0:	903fc026 	beq	r18,zero,4c9d4 <__muldf3+0x5b0>
   4cad4:	8880022c 	andhi	r2,r17,8
   4cad8:	103fc126 	beq	r2,zero,4c9e0 <__muldf3+0x5bc>
   4cadc:	b9c0022c 	andhi	r7,r23,8
   4cae0:	383fbf1e 	bne	r7,zero,4c9e0 <__muldf3+0x5bc>
   4cae4:	84000234 	orhi	r16,r16,8
   4cae8:	282b883a 	mov	r21,r5
   4caec:	3029883a 	mov	r20,r6
   4caf0:	003f1606 	br	4c74c <__muldf3+0x328>
   4caf4:	0009883a 	mov	r4,zero
   4caf8:	003ff006 	br	4cabc <__muldf3+0x698>

0004cafc <__subdf3>:
   4cafc:	00800434 	movhi	r2,16
   4cb00:	3806d53a 	srli	r3,r7,20
   4cb04:	10bfffc4 	addi	r2,r2,-1
   4cb08:	defffa04 	addi	sp,sp,-24
   4cb0c:	2890703a 	and	r8,r5,r2
   4cb10:	3884703a 	and	r2,r7,r2
   4cb14:	2812d7fa 	srli	r9,r5,31
   4cb18:	401090fa 	slli	r8,r8,3
   4cb1c:	280ad53a 	srli	r5,r5,20
   4cb20:	100490fa 	slli	r2,r2,3
   4cb24:	3016d77a 	srli	r11,r6,29
   4cb28:	dc400115 	stw	r17,4(sp)
   4cb2c:	2022d77a 	srli	r17,r4,29
   4cb30:	18c1ffcc 	andi	r3,r3,2047
   4cb34:	dd000415 	stw	r20,16(sp)
   4cb38:	dcc00315 	stw	r19,12(sp)
   4cb3c:	dc000015 	stw	r16,0(sp)
   4cb40:	dfc00515 	stw	ra,20(sp)
   4cb44:	dc800215 	stw	r18,8(sp)
   4cb48:	1a81ffd8 	cmpnei	r10,r3,2047
   4cb4c:	2c01ffcc 	andi	r16,r5,2047
   4cb50:	380ed7fa 	srli	r7,r7,31
   4cb54:	201890fa 	slli	r12,r4,3
   4cb58:	301a90fa 	slli	r13,r6,3
   4cb5c:	4829883a 	mov	r20,r9
   4cb60:	4cc03fcc 	andi	r19,r9,255
   4cb64:	8a22b03a 	or	r17,r17,r8
   4cb68:	588ab03a 	or	r5,r11,r2
   4cb6c:	50007126 	beq	r10,zero,4cd34 <__subdf3+0x238>
   4cb70:	39c0005c 	xori	r7,r7,1
   4cb74:	3813883a 	mov	r9,r7
   4cb78:	3a803fcc 	andi	r10,r7,255
   4cb7c:	80d1c83a 	sub	r8,r16,r3
   4cb80:	99c05526 	beq	r19,r7,4ccd8 <__subdf3+0x1dc>
   4cb84:	0202320e 	bge	zero,r8,4d450 <__subdf3+0x954>
   4cb88:	18008426 	beq	r3,zero,4cd9c <__subdf3+0x2a0>
   4cb8c:	8081ffe0 	cmpeqi	r2,r16,2047
   4cb90:	10011b1e 	bne	r2,zero,4d000 <__subdf3+0x504>
   4cb94:	40800e48 	cmpgei	r2,r8,57
   4cb98:	1000881e 	bne	r2,zero,4cdbc <__subdf3+0x2c0>
   4cb9c:	29402034 	orhi	r5,r5,128
   4cba0:	40800808 	cmpgei	r2,r8,32
   4cba4:	1001451e 	bne	r2,zero,4d0bc <__subdf3+0x5c0>
   4cba8:	00800804 	movi	r2,32
   4cbac:	1205c83a 	sub	r2,r2,r8
   4cbb0:	28a4983a 	sll	r18,r5,r2
   4cbb4:	6a06d83a 	srl	r3,r13,r8
   4cbb8:	6884983a 	sll	r2,r13,r2
   4cbbc:	2a10d83a 	srl	r8,r5,r8
   4cbc0:	90e4b03a 	or	r18,r18,r3
   4cbc4:	1004c03a 	cmpne	r2,r2,zero
   4cbc8:	90a4b03a 	or	r18,r18,r2
   4cbcc:	8a23c83a 	sub	r17,r17,r8
   4cbd0:	64a5c83a 	sub	r18,r12,r18
   4cbd4:	6485803a 	cmpltu	r2,r12,r18
   4cbd8:	88a3c83a 	sub	r17,r17,r2
   4cbdc:	8880202c 	andhi	r2,r17,128
   4cbe0:	1000ae26 	beq	r2,zero,4ce9c <__subdf3+0x3a0>
   4cbe4:	00802034 	movhi	r2,128
   4cbe8:	10bfffc4 	addi	r2,r2,-1
   4cbec:	88a2703a 	and	r17,r17,r2
   4cbf0:	8800de26 	beq	r17,zero,4cf6c <__subdf3+0x470>
   4cbf4:	8809883a 	mov	r4,r17
   4cbf8:	0040dc80 	call	40dc8 <__clzsi2>
   4cbfc:	10fffe04 	addi	r3,r2,-8
   4cc00:	01000804 	movi	r4,32
   4cc04:	20c5c83a 	sub	r2,r4,r3
   4cc08:	9084d83a 	srl	r2,r18,r2
   4cc0c:	88e2983a 	sll	r17,r17,r3
   4cc10:	90e4983a 	sll	r18,r18,r3
   4cc14:	1444b03a 	or	r2,r2,r17
   4cc18:	1c010516 	blt	r3,r16,4d030 <__subdf3+0x534>
   4cc1c:	1c07c83a 	sub	r3,r3,r16
   4cc20:	18c00044 	addi	r3,r3,1
   4cc24:	20c9c83a 	sub	r4,r4,r3
   4cc28:	910a983a 	sll	r5,r18,r4
   4cc2c:	90e2d83a 	srl	r17,r18,r3
   4cc30:	280ac03a 	cmpne	r5,r5,zero
   4cc34:	1108983a 	sll	r4,r2,r4
   4cc38:	894ab03a 	or	r5,r17,r5
   4cc3c:	10e2d83a 	srl	r17,r2,r3
   4cc40:	0021883a 	mov	r16,zero
   4cc44:	2164b03a 	or	r18,r4,r5
   4cc48:	908001cc 	andi	r2,r18,7
   4cc4c:	10000726 	beq	r2,zero,4cc6c <__subdf3+0x170>
   4cc50:	908003cc 	andi	r2,r18,15
   4cc54:	10800120 	cmpeqi	r2,r2,4
   4cc58:	1000041e 	bne	r2,zero,4cc6c <__subdf3+0x170>
   4cc5c:	90800104 	addi	r2,r18,4
   4cc60:	14a5803a 	cmpltu	r18,r2,r18
   4cc64:	8ca3883a 	add	r17,r17,r18
   4cc68:	1025883a 	mov	r18,r2
   4cc6c:	8880202c 	andhi	r2,r17,128
   4cc70:	1000d726 	beq	r2,zero,4cfd0 <__subdf3+0x4d4>
   4cc74:	8081ffa0 	cmpeqi	r2,r16,2046
   4cc78:	84000044 	addi	r16,r16,1
   4cc7c:	10007c1e 	bne	r2,zero,4ce70 <__subdf3+0x374>
   4cc80:	013fe034 	movhi	r4,65408
   4cc84:	213fffc4 	addi	r4,r4,-1
   4cc88:	8908703a 	and	r4,r17,r4
   4cc8c:	2004977a 	slli	r2,r4,29
   4cc90:	2008927a 	slli	r4,r4,9
   4cc94:	9024d0fa 	srli	r18,r18,3
   4cc98:	80c1ffcc 	andi	r3,r16,2047
   4cc9c:	2008d33a 	srli	r4,r4,12
   4cca0:	1484b03a 	or	r2,r2,r18
   4cca4:	9d00004c 	andi	r20,r19,1
   4cca8:	1806953a 	slli	r3,r3,20
   4ccac:	a02897fa 	slli	r20,r20,31
   4ccb0:	1906b03a 	or	r3,r3,r4
   4ccb4:	1d06b03a 	or	r3,r3,r20
   4ccb8:	dfc00517 	ldw	ra,20(sp)
   4ccbc:	dd000417 	ldw	r20,16(sp)
   4ccc0:	dcc00317 	ldw	r19,12(sp)
   4ccc4:	dc800217 	ldw	r18,8(sp)
   4ccc8:	dc400117 	ldw	r17,4(sp)
   4cccc:	dc000017 	ldw	r16,0(sp)
   4ccd0:	dec00604 	addi	sp,sp,24
   4ccd4:	f800283a 	ret
   4ccd8:	0201e60e 	bge	zero,r8,4d474 <__subdf3+0x978>
   4ccdc:	18004d1e 	bne	r3,zero,4ce14 <__subdf3+0x318>
   4cce0:	2b44b03a 	or	r2,r5,r13
   4cce4:	1000d026 	beq	r2,zero,4d028 <__subdf3+0x52c>
   4cce8:	823fffc4 	addi	r8,r16,-1
   4ccec:	40006426 	beq	r8,zero,4ce80 <__subdf3+0x384>
   4ccf0:	8081ffe0 	cmpeqi	r2,r16,2047
   4ccf4:	10018e1e 	bne	r2,zero,4d330 <__subdf3+0x834>
   4ccf8:	40800e48 	cmpgei	r2,r8,57
   4ccfc:	1000491e 	bne	r2,zero,4ce24 <__subdf3+0x328>
   4cd00:	40800808 	cmpgei	r2,r8,32
   4cd04:	1001431e 	bne	r2,zero,4d214 <__subdf3+0x718>
   4cd08:	00800804 	movi	r2,32
   4cd0c:	1205c83a 	sub	r2,r2,r8
   4cd10:	28a4983a 	sll	r18,r5,r2
   4cd14:	6a06d83a 	srl	r3,r13,r8
   4cd18:	6884983a 	sll	r2,r13,r2
   4cd1c:	2a10d83a 	srl	r8,r5,r8
   4cd20:	90e4b03a 	or	r18,r18,r3
   4cd24:	1004c03a 	cmpne	r2,r2,zero
   4cd28:	90a4b03a 	or	r18,r18,r2
   4cd2c:	8a23883a 	add	r17,r17,r8
   4cd30:	00003d06 	br	4ce28 <__subdf3+0x32c>
   4cd34:	2b44b03a 	or	r2,r5,r13
   4cd38:	823e0044 	addi	r8,r16,-2047
   4cd3c:	1000211e 	bne	r2,zero,4cdc4 <__subdf3+0x2c8>
   4cd40:	39c0005c 	xori	r7,r7,1
   4cd44:	3813883a 	mov	r9,r7
   4cd48:	3a803fcc 	andi	r10,r7,255
   4cd4c:	99c06b26 	beq	r19,r7,4cefc <__subdf3+0x400>
   4cd50:	40005526 	beq	r8,zero,4cea8 <__subdf3+0x3ac>
   4cd54:	8000201e 	bne	r16,zero,4cdd8 <__subdf3+0x2dc>
   4cd58:	0401ffc4 	movi	r16,2047
   4cd5c:	8b04b03a 	or	r2,r17,r12
   4cd60:	1000ae26 	beq	r2,zero,4d01c <__subdf3+0x520>
   4cd64:	80bfffc4 	addi	r2,r16,-1
   4cd68:	10015e26 	beq	r2,zero,4d2e4 <__subdf3+0x7e8>
   4cd6c:	8401ffe0 	cmpeqi	r16,r16,2047
   4cd70:	8001801e 	bne	r16,zero,4d374 <__subdf3+0x878>
   4cd74:	11000e48 	cmpgei	r4,r2,57
   4cd78:	5027883a 	mov	r19,r10
   4cd7c:	4829883a 	mov	r20,r9
   4cd80:	20011326 	beq	r4,zero,4d1d0 <__subdf3+0x6d4>
   4cd84:	04800044 	movi	r18,1
   4cd88:	6ca5c83a 	sub	r18,r13,r18
   4cd8c:	6c9b803a 	cmpltu	r13,r13,r18
   4cd90:	2b63c83a 	sub	r17,r5,r13
   4cd94:	1821883a 	mov	r16,r3
   4cd98:	003f9006 	br	4cbdc <__subdf3+0xe0>
   4cd9c:	2b44b03a 	or	r2,r5,r13
   4cda0:	1000a126 	beq	r2,zero,4d028 <__subdf3+0x52c>
   4cda4:	823fffc4 	addi	r8,r16,-1
   4cda8:	4000fe26 	beq	r8,zero,4d1a4 <__subdf3+0x6a8>
   4cdac:	8081ffe0 	cmpeqi	r2,r16,2047
   4cdb0:	1000931e 	bne	r2,zero,4d000 <__subdf3+0x504>
   4cdb4:	40800e48 	cmpgei	r2,r8,57
   4cdb8:	103f7926 	beq	r2,zero,4cba0 <__subdf3+0xa4>
   4cdbc:	04800044 	movi	r18,1
   4cdc0:	003f8306 	br	4cbd0 <__subdf3+0xd4>
   4cdc4:	3a803fcc 	andi	r10,r7,255
   4cdc8:	99c04c26 	beq	r19,r7,4cefc <__subdf3+0x400>
   4cdcc:	40003626 	beq	r8,zero,4cea8 <__subdf3+0x3ac>
   4cdd0:	3813883a 	mov	r9,r7
   4cdd4:	803fe026 	beq	r16,zero,4cd58 <__subdf3+0x25c>
   4cdd8:	2804977a 	slli	r2,r5,29
   4cddc:	00c80034 	movhi	r3,8192
   4cde0:	18ffffc4 	addi	r3,r3,-1
   4cde4:	280ad0fa 	srli	r5,r5,3
   4cde8:	30c6703a 	and	r3,r6,r3
   4cdec:	10c4b03a 	or	r2,r2,r3
   4cdf0:	4829883a 	mov	r20,r9
   4cdf4:	1146b03a 	or	r3,r2,r5
   4cdf8:	18019126 	beq	r3,zero,4d440 <__subdf3+0x944>
   4cdfc:	00c00434 	movhi	r3,16
   4ce00:	18ffffc4 	addi	r3,r3,-1
   4ce04:	29000234 	orhi	r4,r5,8
   4ce08:	20c8703a 	and	r4,r4,r3
   4ce0c:	00c1ffc4 	movi	r3,2047
   4ce10:	003fa506 	br	4cca8 <__subdf3+0x1ac>
   4ce14:	8081ffe0 	cmpeqi	r2,r16,2047
   4ce18:	1000791e 	bne	r2,zero,4d000 <__subdf3+0x504>
   4ce1c:	40800e48 	cmpgei	r2,r8,57
   4ce20:	1000b126 	beq	r2,zero,4d0e8 <__subdf3+0x5ec>
   4ce24:	04800044 	movi	r18,1
   4ce28:	9325883a 	add	r18,r18,r12
   4ce2c:	9305803a 	cmpltu	r2,r18,r12
   4ce30:	88a3883a 	add	r17,r17,r2
   4ce34:	8880202c 	andhi	r2,r17,128
   4ce38:	10001826 	beq	r2,zero,4ce9c <__subdf3+0x3a0>
   4ce3c:	84000044 	addi	r16,r16,1
   4ce40:	8081ffe0 	cmpeqi	r2,r16,2047
   4ce44:	10000a1e 	bne	r2,zero,4ce70 <__subdf3+0x374>
   4ce48:	00bfe034 	movhi	r2,65408
   4ce4c:	10bfffc4 	addi	r2,r2,-1
   4ce50:	9006d07a 	srli	r3,r18,1
   4ce54:	8884703a 	and	r2,r17,r2
   4ce58:	100897fa 	slli	r4,r2,31
   4ce5c:	9480004c 	andi	r18,r18,1
   4ce60:	1c86b03a 	or	r3,r3,r18
   4ce64:	1022d07a 	srli	r17,r2,1
   4ce68:	20e4b03a 	or	r18,r4,r3
   4ce6c:	003f7606 	br	4cc48 <__subdf3+0x14c>
   4ce70:	00c1ffc4 	movi	r3,2047
   4ce74:	0009883a 	mov	r4,zero
   4ce78:	0005883a 	mov	r2,zero
   4ce7c:	003f8a06 	br	4cca8 <__subdf3+0x1ac>
   4ce80:	6365883a 	add	r18,r12,r13
   4ce84:	894b883a 	add	r5,r17,r5
   4ce88:	9305803a 	cmpltu	r2,r18,r12
   4ce8c:	28a3883a 	add	r17,r5,r2
   4ce90:	8880202c 	andhi	r2,r17,128
   4ce94:	1001241e 	bne	r2,zero,4d328 <__subdf3+0x82c>
   4ce98:	04000044 	movi	r16,1
   4ce9c:	908001cc 	andi	r2,r18,7
   4cea0:	103f6b1e 	bne	r2,zero,4cc50 <__subdf3+0x154>
   4cea4:	00007906 	br	4d08c <__subdf3+0x590>
   4cea8:	80800044 	addi	r2,r16,1
   4ceac:	1081ff8c 	andi	r2,r2,2046
   4ceb0:	1000781e 	bne	r2,zero,4d094 <__subdf3+0x598>
   4ceb4:	2b44b03a 	or	r2,r5,r13
   4ceb8:	8b06b03a 	or	r3,r17,r12
   4cebc:	8000af1e 	bne	r16,zero,4d17c <__subdf3+0x680>
   4cec0:	18011026 	beq	r3,zero,4d304 <__subdf3+0x808>
   4cec4:	1000de26 	beq	r2,zero,4d240 <__subdf3+0x744>
   4cec8:	6365c83a 	sub	r18,r12,r13
   4cecc:	6485803a 	cmpltu	r2,r12,r18
   4ced0:	8947c83a 	sub	r3,r17,r5
   4ced4:	1887c83a 	sub	r3,r3,r2
   4ced8:	1880202c 	andhi	r2,r3,128
   4cedc:	10014426 	beq	r2,zero,4d3f0 <__subdf3+0x8f4>
   4cee0:	6b25c83a 	sub	r18,r13,r12
   4cee4:	2c4bc83a 	sub	r5,r5,r17
   4cee8:	6c9b803a 	cmpltu	r13,r13,r18
   4ceec:	2b63c83a 	sub	r17,r5,r13
   4cef0:	5029883a 	mov	r20,r10
   4cef4:	5027883a 	mov	r19,r10
   4cef8:	003f5306 	br	4cc48 <__subdf3+0x14c>
   4cefc:	40005126 	beq	r8,zero,4d044 <__subdf3+0x548>
   4cf00:	80007b1e 	bne	r16,zero,4d0f0 <__subdf3+0x5f4>
   4cf04:	0401ffc4 	movi	r16,2047
   4cf08:	8b04b03a 	or	r2,r17,r12
   4cf0c:	10010f26 	beq	r2,zero,4d34c <__subdf3+0x850>
   4cf10:	80bfffc4 	addi	r2,r16,-1
   4cf14:	10012a26 	beq	r2,zero,4d3c0 <__subdf3+0x8c4>
   4cf18:	8401ffe0 	cmpeqi	r16,r16,2047
   4cf1c:	80013d1e 	bne	r16,zero,4d414 <__subdf3+0x918>
   4cf20:	11000e48 	cmpgei	r4,r2,57
   4cf24:	2000cd1e 	bne	r4,zero,4d25c <__subdf3+0x760>
   4cf28:	11000808 	cmpgei	r4,r2,32
   4cf2c:	2001191e 	bne	r4,zero,4d394 <__subdf3+0x898>
   4cf30:	01000804 	movi	r4,32
   4cf34:	2089c83a 	sub	r4,r4,r2
   4cf38:	8924983a 	sll	r18,r17,r4
   4cf3c:	608cd83a 	srl	r6,r12,r2
   4cf40:	6108983a 	sll	r4,r12,r4
   4cf44:	8884d83a 	srl	r2,r17,r2
   4cf48:	91a4b03a 	or	r18,r18,r6
   4cf4c:	2008c03a 	cmpne	r4,r4,zero
   4cf50:	9124b03a 	or	r18,r18,r4
   4cf54:	288b883a 	add	r5,r5,r2
   4cf58:	9365883a 	add	r18,r18,r13
   4cf5c:	935b803a 	cmpltu	r13,r18,r13
   4cf60:	6963883a 	add	r17,r13,r5
   4cf64:	1821883a 	mov	r16,r3
   4cf68:	003fb206 	br	4ce34 <__subdf3+0x338>
   4cf6c:	9009883a 	mov	r4,r18
   4cf70:	0040dc80 	call	40dc8 <__clzsi2>
   4cf74:	10c00604 	addi	r3,r2,24
   4cf78:	19000808 	cmpgei	r4,r3,32
   4cf7c:	203f2026 	beq	r4,zero,4cc00 <__subdf3+0x104>
   4cf80:	10bffe04 	addi	r2,r2,-8
   4cf84:	9084983a 	sll	r2,r18,r2
   4cf88:	1c006016 	blt	r3,r16,4d10c <__subdf3+0x610>
   4cf8c:	1c25c83a 	sub	r18,r3,r16
   4cf90:	90c00044 	addi	r3,r18,1
   4cf94:	19000808 	cmpgei	r4,r3,32
   4cf98:	20012526 	beq	r4,zero,4d430 <__subdf3+0x934>
   4cf9c:	94bff844 	addi	r18,r18,-31
   4cfa0:	19000820 	cmpeqi	r4,r3,32
   4cfa4:	14a4d83a 	srl	r18,r2,r18
   4cfa8:	2000051e 	bne	r4,zero,4cfc0 <__subdf3+0x4c4>
   4cfac:	01001004 	movi	r4,64
   4cfb0:	20c7c83a 	sub	r3,r4,r3
   4cfb4:	10c4983a 	sll	r2,r2,r3
   4cfb8:	1004c03a 	cmpne	r2,r2,zero
   4cfbc:	90a4b03a 	or	r18,r18,r2
   4cfc0:	908001cc 	andi	r2,r18,7
   4cfc4:	0021883a 	mov	r16,zero
   4cfc8:	103f211e 	bne	r2,zero,4cc50 <__subdf3+0x154>
   4cfcc:	00002f06 	br	4d08c <__subdf3+0x590>
   4cfd0:	9004d0fa 	srli	r2,r18,3
   4cfd4:	8808977a 	slli	r4,r17,29
   4cfd8:	80c1ffe0 	cmpeqi	r3,r16,2047
   4cfdc:	880ad0fa 	srli	r5,r17,3
   4cfe0:	2084b03a 	or	r2,r4,r2
   4cfe4:	183f831e 	bne	r3,zero,4cdf4 <__subdf3+0x2f8>
   4cfe8:	01000434 	movhi	r4,16
   4cfec:	213fffc4 	addi	r4,r4,-1
   4cff0:	2908703a 	and	r4,r5,r4
   4cff4:	80c1ffcc 	andi	r3,r16,2047
   4cff8:	003f2b06 	br	4cca8 <__subdf3+0x1ac>
   4cffc:	1000a71e 	bne	r2,zero,4d29c <__subdf3+0x7a0>
   4d000:	8806977a 	slli	r3,r17,29
   4d004:	00880034 	movhi	r2,8192
   4d008:	10bfffc4 	addi	r2,r2,-1
   4d00c:	2084703a 	and	r2,r4,r2
   4d010:	880ad0fa 	srli	r5,r17,3
   4d014:	10c4b03a 	or	r2,r2,r3
   4d018:	003f7606 	br	4cdf4 <__subdf3+0x2f8>
   4d01c:	6819883a 	mov	r12,r13
   4d020:	2823883a 	mov	r17,r5
   4d024:	4829883a 	mov	r20,r9
   4d028:	6004d0fa 	srli	r2,r12,3
   4d02c:	003fe906 	br	4cfd4 <__subdf3+0x4d8>
   4d030:	047fe034 	movhi	r17,65408
   4d034:	8c7fffc4 	addi	r17,r17,-1
   4d038:	80e1c83a 	sub	r16,r16,r3
   4d03c:	1462703a 	and	r17,r2,r17
   4d040:	003f0106 	br	4cc48 <__subdf3+0x14c>
   4d044:	80c00044 	addi	r3,r16,1
   4d048:	1881ff8c 	andi	r2,r3,2046
   4d04c:	1000361e 	bne	r2,zero,4d128 <__subdf3+0x62c>
   4d050:	8b04b03a 	or	r2,r17,r12
   4d054:	80008e1e 	bne	r16,zero,4d290 <__subdf3+0x794>
   4d058:	1000bf26 	beq	r2,zero,4d358 <__subdf3+0x85c>
   4d05c:	2b44b03a 	or	r2,r5,r13
   4d060:	10007726 	beq	r2,zero,4d240 <__subdf3+0x744>
   4d064:	6365883a 	add	r18,r12,r13
   4d068:	9305803a 	cmpltu	r2,r18,r12
   4d06c:	894b883a 	add	r5,r17,r5
   4d070:	28a3883a 	add	r17,r5,r2
   4d074:	8880202c 	andhi	r2,r17,128
   4d078:	10000426 	beq	r2,zero,4d08c <__subdf3+0x590>
   4d07c:	00bfe034 	movhi	r2,65408
   4d080:	10bfffc4 	addi	r2,r2,-1
   4d084:	88a2703a 	and	r17,r17,r2
   4d088:	04000044 	movi	r16,1
   4d08c:	9019883a 	mov	r12,r18
   4d090:	003fe506 	br	4d028 <__subdf3+0x52c>
   4d094:	6365c83a 	sub	r18,r12,r13
   4d098:	6485803a 	cmpltu	r2,r12,r18
   4d09c:	8947c83a 	sub	r3,r17,r5
   4d0a0:	1887c83a 	sub	r3,r3,r2
   4d0a4:	1880202c 	andhi	r2,r3,128
   4d0a8:	10002d1e 	bne	r2,zero,4d160 <__subdf3+0x664>
   4d0ac:	90c4b03a 	or	r2,r18,r3
   4d0b0:	10005426 	beq	r2,zero,4d204 <__subdf3+0x708>
   4d0b4:	1823883a 	mov	r17,r3
   4d0b8:	003ecd06 	br	4cbf0 <__subdf3+0xf4>
   4d0bc:	40bff804 	addi	r2,r8,-32
   4d0c0:	40c00820 	cmpeqi	r3,r8,32
   4d0c4:	2884d83a 	srl	r2,r5,r2
   4d0c8:	1800041e 	bne	r3,zero,4d0dc <__subdf3+0x5e0>
   4d0cc:	00c01004 	movi	r3,64
   4d0d0:	1a07c83a 	sub	r3,r3,r8
   4d0d4:	28c6983a 	sll	r3,r5,r3
   4d0d8:	68dab03a 	or	r13,r13,r3
   4d0dc:	6824c03a 	cmpne	r18,r13,zero
   4d0e0:	90a4b03a 	or	r18,r18,r2
   4d0e4:	003eba06 	br	4cbd0 <__subdf3+0xd4>
   4d0e8:	29402034 	orhi	r5,r5,128
   4d0ec:	003f0406 	br	4cd00 <__subdf3+0x204>
   4d0f0:	2804977a 	slli	r2,r5,29
   4d0f4:	00c80034 	movhi	r3,8192
   4d0f8:	18ffffc4 	addi	r3,r3,-1
   4d0fc:	30c6703a 	and	r3,r6,r3
   4d100:	280ad0fa 	srli	r5,r5,3
   4d104:	10c4b03a 	or	r2,r2,r3
   4d108:	003f3a06 	br	4cdf4 <__subdf3+0x2f8>
   4d10c:	017fe034 	movhi	r5,65408
   4d110:	297fffc4 	addi	r5,r5,-1
   4d114:	114a703a 	and	r5,r2,r5
   4d118:	2804977a 	slli	r2,r5,29
   4d11c:	80e1c83a 	sub	r16,r16,r3
   4d120:	280ad0fa 	srli	r5,r5,3
   4d124:	003fb006 	br	4cfe8 <__subdf3+0x4ec>
   4d128:	1881ffe0 	cmpeqi	r2,r3,2047
   4d12c:	103f501e 	bne	r2,zero,4ce70 <__subdf3+0x374>
   4d130:	6349883a 	add	r4,r12,r13
   4d134:	894b883a 	add	r5,r17,r5
   4d138:	2305803a 	cmpltu	r2,r4,r12
   4d13c:	2885883a 	add	r2,r5,r2
   4d140:	2008d07a 	srli	r4,r4,1
   4d144:	102497fa 	slli	r18,r2,31
   4d148:	1022d07a 	srli	r17,r2,1
   4d14c:	208001cc 	andi	r2,r4,7
   4d150:	9124b03a 	or	r18,r18,r4
   4d154:	1821883a 	mov	r16,r3
   4d158:	103ebd1e 	bne	r2,zero,4cc50 <__subdf3+0x154>
   4d15c:	003fcb06 	br	4d08c <__subdf3+0x590>
   4d160:	6b25c83a 	sub	r18,r13,r12
   4d164:	2c4bc83a 	sub	r5,r5,r17
   4d168:	6c9b803a 	cmpltu	r13,r13,r18
   4d16c:	2b63c83a 	sub	r17,r5,r13
   4d170:	5029883a 	mov	r20,r10
   4d174:	5027883a 	mov	r19,r10
   4d178:	003e9d06 	br	4cbf0 <__subdf3+0xf4>
   4d17c:	183f9f1e 	bne	r3,zero,4cffc <__subdf3+0x500>
   4d180:	10009f26 	beq	r2,zero,4d400 <__subdf3+0x904>
   4d184:	2804977a 	slli	r2,r5,29
   4d188:	00c80034 	movhi	r3,8192
   4d18c:	18ffffc4 	addi	r3,r3,-1
   4d190:	30c6703a 	and	r3,r6,r3
   4d194:	280ad0fa 	srli	r5,r5,3
   4d198:	5029883a 	mov	r20,r10
   4d19c:	10c4b03a 	or	r2,r2,r3
   4d1a0:	003f1406 	br	4cdf4 <__subdf3+0x2f8>
   4d1a4:	6365c83a 	sub	r18,r12,r13
   4d1a8:	894bc83a 	sub	r5,r17,r5
   4d1ac:	6485803a 	cmpltu	r2,r12,r18
   4d1b0:	28a3c83a 	sub	r17,r5,r2
   4d1b4:	04000044 	movi	r16,1
   4d1b8:	003e8806 	br	4cbdc <__subdf3+0xe0>
   4d1bc:	11000e48 	cmpgei	r4,r2,57
   4d1c0:	2000a81e 	bne	r4,zero,4d464 <__subdf3+0x968>
   4d1c4:	8c402034 	orhi	r17,r17,128
   4d1c8:	5027883a 	mov	r19,r10
   4d1cc:	3829883a 	mov	r20,r7
   4d1d0:	11000808 	cmpgei	r4,r2,32
   4d1d4:	2000231e 	bne	r4,zero,4d264 <__subdf3+0x768>
   4d1d8:	01000804 	movi	r4,32
   4d1dc:	2089c83a 	sub	r4,r4,r2
   4d1e0:	8924983a 	sll	r18,r17,r4
   4d1e4:	608cd83a 	srl	r6,r12,r2
   4d1e8:	6108983a 	sll	r4,r12,r4
   4d1ec:	8884d83a 	srl	r2,r17,r2
   4d1f0:	91a4b03a 	or	r18,r18,r6
   4d1f4:	2008c03a 	cmpne	r4,r4,zero
   4d1f8:	9124b03a 	or	r18,r18,r4
   4d1fc:	288bc83a 	sub	r5,r5,r2
   4d200:	003ee106 	br	4cd88 <__subdf3+0x28c>
   4d204:	0029883a 	mov	r20,zero
   4d208:	0007883a 	mov	r3,zero
   4d20c:	0009883a 	mov	r4,zero
   4d210:	003ea506 	br	4cca8 <__subdf3+0x1ac>
   4d214:	40bff804 	addi	r2,r8,-32
   4d218:	40c00820 	cmpeqi	r3,r8,32
   4d21c:	2884d83a 	srl	r2,r5,r2
   4d220:	1800041e 	bne	r3,zero,4d234 <__subdf3+0x738>
   4d224:	00c01004 	movi	r3,64
   4d228:	1a07c83a 	sub	r3,r3,r8
   4d22c:	28c6983a 	sll	r3,r5,r3
   4d230:	68dab03a 	or	r13,r13,r3
   4d234:	6824c03a 	cmpne	r18,r13,zero
   4d238:	90a4b03a 	or	r18,r18,r2
   4d23c:	003efa06 	br	4ce28 <__subdf3+0x32c>
   4d240:	8806977a 	slli	r3,r17,29
   4d244:	00880034 	movhi	r2,8192
   4d248:	10bfffc4 	addi	r2,r2,-1
   4d24c:	2084703a 	and	r2,r4,r2
   4d250:	880ad0fa 	srli	r5,r17,3
   4d254:	10c4b03a 	or	r2,r2,r3
   4d258:	003f6306 	br	4cfe8 <__subdf3+0x4ec>
   4d25c:	04800044 	movi	r18,1
   4d260:	003f3d06 	br	4cf58 <__subdf3+0x45c>
   4d264:	113ff804 	addi	r4,r2,-32
   4d268:	11800820 	cmpeqi	r6,r2,32
   4d26c:	8908d83a 	srl	r4,r17,r4
   4d270:	3000041e 	bne	r6,zero,4d284 <__subdf3+0x788>
   4d274:	01801004 	movi	r6,64
   4d278:	3085c83a 	sub	r2,r6,r2
   4d27c:	8884983a 	sll	r2,r17,r2
   4d280:	6098b03a 	or	r12,r12,r2
   4d284:	6024c03a 	cmpne	r18,r12,zero
   4d288:	9124b03a 	or	r18,r18,r4
   4d28c:	003ebe06 	br	4cd88 <__subdf3+0x28c>
   4d290:	10005026 	beq	r2,zero,4d3d4 <__subdf3+0x8d8>
   4d294:	2b5ab03a 	or	r13,r5,r13
   4d298:	683f5926 	beq	r13,zero,4d000 <__subdf3+0x504>
   4d29c:	880ed0fa 	srli	r7,r17,3
   4d2a0:	00c80034 	movhi	r3,8192
   4d2a4:	8822977a 	slli	r17,r17,29
   4d2a8:	18ffffc4 	addi	r3,r3,-1
   4d2ac:	20c4703a 	and	r2,r4,r3
   4d2b0:	3900022c 	andhi	r4,r7,8
   4d2b4:	1444b03a 	or	r2,r2,r17
   4d2b8:	20000826 	beq	r4,zero,4d2dc <__subdf3+0x7e0>
   4d2bc:	2808d0fa 	srli	r4,r5,3
   4d2c0:	2200022c 	andhi	r8,r4,8
   4d2c4:	4000051e 	bne	r8,zero,4d2dc <__subdf3+0x7e0>
   4d2c8:	2804977a 	slli	r2,r5,29
   4d2cc:	30c6703a 	and	r3,r6,r3
   4d2d0:	5029883a 	mov	r20,r10
   4d2d4:	1884b03a 	or	r2,r3,r2
   4d2d8:	200f883a 	mov	r7,r4
   4d2dc:	380b883a 	mov	r5,r7
   4d2e0:	003ec406 	br	4cdf4 <__subdf3+0x2f8>
   4d2e4:	6b25c83a 	sub	r18,r13,r12
   4d2e8:	2c4bc83a 	sub	r5,r5,r17
   4d2ec:	6c9b803a 	cmpltu	r13,r13,r18
   4d2f0:	2b63c83a 	sub	r17,r5,r13
   4d2f4:	4829883a 	mov	r20,r9
   4d2f8:	5027883a 	mov	r19,r10
   4d2fc:	04000044 	movi	r16,1
   4d300:	003e3606 	br	4cbdc <__subdf3+0xe0>
   4d304:	103fbf26 	beq	r2,zero,4d204 <__subdf3+0x708>
   4d308:	2806977a 	slli	r3,r5,29
   4d30c:	00880034 	movhi	r2,8192
   4d310:	10bfffc4 	addi	r2,r2,-1
   4d314:	3084703a 	and	r2,r6,r2
   4d318:	280ad0fa 	srli	r5,r5,3
   4d31c:	5029883a 	mov	r20,r10
   4d320:	10c4b03a 	or	r2,r2,r3
   4d324:	003f3006 	br	4cfe8 <__subdf3+0x4ec>
   4d328:	04000084 	movi	r16,2
   4d32c:	003ec606 	br	4ce48 <__subdf3+0x34c>
   4d330:	8804977a 	slli	r2,r17,29
   4d334:	00c80034 	movhi	r3,8192
   4d338:	18ffffc4 	addi	r3,r3,-1
   4d33c:	20c8703a 	and	r4,r4,r3
   4d340:	880ad0fa 	srli	r5,r17,3
   4d344:	1104b03a 	or	r2,r2,r4
   4d348:	003eaa06 	br	4cdf4 <__subdf3+0x2f8>
   4d34c:	6819883a 	mov	r12,r13
   4d350:	2823883a 	mov	r17,r5
   4d354:	003f3406 	br	4d028 <__subdf3+0x52c>
   4d358:	2806977a 	slli	r3,r5,29
   4d35c:	00880034 	movhi	r2,8192
   4d360:	10bfffc4 	addi	r2,r2,-1
   4d364:	3084703a 	and	r2,r6,r2
   4d368:	280ad0fa 	srli	r5,r5,3
   4d36c:	10c4b03a 	or	r2,r2,r3
   4d370:	003f1d06 	br	4cfe8 <__subdf3+0x4ec>
   4d374:	2806977a 	slli	r3,r5,29
   4d378:	00880034 	movhi	r2,8192
   4d37c:	10bfffc4 	addi	r2,r2,-1
   4d380:	3084703a 	and	r2,r6,r2
   4d384:	280ad0fa 	srli	r5,r5,3
   4d388:	10c4b03a 	or	r2,r2,r3
   4d38c:	4829883a 	mov	r20,r9
   4d390:	003e9806 	br	4cdf4 <__subdf3+0x2f8>
   4d394:	113ff804 	addi	r4,r2,-32
   4d398:	11800820 	cmpeqi	r6,r2,32
   4d39c:	8908d83a 	srl	r4,r17,r4
   4d3a0:	3000041e 	bne	r6,zero,4d3b4 <__subdf3+0x8b8>
   4d3a4:	01801004 	movi	r6,64
   4d3a8:	3085c83a 	sub	r2,r6,r2
   4d3ac:	8884983a 	sll	r2,r17,r2
   4d3b0:	6098b03a 	or	r12,r12,r2
   4d3b4:	6024c03a 	cmpne	r18,r12,zero
   4d3b8:	9124b03a 	or	r18,r18,r4
   4d3bc:	003ee606 	br	4cf58 <__subdf3+0x45c>
   4d3c0:	6365883a 	add	r18,r12,r13
   4d3c4:	894b883a 	add	r5,r17,r5
   4d3c8:	935b803a 	cmpltu	r13,r18,r13
   4d3cc:	2b63883a 	add	r17,r5,r13
   4d3d0:	003eaf06 	br	4ce90 <__subdf3+0x394>
   4d3d4:	2804977a 	slli	r2,r5,29
   4d3d8:	00c80034 	movhi	r3,8192
   4d3dc:	18ffffc4 	addi	r3,r3,-1
   4d3e0:	30cc703a 	and	r6,r6,r3
   4d3e4:	280ad0fa 	srli	r5,r5,3
   4d3e8:	3084b03a 	or	r2,r6,r2
   4d3ec:	003e8106 	br	4cdf4 <__subdf3+0x2f8>
   4d3f0:	90c4b03a 	or	r2,r18,r3
   4d3f4:	103f8326 	beq	r2,zero,4d204 <__subdf3+0x708>
   4d3f8:	1823883a 	mov	r17,r3
   4d3fc:	003f2306 	br	4d08c <__subdf3+0x590>
   4d400:	01400434 	movhi	r5,16
   4d404:	297fffc4 	addi	r5,r5,-1
   4d408:	00bfffc4 	movi	r2,-1
   4d40c:	0029883a 	mov	r20,zero
   4d410:	003e7a06 	br	4cdfc <__subdf3+0x300>
   4d414:	2806977a 	slli	r3,r5,29
   4d418:	00880034 	movhi	r2,8192
   4d41c:	10bfffc4 	addi	r2,r2,-1
   4d420:	3084703a 	and	r2,r6,r2
   4d424:	280ad0fa 	srli	r5,r5,3
   4d428:	10c4b03a 	or	r2,r2,r3
   4d42c:	003e7106 	br	4cdf4 <__subdf3+0x2f8>
   4d430:	01000804 	movi	r4,32
   4d434:	20c9c83a 	sub	r4,r4,r3
   4d438:	000b883a 	mov	r5,zero
   4d43c:	003dfd06 	br	4cc34 <__subdf3+0x138>
   4d440:	0005883a 	mov	r2,zero
   4d444:	00c1ffc4 	movi	r3,2047
   4d448:	0009883a 	mov	r4,zero
   4d44c:	003e1606 	br	4cca8 <__subdf3+0x1ac>
   4d450:	403e9526 	beq	r8,zero,4cea8 <__subdf3+0x3ac>
   4d454:	1c05c83a 	sub	r2,r3,r16
   4d458:	803f581e 	bne	r16,zero,4d1bc <__subdf3+0x6c0>
   4d45c:	1021883a 	mov	r16,r2
   4d460:	003e3e06 	br	4cd5c <__subdf3+0x260>
   4d464:	5027883a 	mov	r19,r10
   4d468:	3829883a 	mov	r20,r7
   4d46c:	04800044 	movi	r18,1
   4d470:	003e4506 	br	4cd88 <__subdf3+0x28c>
   4d474:	403ef326 	beq	r8,zero,4d044 <__subdf3+0x548>
   4d478:	1c05c83a 	sub	r2,r3,r16
   4d47c:	8000021e 	bne	r16,zero,4d488 <__subdf3+0x98c>
   4d480:	1021883a 	mov	r16,r2
   4d484:	003ea006 	br	4cf08 <__subdf3+0x40c>
   4d488:	11000e48 	cmpgei	r4,r2,57
   4d48c:	203f731e 	bne	r4,zero,4d25c <__subdf3+0x760>
   4d490:	8c402034 	orhi	r17,r17,128
   4d494:	003ea406 	br	4cf28 <__subdf3+0x42c>

0004d498 <__unorddf2>:
   4d498:	2804d53a 	srli	r2,r5,20
   4d49c:	3806d53a 	srli	r3,r7,20
   4d4a0:	02000434 	movhi	r8,16
   4d4a4:	1081ffcc 	andi	r2,r2,2047
   4d4a8:	423fffc4 	addi	r8,r8,-1
   4d4ac:	1081ffd8 	cmpnei	r2,r2,2047
   4d4b0:	2a0a703a 	and	r5,r5,r8
   4d4b4:	3a0e703a 	and	r7,r7,r8
   4d4b8:	18c1ffcc 	andi	r3,r3,2047
   4d4bc:	10000426 	beq	r2,zero,4d4d0 <__unorddf2+0x38>
   4d4c0:	18c1ffd8 	cmpnei	r3,r3,2047
   4d4c4:	18000626 	beq	r3,zero,4d4e0 <__unorddf2+0x48>
   4d4c8:	0005883a 	mov	r2,zero
   4d4cc:	f800283a 	ret
   4d4d0:	290ab03a 	or	r5,r5,r4
   4d4d4:	283ffa26 	beq	r5,zero,4d4c0 <__unorddf2+0x28>
   4d4d8:	00800044 	movi	r2,1
   4d4dc:	f800283a 	ret
   4d4e0:	398eb03a 	or	r7,r7,r6
   4d4e4:	3804c03a 	cmpne	r2,r7,zero
   4d4e8:	f800283a 	ret

0004d4ec <__fixdfsi>:
   4d4ec:	2804d53a 	srli	r2,r5,20
   4d4f0:	00c00434 	movhi	r3,16
   4d4f4:	18ffffc4 	addi	r3,r3,-1
   4d4f8:	1081ffcc 	andi	r2,r2,2047
   4d4fc:	1180ffd0 	cmplti	r6,r2,1023
   4d500:	280ed7fa 	srli	r7,r5,31
   4d504:	28ca703a 	and	r5,r5,r3
   4d508:	3000061e 	bne	r6,zero,4d524 <__fixdfsi+0x38>
   4d50c:	10c10790 	cmplti	r3,r2,1054
   4d510:	1800061e 	bne	r3,zero,4d52c <__fixdfsi+0x40>
   4d514:	00a00034 	movhi	r2,32768
   4d518:	10bfffc4 	addi	r2,r2,-1
   4d51c:	3885883a 	add	r2,r7,r2
   4d520:	f800283a 	ret
   4d524:	0005883a 	mov	r2,zero
   4d528:	f800283a 	ret
   4d52c:	00c10cc4 	movi	r3,1075
   4d530:	1887c83a 	sub	r3,r3,r2
   4d534:	19800808 	cmpgei	r6,r3,32
   4d538:	29400434 	orhi	r5,r5,16
   4d53c:	3000071e 	bne	r6,zero,4d55c <__fixdfsi+0x70>
   4d540:	10befb44 	addi	r2,r2,-1043
   4d544:	2884983a 	sll	r2,r5,r2
   4d548:	20c8d83a 	srl	r4,r4,r3
   4d54c:	1104b03a 	or	r2,r2,r4
   4d550:	383ff526 	beq	r7,zero,4d528 <__fixdfsi+0x3c>
   4d554:	0085c83a 	sub	r2,zero,r2
   4d558:	f800283a 	ret
   4d55c:	00c104c4 	movi	r3,1043
   4d560:	1885c83a 	sub	r2,r3,r2
   4d564:	2884d83a 	srl	r2,r5,r2
   4d568:	003ff906 	br	4d550 <__fixdfsi+0x64>

0004d56c <__floatsidf>:
   4d56c:	defffd04 	addi	sp,sp,-12
   4d570:	dfc00215 	stw	ra,8(sp)
   4d574:	dc400115 	stw	r17,4(sp)
   4d578:	dc000015 	stw	r16,0(sp)
   4d57c:	20001326 	beq	r4,zero,4d5cc <__floatsidf+0x60>
   4d580:	2022d7fa 	srli	r17,r4,31
   4d584:	2021883a 	mov	r16,r4
   4d588:	20002416 	blt	r4,zero,4d61c <__floatsidf+0xb0>
   4d58c:	8009883a 	mov	r4,r16
   4d590:	0040dc80 	call	40dc8 <__clzsi2>
   4d594:	01010784 	movi	r4,1054
   4d598:	2089c83a 	sub	r4,r4,r2
   4d59c:	10c002c8 	cmpgei	r3,r2,11
   4d5a0:	2101ffcc 	andi	r4,r4,2047
   4d5a4:	1800161e 	bne	r3,zero,4d600 <__floatsidf+0x94>
   4d5a8:	014002c4 	movi	r5,11
   4d5ac:	288bc83a 	sub	r5,r5,r2
   4d5b0:	814ad83a 	srl	r5,r16,r5
   4d5b4:	00c00434 	movhi	r3,16
   4d5b8:	10800544 	addi	r2,r2,21
   4d5bc:	18ffffc4 	addi	r3,r3,-1
   4d5c0:	8084983a 	sll	r2,r16,r2
   4d5c4:	28ca703a 	and	r5,r5,r3
   4d5c8:	00000406 	br	4d5dc <__floatsidf+0x70>
   4d5cc:	0023883a 	mov	r17,zero
   4d5d0:	0009883a 	mov	r4,zero
   4d5d4:	000b883a 	mov	r5,zero
   4d5d8:	0005883a 	mov	r2,zero
   4d5dc:	2008953a 	slli	r4,r4,20
   4d5e0:	880697fa 	slli	r3,r17,31
   4d5e4:	2148b03a 	or	r4,r4,r5
   4d5e8:	20c6b03a 	or	r3,r4,r3
   4d5ec:	dfc00217 	ldw	ra,8(sp)
   4d5f0:	dc400117 	ldw	r17,4(sp)
   4d5f4:	dc000017 	ldw	r16,0(sp)
   4d5f8:	dec00304 	addi	sp,sp,12
   4d5fc:	f800283a 	ret
   4d600:	10bffd44 	addi	r2,r2,-11
   4d604:	808a983a 	sll	r5,r16,r2
   4d608:	00800434 	movhi	r2,16
   4d60c:	10bfffc4 	addi	r2,r2,-1
   4d610:	288a703a 	and	r5,r5,r2
   4d614:	0005883a 	mov	r2,zero
   4d618:	003ff006 	br	4d5dc <__floatsidf+0x70>
   4d61c:	0121c83a 	sub	r16,zero,r4
   4d620:	003fda06 	br	4d58c <__floatsidf+0x20>

0004d624 <__floatunsidf>:
   4d624:	defffe04 	addi	sp,sp,-8
   4d628:	dc000015 	stw	r16,0(sp)
   4d62c:	dfc00115 	stw	ra,4(sp)
   4d630:	2021883a 	mov	r16,r4
   4d634:	20000f26 	beq	r4,zero,4d674 <__floatunsidf+0x50>
   4d638:	0040dc80 	call	40dc8 <__clzsi2>
   4d63c:	00c10784 	movi	r3,1054
   4d640:	1887c83a 	sub	r3,r3,r2
   4d644:	110002c8 	cmpgei	r4,r2,11
   4d648:	18c1ffcc 	andi	r3,r3,2047
   4d64c:	2000121e 	bne	r4,zero,4d698 <__floatunsidf+0x74>
   4d650:	010002c4 	movi	r4,11
   4d654:	2089c83a 	sub	r4,r4,r2
   4d658:	8108d83a 	srl	r4,r16,r4
   4d65c:	01400434 	movhi	r5,16
   4d660:	10800544 	addi	r2,r2,21
   4d664:	297fffc4 	addi	r5,r5,-1
   4d668:	80a0983a 	sll	r16,r16,r2
   4d66c:	214a703a 	and	r5,r4,r5
   4d670:	00000206 	br	4d67c <__floatunsidf+0x58>
   4d674:	0007883a 	mov	r3,zero
   4d678:	000b883a 	mov	r5,zero
   4d67c:	1806953a 	slli	r3,r3,20
   4d680:	8005883a 	mov	r2,r16
   4d684:	1946b03a 	or	r3,r3,r5
   4d688:	dfc00117 	ldw	ra,4(sp)
   4d68c:	dc000017 	ldw	r16,0(sp)
   4d690:	dec00204 	addi	sp,sp,8
   4d694:	f800283a 	ret
   4d698:	117ffd44 	addi	r5,r2,-11
   4d69c:	814a983a 	sll	r5,r16,r5
   4d6a0:	00800434 	movhi	r2,16
   4d6a4:	10bfffc4 	addi	r2,r2,-1
   4d6a8:	288a703a 	and	r5,r5,r2
   4d6ac:	0021883a 	mov	r16,zero
   4d6b0:	003ff206 	br	4d67c <__floatunsidf+0x58>

0004d6b4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d6b4:	defffe04 	addi	sp,sp,-8
   4d6b8:	dfc00115 	stw	ra,4(sp)
   4d6bc:	df000015 	stw	fp,0(sp)
   4d6c0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d6c4:	00800174 	movhi	r2,5
   4d6c8:	10888517 	ldw	r2,8724(r2)
   4d6cc:	10000426 	beq	r2,zero,4d6e0 <alt_get_errno+0x2c>
   4d6d0:	00800174 	movhi	r2,5
   4d6d4:	10888517 	ldw	r2,8724(r2)
   4d6d8:	103ee83a 	callr	r2
   4d6dc:	00000206 	br	4d6e8 <alt_get_errno+0x34>
   4d6e0:	00800174 	movhi	r2,5
   4d6e4:	108f8304 	addi	r2,r2,15884
}
   4d6e8:	e037883a 	mov	sp,fp
   4d6ec:	dfc00117 	ldw	ra,4(sp)
   4d6f0:	df000017 	ldw	fp,0(sp)
   4d6f4:	dec00204 	addi	sp,sp,8
   4d6f8:	f800283a 	ret

0004d6fc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4d6fc:	defffb04 	addi	sp,sp,-20
   4d700:	dfc00415 	stw	ra,16(sp)
   4d704:	df000315 	stw	fp,12(sp)
   4d708:	df000304 	addi	fp,sp,12
   4d70c:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4d710:	e0bffd17 	ldw	r2,-12(fp)
   4d714:	10000616 	blt	r2,zero,4d730 <close+0x34>
   4d718:	e0bffd17 	ldw	r2,-12(fp)
   4d71c:	10c00324 	muli	r3,r2,12
   4d720:	00800174 	movhi	r2,5
   4d724:	10840404 	addi	r2,r2,4112
   4d728:	1885883a 	add	r2,r3,r2
   4d72c:	00000106 	br	4d734 <close+0x38>
   4d730:	0005883a 	mov	r2,zero
   4d734:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   4d738:	e0bfff17 	ldw	r2,-4(fp)
   4d73c:	10001926 	beq	r2,zero,4d7a4 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4d740:	e0bfff17 	ldw	r2,-4(fp)
   4d744:	10800017 	ldw	r2,0(r2)
   4d748:	10800417 	ldw	r2,16(r2)
   4d74c:	10000626 	beq	r2,zero,4d768 <close+0x6c>
   4d750:	e0bfff17 	ldw	r2,-4(fp)
   4d754:	10800017 	ldw	r2,0(r2)
   4d758:	10800417 	ldw	r2,16(r2)
   4d75c:	e13fff17 	ldw	r4,-4(fp)
   4d760:	103ee83a 	callr	r2
   4d764:	00000106 	br	4d76c <close+0x70>
   4d768:	0005883a 	mov	r2,zero
   4d76c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4d770:	e13ffd17 	ldw	r4,-12(fp)
   4d774:	004df800 	call	4df80 <alt_release_fd>
    if (rval < 0)
   4d778:	e0bffe17 	ldw	r2,-8(fp)
   4d77c:	1000070e 	bge	r2,zero,4d79c <close+0xa0>
    {
      ALT_ERRNO = -rval;
   4d780:	004d6b40 	call	4d6b4 <alt_get_errno>
   4d784:	1007883a 	mov	r3,r2
   4d788:	e0bffe17 	ldw	r2,-8(fp)
   4d78c:	0085c83a 	sub	r2,zero,r2
   4d790:	18800015 	stw	r2,0(r3)
      return -1;
   4d794:	00bfffc4 	movi	r2,-1
   4d798:	00000706 	br	4d7b8 <close+0xbc>
    }
    return 0;
   4d79c:	0005883a 	mov	r2,zero
   4d7a0:	00000506 	br	4d7b8 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d7a4:	004d6b40 	call	4d6b4 <alt_get_errno>
   4d7a8:	1007883a 	mov	r3,r2
   4d7ac:	00801444 	movi	r2,81
   4d7b0:	18800015 	stw	r2,0(r3)
    return -1;
   4d7b4:	00bfffc4 	movi	r2,-1
  }
}
   4d7b8:	e037883a 	mov	sp,fp
   4d7bc:	dfc00117 	ldw	ra,4(sp)
   4d7c0:	df000017 	ldw	fp,0(sp)
   4d7c4:	dec00204 	addi	sp,sp,8
   4d7c8:	f800283a 	ret

0004d7cc <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4d7cc:	defffc04 	addi	sp,sp,-16
   4d7d0:	df000315 	stw	fp,12(sp)
   4d7d4:	df000304 	addi	fp,sp,12
   4d7d8:	e13fff15 	stw	r4,-4(fp)
   4d7dc:	e17ffe15 	stw	r5,-8(fp)
   4d7e0:	e1bffd15 	stw	r6,-12(fp)
  return len;
   4d7e4:	e0bffd17 	ldw	r2,-12(fp)
}
   4d7e8:	e037883a 	mov	sp,fp
   4d7ec:	df000017 	ldw	fp,0(sp)
   4d7f0:	dec00104 	addi	sp,sp,4
   4d7f4:	f800283a 	ret

0004d7f8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   4d7f8:	defffd04 	addi	sp,sp,-12
   4d7fc:	df000215 	stw	fp,8(sp)
   4d800:	df000204 	addi	fp,sp,8
   4d804:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   4d808:	0001883a 	nop
   4d80c:	e0bffe17 	ldw	r2,-8(fp)
   4d810:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   4d814:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   4d818:	10000226 	beq	r2,zero,4d824 <_exit+0x2c>
    ALT_SIM_FAIL();
   4d81c:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   4d820:	00000106 	br	4d828 <_exit+0x30>
    ALT_SIM_PASS();
   4d824:	002af0b0 	cmpltui	zero,zero,43970
}
   4d828:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   4d82c:	0001883a 	nop
   4d830:	003ffe06 	br	4d82c <_exit+0x34>

0004d834 <alt_get_errno>:
{
   4d834:	defffe04 	addi	sp,sp,-8
   4d838:	dfc00115 	stw	ra,4(sp)
   4d83c:	df000015 	stw	fp,0(sp)
   4d840:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d844:	00800174 	movhi	r2,5
   4d848:	10888517 	ldw	r2,8724(r2)
   4d84c:	10000426 	beq	r2,zero,4d860 <alt_get_errno+0x2c>
   4d850:	00800174 	movhi	r2,5
   4d854:	10888517 	ldw	r2,8724(r2)
   4d858:	103ee83a 	callr	r2
   4d85c:	00000206 	br	4d868 <alt_get_errno+0x34>
   4d860:	00800174 	movhi	r2,5
   4d864:	108f8304 	addi	r2,r2,15884
}
   4d868:	e037883a 	mov	sp,fp
   4d86c:	dfc00117 	ldw	ra,4(sp)
   4d870:	df000017 	ldw	fp,0(sp)
   4d874:	dec00204 	addi	sp,sp,8
   4d878:	f800283a 	ret

0004d87c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4d87c:	defffb04 	addi	sp,sp,-20
   4d880:	dfc00415 	stw	ra,16(sp)
   4d884:	df000315 	stw	fp,12(sp)
   4d888:	df000304 	addi	fp,sp,12
   4d88c:	e13ffe15 	stw	r4,-8(fp)
   4d890:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d894:	e0bffe17 	ldw	r2,-8(fp)
   4d898:	10000616 	blt	r2,zero,4d8b4 <fstat+0x38>
   4d89c:	e0bffe17 	ldw	r2,-8(fp)
   4d8a0:	10c00324 	muli	r3,r2,12
   4d8a4:	00800174 	movhi	r2,5
   4d8a8:	10840404 	addi	r2,r2,4112
   4d8ac:	1885883a 	add	r2,r3,r2
   4d8b0:	00000106 	br	4d8b8 <fstat+0x3c>
   4d8b4:	0005883a 	mov	r2,zero
   4d8b8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4d8bc:	e0bfff17 	ldw	r2,-4(fp)
   4d8c0:	10001026 	beq	r2,zero,4d904 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4d8c4:	e0bfff17 	ldw	r2,-4(fp)
   4d8c8:	10800017 	ldw	r2,0(r2)
   4d8cc:	10800817 	ldw	r2,32(r2)
   4d8d0:	10000726 	beq	r2,zero,4d8f0 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   4d8d4:	e0bfff17 	ldw	r2,-4(fp)
   4d8d8:	10800017 	ldw	r2,0(r2)
   4d8dc:	10800817 	ldw	r2,32(r2)
   4d8e0:	e17ffd17 	ldw	r5,-12(fp)
   4d8e4:	e13fff17 	ldw	r4,-4(fp)
   4d8e8:	103ee83a 	callr	r2
   4d8ec:	00000a06 	br	4d918 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4d8f0:	e0bffd17 	ldw	r2,-12(fp)
   4d8f4:	00c80004 	movi	r3,8192
   4d8f8:	10c00115 	stw	r3,4(r2)
      return 0;
   4d8fc:	0005883a 	mov	r2,zero
   4d900:	00000506 	br	4d918 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d904:	004d8340 	call	4d834 <alt_get_errno>
   4d908:	1007883a 	mov	r3,r2
   4d90c:	00801444 	movi	r2,81
   4d910:	18800015 	stw	r2,0(r3)
    return -1;
   4d914:	00bfffc4 	movi	r2,-1
  }
}
   4d918:	e037883a 	mov	sp,fp
   4d91c:	dfc00117 	ldw	ra,4(sp)
   4d920:	df000017 	ldw	fp,0(sp)
   4d924:	dec00204 	addi	sp,sp,8
   4d928:	f800283a 	ret

0004d92c <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   4d92c:	deffff04 	addi	sp,sp,-4
   4d930:	df000015 	stw	fp,0(sp)
   4d934:	d839883a 	mov	fp,sp
  return 0;
   4d938:	0005883a 	mov	r2,zero
}
   4d93c:	e037883a 	mov	sp,fp
   4d940:	df000017 	ldw	fp,0(sp)
   4d944:	dec00104 	addi	sp,sp,4
   4d948:	f800283a 	ret

0004d94c <alt_get_errno>:
{
   4d94c:	defffe04 	addi	sp,sp,-8
   4d950:	dfc00115 	stw	ra,4(sp)
   4d954:	df000015 	stw	fp,0(sp)
   4d958:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d95c:	00800174 	movhi	r2,5
   4d960:	10888517 	ldw	r2,8724(r2)
   4d964:	10000426 	beq	r2,zero,4d978 <alt_get_errno+0x2c>
   4d968:	00800174 	movhi	r2,5
   4d96c:	10888517 	ldw	r2,8724(r2)
   4d970:	103ee83a 	callr	r2
   4d974:	00000206 	br	4d980 <alt_get_errno+0x34>
   4d978:	00800174 	movhi	r2,5
   4d97c:	108f8304 	addi	r2,r2,15884
}
   4d980:	e037883a 	mov	sp,fp
   4d984:	dfc00117 	ldw	ra,4(sp)
   4d988:	df000017 	ldw	fp,0(sp)
   4d98c:	dec00204 	addi	sp,sp,8
   4d990:	f800283a 	ret

0004d994 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4d994:	deffea04 	addi	sp,sp,-88
   4d998:	dfc01515 	stw	ra,84(sp)
   4d99c:	df001415 	stw	fp,80(sp)
   4d9a0:	df001404 	addi	fp,sp,80
   4d9a4:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d9a8:	e0bfec17 	ldw	r2,-80(fp)
   4d9ac:	10000616 	blt	r2,zero,4d9c8 <isatty+0x34>
   4d9b0:	e0bfec17 	ldw	r2,-80(fp)
   4d9b4:	10c00324 	muli	r3,r2,12
   4d9b8:	00800174 	movhi	r2,5
   4d9bc:	10840404 	addi	r2,r2,4112
   4d9c0:	1885883a 	add	r2,r3,r2
   4d9c4:	00000106 	br	4d9cc <isatty+0x38>
   4d9c8:	0005883a 	mov	r2,zero
   4d9cc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4d9d0:	e0bfff17 	ldw	r2,-4(fp)
   4d9d4:	10000e26 	beq	r2,zero,4da10 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4d9d8:	e0bfff17 	ldw	r2,-4(fp)
   4d9dc:	10800017 	ldw	r2,0(r2)
   4d9e0:	10800817 	ldw	r2,32(r2)
   4d9e4:	1000021e 	bne	r2,zero,4d9f0 <isatty+0x5c>
    {
      return 1;
   4d9e8:	00800044 	movi	r2,1
   4d9ec:	00000d06 	br	4da24 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4d9f0:	e0bfed04 	addi	r2,fp,-76
   4d9f4:	100b883a 	mov	r5,r2
   4d9f8:	e13fec17 	ldw	r4,-80(fp)
   4d9fc:	004d87c0 	call	4d87c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4da00:	e0bfee17 	ldw	r2,-72(fp)
   4da04:	10880020 	cmpeqi	r2,r2,8192
   4da08:	10803fcc 	andi	r2,r2,255
   4da0c:	00000506 	br	4da24 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4da10:	004d94c0 	call	4d94c <alt_get_errno>
   4da14:	1007883a 	mov	r3,r2
   4da18:	00801444 	movi	r2,81
   4da1c:	18800015 	stw	r2,0(r3)
    return 0;
   4da20:	0005883a 	mov	r2,zero
  }
}
   4da24:	e037883a 	mov	sp,fp
   4da28:	dfc00117 	ldw	ra,4(sp)
   4da2c:	df000017 	ldw	fp,0(sp)
   4da30:	dec00204 	addi	sp,sp,8
   4da34:	f800283a 	ret

0004da38 <alt_get_errno>:
{
   4da38:	defffe04 	addi	sp,sp,-8
   4da3c:	dfc00115 	stw	ra,4(sp)
   4da40:	df000015 	stw	fp,0(sp)
   4da44:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4da48:	00800174 	movhi	r2,5
   4da4c:	10888517 	ldw	r2,8724(r2)
   4da50:	10000426 	beq	r2,zero,4da64 <alt_get_errno+0x2c>
   4da54:	00800174 	movhi	r2,5
   4da58:	10888517 	ldw	r2,8724(r2)
   4da5c:	103ee83a 	callr	r2
   4da60:	00000206 	br	4da6c <alt_get_errno+0x34>
   4da64:	00800174 	movhi	r2,5
   4da68:	108f8304 	addi	r2,r2,15884
}
   4da6c:	e037883a 	mov	sp,fp
   4da70:	dfc00117 	ldw	ra,4(sp)
   4da74:	df000017 	ldw	fp,0(sp)
   4da78:	dec00204 	addi	sp,sp,8
   4da7c:	f800283a 	ret

0004da80 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   4da80:	defffb04 	addi	sp,sp,-20
   4da84:	dfc00415 	stw	ra,16(sp)
   4da88:	df000315 	stw	fp,12(sp)
   4da8c:	df000304 	addi	fp,sp,12
   4da90:	e13ffe15 	stw	r4,-8(fp)
   4da94:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   4da98:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   4da9c:	e0bffe17 	ldw	r2,-8(fp)
   4daa0:	00801d16 	blt	zero,r2,4db18 <kill+0x98>
  {
    switch (sig)
   4daa4:	e0bffd17 	ldw	r2,-12(fp)
   4daa8:	10002026 	beq	r2,zero,4db2c <kill+0xac>
   4daac:	e0bffd17 	ldw	r2,-12(fp)
   4dab0:	10001616 	blt	r2,zero,4db0c <kill+0x8c>
   4dab4:	e0bffd17 	ldw	r2,-12(fp)
   4dab8:	10800808 	cmpgei	r2,r2,32
   4dabc:	1000131e 	bne	r2,zero,4db0c <kill+0x8c>
   4dac0:	e0bffd17 	ldw	r2,-12(fp)
   4dac4:	108000d0 	cmplti	r2,r2,3
   4dac8:	1000101e 	bne	r2,zero,4db0c <kill+0x8c>
   4dacc:	e0bffd17 	ldw	r2,-12(fp)
   4dad0:	00c00044 	movi	r3,1
   4dad4:	1886983a 	sll	r3,r3,r2
   4dad8:	00b3e074 	movhi	r2,53121
   4dadc:	10bfde04 	addi	r2,r2,-136
   4dae0:	1884703a 	and	r2,r3,r2
   4dae4:	1004c03a 	cmpne	r2,r2,zero
   4dae8:	10803fcc 	andi	r2,r2,255
   4daec:	1000051e 	bne	r2,zero,4db04 <kill+0x84>
   4daf0:	1880046c 	andhi	r2,r3,17
   4daf4:	1004c03a 	cmpne	r2,r2,zero
   4daf8:	10803fcc 	andi	r2,r2,255
   4dafc:	10000d1e 	bne	r2,zero,4db34 <kill+0xb4>
   4db00:	00000206 	br	4db0c <kill+0x8c>
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   4db04:	0009883a 	mov	r4,zero
   4db08:	004d7f80 	call	4d7f8 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   4db0c:	00800584 	movi	r2,22
   4db10:	e0bfff15 	stw	r2,-4(fp)
   4db14:	00000806 	br	4db38 <kill+0xb8>
    }
  }

  else if (pid > 0)
   4db18:	e0bffe17 	ldw	r2,-8(fp)
   4db1c:	0080060e 	bge	zero,r2,4db38 <kill+0xb8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   4db20:	008000c4 	movi	r2,3
   4db24:	e0bfff15 	stw	r2,-4(fp)
   4db28:	00000306 	br	4db38 <kill+0xb8>
      break;
   4db2c:	0001883a 	nop
   4db30:	00000106 	br	4db38 <kill+0xb8>
      break;
   4db34:	0001883a 	nop
  }

  if (status)
   4db38:	e0bfff17 	ldw	r2,-4(fp)
   4db3c:	10000626 	beq	r2,zero,4db58 <kill+0xd8>
  {
    ALT_ERRNO = status;
   4db40:	004da380 	call	4da38 <alt_get_errno>
   4db44:	1007883a 	mov	r3,r2
   4db48:	e0bfff17 	ldw	r2,-4(fp)
   4db4c:	18800015 	stw	r2,0(r3)
    return -1;
   4db50:	00bfffc4 	movi	r2,-1
   4db54:	00000106 	br	4db5c <kill+0xdc>
  }

  return 0;
   4db58:	0005883a 	mov	r2,zero
}
   4db5c:	e037883a 	mov	sp,fp
   4db60:	dfc00117 	ldw	ra,4(sp)
   4db64:	df000017 	ldw	fp,0(sp)
   4db68:	dec00204 	addi	sp,sp,8
   4db6c:	f800283a 	ret

0004db70 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4db70:	defffc04 	addi	sp,sp,-16
   4db74:	df000315 	stw	fp,12(sp)
   4db78:	df000304 	addi	fp,sp,12
   4db7c:	e13fff15 	stw	r4,-4(fp)
   4db80:	e17ffe15 	stw	r5,-8(fp)
   4db84:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   4db88:	e0fffe17 	ldw	r3,-8(fp)
   4db8c:	e0bfff17 	ldw	r2,-4(fp)
   4db90:	18800c26 	beq	r3,r2,4dbc4 <alt_load_section+0x54>
  {
    while( to != end )
   4db94:	00000806 	br	4dbb8 <alt_load_section+0x48>
    {
      *to++ = *from++;
   4db98:	e0ffff17 	ldw	r3,-4(fp)
   4db9c:	18800104 	addi	r2,r3,4
   4dba0:	e0bfff15 	stw	r2,-4(fp)
   4dba4:	e0bffe17 	ldw	r2,-8(fp)
   4dba8:	11000104 	addi	r4,r2,4
   4dbac:	e13ffe15 	stw	r4,-8(fp)
   4dbb0:	18c00017 	ldw	r3,0(r3)
   4dbb4:	10c00015 	stw	r3,0(r2)
    while( to != end )
   4dbb8:	e0fffe17 	ldw	r3,-8(fp)
   4dbbc:	e0bffd17 	ldw	r2,-12(fp)
   4dbc0:	18bff51e 	bne	r3,r2,4db98 <alt_load_section+0x28>
    }
  }
}
   4dbc4:	0001883a 	nop
   4dbc8:	e037883a 	mov	sp,fp
   4dbcc:	df000017 	ldw	fp,0(sp)
   4dbd0:	dec00104 	addi	sp,sp,4
   4dbd4:	f800283a 	ret

0004dbd8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4dbd8:	defffe04 	addi	sp,sp,-8
   4dbdc:	dfc00115 	stw	ra,4(sp)
   4dbe0:	df000015 	stw	fp,0(sp)
   4dbe4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4dbe8:	01800174 	movhi	r6,5
   4dbec:	31888a04 	addi	r6,r6,8744
   4dbf0:	01400174 	movhi	r5,5
   4dbf4:	29419404 	addi	r5,r5,1616
   4dbf8:	01000174 	movhi	r4,5
   4dbfc:	21088a04 	addi	r4,r4,8744
   4dc00:	004db700 	call	4db70 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4dc04:	01800134 	movhi	r6,4
   4dc08:	31806d04 	addi	r6,r6,436
   4dc0c:	01400134 	movhi	r5,4
   4dc10:	29400804 	addi	r5,r5,32
   4dc14:	01000134 	movhi	r4,4
   4dc18:	21000804 	addi	r4,r4,32
   4dc1c:	004db700 	call	4db70 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4dc20:	01800174 	movhi	r6,5
   4dc24:	31819404 	addi	r6,r6,1616
   4dc28:	01400174 	movhi	r5,5
   4dc2c:	297ff004 	addi	r5,r5,-64
   4dc30:	01000174 	movhi	r4,5
   4dc34:	213ff004 	addi	r4,r4,-64
   4dc38:	004db700 	call	4db70 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4dc3c:	004f0140 	call	4f014 <alt_dcache_flush_all>
  alt_icache_flush_all();
   4dc40:	004f2180 	call	4f218 <alt_icache_flush_all>
}
   4dc44:	0001883a 	nop
   4dc48:	e037883a 	mov	sp,fp
   4dc4c:	dfc00117 	ldw	ra,4(sp)
   4dc50:	df000017 	ldw	fp,0(sp)
   4dc54:	dec00204 	addi	sp,sp,8
   4dc58:	f800283a 	ret

0004dc5c <alt_get_errno>:
{
   4dc5c:	defffe04 	addi	sp,sp,-8
   4dc60:	dfc00115 	stw	ra,4(sp)
   4dc64:	df000015 	stw	fp,0(sp)
   4dc68:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4dc6c:	00800174 	movhi	r2,5
   4dc70:	10888517 	ldw	r2,8724(r2)
   4dc74:	10000426 	beq	r2,zero,4dc88 <alt_get_errno+0x2c>
   4dc78:	00800174 	movhi	r2,5
   4dc7c:	10888517 	ldw	r2,8724(r2)
   4dc80:	103ee83a 	callr	r2
   4dc84:	00000206 	br	4dc90 <alt_get_errno+0x34>
   4dc88:	00800174 	movhi	r2,5
   4dc8c:	108f8304 	addi	r2,r2,15884
}
   4dc90:	e037883a 	mov	sp,fp
   4dc94:	dfc00117 	ldw	ra,4(sp)
   4dc98:	df000017 	ldw	fp,0(sp)
   4dc9c:	dec00204 	addi	sp,sp,8
   4dca0:	f800283a 	ret

0004dca4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4dca4:	defff904 	addi	sp,sp,-28
   4dca8:	dfc00615 	stw	ra,24(sp)
   4dcac:	df000515 	stw	fp,20(sp)
   4dcb0:	df000504 	addi	fp,sp,20
   4dcb4:	e13ffd15 	stw	r4,-12(fp)
   4dcb8:	e17ffc15 	stw	r5,-16(fp)
   4dcbc:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4dcc0:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4dcc4:	e0bffd17 	ldw	r2,-12(fp)
   4dcc8:	10000616 	blt	r2,zero,4dce4 <lseek+0x40>
   4dccc:	e0bffd17 	ldw	r2,-12(fp)
   4dcd0:	10c00324 	muli	r3,r2,12
   4dcd4:	00800174 	movhi	r2,5
   4dcd8:	10840404 	addi	r2,r2,4112
   4dcdc:	1885883a 	add	r2,r3,r2
   4dce0:	00000106 	br	4dce8 <lseek+0x44>
   4dce4:	0005883a 	mov	r2,zero
   4dce8:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   4dcec:	e0bffe17 	ldw	r2,-8(fp)
   4dcf0:	10001026 	beq	r2,zero,4dd34 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4dcf4:	e0bffe17 	ldw	r2,-8(fp)
   4dcf8:	10800017 	ldw	r2,0(r2)
   4dcfc:	10800717 	ldw	r2,28(r2)
   4dd00:	10000926 	beq	r2,zero,4dd28 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4dd04:	e0bffe17 	ldw	r2,-8(fp)
   4dd08:	10800017 	ldw	r2,0(r2)
   4dd0c:	10800717 	ldw	r2,28(r2)
   4dd10:	e1bffb17 	ldw	r6,-20(fp)
   4dd14:	e17ffc17 	ldw	r5,-16(fp)
   4dd18:	e13ffe17 	ldw	r4,-8(fp)
   4dd1c:	103ee83a 	callr	r2
   4dd20:	e0bfff15 	stw	r2,-4(fp)
   4dd24:	00000506 	br	4dd3c <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4dd28:	00bfde84 	movi	r2,-134
   4dd2c:	e0bfff15 	stw	r2,-4(fp)
   4dd30:	00000206 	br	4dd3c <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   4dd34:	00bfebc4 	movi	r2,-81
   4dd38:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   4dd3c:	e0bfff17 	ldw	r2,-4(fp)
   4dd40:	1000070e 	bge	r2,zero,4dd60 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   4dd44:	004dc5c0 	call	4dc5c <alt_get_errno>
   4dd48:	1007883a 	mov	r3,r2
   4dd4c:	e0bfff17 	ldw	r2,-4(fp)
   4dd50:	0085c83a 	sub	r2,zero,r2
   4dd54:	18800015 	stw	r2,0(r3)
    rc = -1;
   4dd58:	00bfffc4 	movi	r2,-1
   4dd5c:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   4dd60:	e0bfff17 	ldw	r2,-4(fp)
}
   4dd64:	e037883a 	mov	sp,fp
   4dd68:	dfc00117 	ldw	ra,4(sp)
   4dd6c:	df000017 	ldw	fp,0(sp)
   4dd70:	dec00204 	addi	sp,sp,8
   4dd74:	f800283a 	ret

0004dd78 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4dd78:	defffd04 	addi	sp,sp,-12
   4dd7c:	dfc00215 	stw	ra,8(sp)
   4dd80:	df000115 	stw	fp,4(sp)
   4dd84:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4dd88:	0009883a 	mov	r4,zero
   4dd8c:	004e2380 	call	4e238 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4dd90:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4dd94:	004e2740 	call	4e274 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4dd98:	01800174 	movhi	r6,5
   4dd9c:	31818c04 	addi	r6,r6,1584
   4dda0:	01400174 	movhi	r5,5
   4dda4:	29418c04 	addi	r5,r5,1584
   4dda8:	01000174 	movhi	r4,5
   4ddac:	21018c04 	addi	r4,r4,1584
   4ddb0:	004f5ac0 	call	4f5ac <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4ddb4:	004f1500 	call	4f150 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4ddb8:	01000174 	movhi	r4,5
   4ddbc:	213c6d04 	addi	r4,r4,-3660
   4ddc0:	004fd500 	call	4fd50 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4ddc4:	d0a70917 	ldw	r2,-25564(gp)
   4ddc8:	d0e70a17 	ldw	r3,-25560(gp)
   4ddcc:	d1270b17 	ldw	r4,-25556(gp)
   4ddd0:	200d883a 	mov	r6,r4
   4ddd4:	180b883a 	mov	r5,r3
   4ddd8:	1009883a 	mov	r4,r2
   4dddc:	00402000 	call	40200 <main>
   4dde0:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4dde4:	01000044 	movi	r4,1
   4dde8:	004d6fc0 	call	4d6fc <close>
  exit (result);
   4ddec:	e13fff17 	ldw	r4,-4(fp)
   4ddf0:	004fd640 	call	4fd64 <exit>

0004ddf4 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4ddf4:	defffe04 	addi	sp,sp,-8
   4ddf8:	df000115 	stw	fp,4(sp)
   4ddfc:	df000104 	addi	fp,sp,4
   4de00:	e13fff15 	stw	r4,-4(fp)
}
   4de04:	0001883a 	nop
   4de08:	e037883a 	mov	sp,fp
   4de0c:	df000017 	ldw	fp,0(sp)
   4de10:	dec00104 	addi	sp,sp,4
   4de14:	f800283a 	ret

0004de18 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4de18:	defffe04 	addi	sp,sp,-8
   4de1c:	df000115 	stw	fp,4(sp)
   4de20:	df000104 	addi	fp,sp,4
   4de24:	e13fff15 	stw	r4,-4(fp)
}
   4de28:	0001883a 	nop
   4de2c:	e037883a 	mov	sp,fp
   4de30:	df000017 	ldw	fp,0(sp)
   4de34:	dec00104 	addi	sp,sp,4
   4de38:	f800283a 	ret

0004de3c <alt_get_errno>:
{
   4de3c:	defffe04 	addi	sp,sp,-8
   4de40:	dfc00115 	stw	ra,4(sp)
   4de44:	df000015 	stw	fp,0(sp)
   4de48:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4de4c:	00800174 	movhi	r2,5
   4de50:	10888517 	ldw	r2,8724(r2)
   4de54:	10000426 	beq	r2,zero,4de68 <alt_get_errno+0x2c>
   4de58:	00800174 	movhi	r2,5
   4de5c:	10888517 	ldw	r2,8724(r2)
   4de60:	103ee83a 	callr	r2
   4de64:	00000206 	br	4de70 <alt_get_errno+0x34>
   4de68:	00800174 	movhi	r2,5
   4de6c:	108f8304 	addi	r2,r2,15884
}
   4de70:	e037883a 	mov	sp,fp
   4de74:	dfc00117 	ldw	ra,4(sp)
   4de78:	df000017 	ldw	fp,0(sp)
   4de7c:	dec00204 	addi	sp,sp,8
   4de80:	f800283a 	ret

0004de84 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4de84:	defff904 	addi	sp,sp,-28
   4de88:	dfc00615 	stw	ra,24(sp)
   4de8c:	df000515 	stw	fp,20(sp)
   4de90:	df000504 	addi	fp,sp,20
   4de94:	e13ffd15 	stw	r4,-12(fp)
   4de98:	e17ffc15 	stw	r5,-16(fp)
   4de9c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4dea0:	e0bffd17 	ldw	r2,-12(fp)
   4dea4:	10000616 	blt	r2,zero,4dec0 <read+0x3c>
   4dea8:	e0bffd17 	ldw	r2,-12(fp)
   4deac:	10c00324 	muli	r3,r2,12
   4deb0:	00800174 	movhi	r2,5
   4deb4:	10840404 	addi	r2,r2,4112
   4deb8:	1885883a 	add	r2,r3,r2
   4debc:	00000106 	br	4dec4 <read+0x40>
   4dec0:	0005883a 	mov	r2,zero
   4dec4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4dec8:	e0bfff17 	ldw	r2,-4(fp)
   4decc:	10002226 	beq	r2,zero,4df58 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4ded0:	e0bfff17 	ldw	r2,-4(fp)
   4ded4:	10800217 	ldw	r2,8(r2)
   4ded8:	108000cc 	andi	r2,r2,3
   4dedc:	10800060 	cmpeqi	r2,r2,1
   4dee0:	1000181e 	bne	r2,zero,4df44 <read+0xc0>
        (fd->dev->read))
   4dee4:	e0bfff17 	ldw	r2,-4(fp)
   4dee8:	10800017 	ldw	r2,0(r2)
   4deec:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4def0:	10001426 	beq	r2,zero,4df44 <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4def4:	e0bfff17 	ldw	r2,-4(fp)
   4def8:	10800017 	ldw	r2,0(r2)
   4defc:	10800517 	ldw	r2,20(r2)
   4df00:	e0fffb17 	ldw	r3,-20(fp)
   4df04:	180d883a 	mov	r6,r3
   4df08:	e17ffc17 	ldw	r5,-16(fp)
   4df0c:	e13fff17 	ldw	r4,-4(fp)
   4df10:	103ee83a 	callr	r2
   4df14:	e0bffe15 	stw	r2,-8(fp)
   4df18:	e0bffe17 	ldw	r2,-8(fp)
   4df1c:	1000070e 	bge	r2,zero,4df3c <read+0xb8>
        {
          ALT_ERRNO = -rval;
   4df20:	004de3c0 	call	4de3c <alt_get_errno>
   4df24:	1007883a 	mov	r3,r2
   4df28:	e0bffe17 	ldw	r2,-8(fp)
   4df2c:	0085c83a 	sub	r2,zero,r2
   4df30:	18800015 	stw	r2,0(r3)
          return -1;
   4df34:	00bfffc4 	movi	r2,-1
   4df38:	00000c06 	br	4df6c <read+0xe8>
        }
        return rval;
   4df3c:	e0bffe17 	ldw	r2,-8(fp)
   4df40:	00000a06 	br	4df6c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4df44:	004de3c0 	call	4de3c <alt_get_errno>
   4df48:	1007883a 	mov	r3,r2
   4df4c:	00800344 	movi	r2,13
   4df50:	18800015 	stw	r2,0(r3)
   4df54:	00000406 	br	4df68 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4df58:	004de3c0 	call	4de3c <alt_get_errno>
   4df5c:	1007883a 	mov	r3,r2
   4df60:	00801444 	movi	r2,81
   4df64:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4df68:	00bfffc4 	movi	r2,-1
}
   4df6c:	e037883a 	mov	sp,fp
   4df70:	dfc00117 	ldw	ra,4(sp)
   4df74:	df000017 	ldw	fp,0(sp)
   4df78:	dec00204 	addi	sp,sp,8
   4df7c:	f800283a 	ret

0004df80 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4df80:	defffe04 	addi	sp,sp,-8
   4df84:	df000115 	stw	fp,4(sp)
   4df88:	df000104 	addi	fp,sp,4
   4df8c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   4df90:	e0bfff17 	ldw	r2,-4(fp)
   4df94:	108000d0 	cmplti	r2,r2,3
   4df98:	10000a1e 	bne	r2,zero,4dfc4 <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
   4df9c:	e0bfff17 	ldw	r2,-4(fp)
   4dfa0:	10c00324 	muli	r3,r2,12
   4dfa4:	00800174 	movhi	r2,5
   4dfa8:	1885883a 	add	r2,r3,r2
   4dfac:	10040615 	stw	zero,4120(r2)
    alt_fd_list[fd].dev      = 0;
   4dfb0:	e0bfff17 	ldw	r2,-4(fp)
   4dfb4:	10c00324 	muli	r3,r2,12
   4dfb8:	00800174 	movhi	r2,5
   4dfbc:	1885883a 	add	r2,r3,r2
   4dfc0:	10040415 	stw	zero,4112(r2)
  }
}
   4dfc4:	0001883a 	nop
   4dfc8:	e037883a 	mov	sp,fp
   4dfcc:	df000017 	ldw	fp,0(sp)
   4dfd0:	dec00104 	addi	sp,sp,4
   4dfd4:	f800283a 	ret

0004dfd8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4dfd8:	defff904 	addi	sp,sp,-28
   4dfdc:	df000615 	stw	fp,24(sp)
   4dfe0:	df000604 	addi	fp,sp,24
   4dfe4:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   4dfe8:	0005303a 	rdctl	r2,status
   4dfec:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4dff0:	e0fffd17 	ldw	r3,-12(fp)
   4dff4:	00bfff84 	movi	r2,-2
   4dff8:	1884703a 	and	r2,r3,r2
   4dffc:	1001703a 	wrctl	status,r2
  return context;
   4e000:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4e004:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4e008:	d0a00a17 	ldw	r2,-32728(gp)
   4e00c:	10c000c4 	addi	r3,r2,3
   4e010:	00bfff04 	movi	r2,-4
   4e014:	1884703a 	and	r2,r3,r2
   4e018:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4e01c:	d0e00a17 	ldw	r3,-32728(gp)
   4e020:	e0bffa17 	ldw	r2,-24(fp)
   4e024:	1887883a 	add	r3,r3,r2
   4e028:	008001b4 	movhi	r2,6
   4e02c:	109c4004 	addi	r2,r2,28928
   4e030:	10c0072e 	bgeu	r2,r3,4e050 <sbrk+0x78>
   4e034:	e0bfff17 	ldw	r2,-4(fp)
   4e038:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4e03c:	e0bffc17 	ldw	r2,-16(fp)
   4e040:	1001703a 	wrctl	status,r2
}
   4e044:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4e048:	00bfffc4 	movi	r2,-1
   4e04c:	00000c06 	br	4e080 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   4e050:	d0a00a17 	ldw	r2,-32728(gp)
   4e054:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   4e058:	d0e00a17 	ldw	r3,-32728(gp)
   4e05c:	e0bffa17 	ldw	r2,-24(fp)
   4e060:	1885883a 	add	r2,r3,r2
   4e064:	d0a00a15 	stw	r2,-32728(gp)
   4e068:	e0bfff17 	ldw	r2,-4(fp)
   4e06c:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   4e070:	e0bffb17 	ldw	r2,-20(fp)
   4e074:	1001703a 	wrctl	status,r2
}
   4e078:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4e07c:	e0bffe17 	ldw	r2,-8(fp)
} 
   4e080:	e037883a 	mov	sp,fp
   4e084:	df000017 	ldw	fp,0(sp)
   4e088:	dec00104 	addi	sp,sp,4
   4e08c:	f800283a 	ret

0004e090 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   4e090:	defffd04 	addi	sp,sp,-12
   4e094:	dfc00215 	stw	ra,8(sp)
   4e098:	df000115 	stw	fp,4(sp)
   4e09c:	df000104 	addi	fp,sp,4
   4e0a0:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   4e0a4:	e13fff17 	ldw	r4,-4(fp)
   4e0a8:	004eebc0 	call	4eebc <alt_busy_sleep>
}
   4e0ac:	e037883a 	mov	sp,fp
   4e0b0:	dfc00117 	ldw	ra,4(sp)
   4e0b4:	df000017 	ldw	fp,0(sp)
   4e0b8:	dec00204 	addi	sp,sp,8
   4e0bc:	f800283a 	ret

0004e0c0 <alt_get_errno>:
{
   4e0c0:	defffe04 	addi	sp,sp,-8
   4e0c4:	dfc00115 	stw	ra,4(sp)
   4e0c8:	df000015 	stw	fp,0(sp)
   4e0cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e0d0:	00800174 	movhi	r2,5
   4e0d4:	10888517 	ldw	r2,8724(r2)
   4e0d8:	10000426 	beq	r2,zero,4e0ec <alt_get_errno+0x2c>
   4e0dc:	00800174 	movhi	r2,5
   4e0e0:	10888517 	ldw	r2,8724(r2)
   4e0e4:	103ee83a 	callr	r2
   4e0e8:	00000206 	br	4e0f4 <alt_get_errno+0x34>
   4e0ec:	00800174 	movhi	r2,5
   4e0f0:	108f8304 	addi	r2,r2,15884
}
   4e0f4:	e037883a 	mov	sp,fp
   4e0f8:	dfc00117 	ldw	ra,4(sp)
   4e0fc:	df000017 	ldw	fp,0(sp)
   4e100:	dec00204 	addi	sp,sp,8
   4e104:	f800283a 	ret

0004e108 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4e108:	defff904 	addi	sp,sp,-28
   4e10c:	dfc00615 	stw	ra,24(sp)
   4e110:	df000515 	stw	fp,20(sp)
   4e114:	df000504 	addi	fp,sp,20
   4e118:	e13ffd15 	stw	r4,-12(fp)
   4e11c:	e17ffc15 	stw	r5,-16(fp)
   4e120:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4e124:	e0bffd17 	ldw	r2,-12(fp)
   4e128:	10000616 	blt	r2,zero,4e144 <write+0x3c>
   4e12c:	e0bffd17 	ldw	r2,-12(fp)
   4e130:	10c00324 	muli	r3,r2,12
   4e134:	00800174 	movhi	r2,5
   4e138:	10840404 	addi	r2,r2,4112
   4e13c:	1885883a 	add	r2,r3,r2
   4e140:	00000106 	br	4e148 <write+0x40>
   4e144:	0005883a 	mov	r2,zero
   4e148:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   4e14c:	e0bfff17 	ldw	r2,-4(fp)
   4e150:	10002126 	beq	r2,zero,4e1d8 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4e154:	e0bfff17 	ldw	r2,-4(fp)
   4e158:	10800217 	ldw	r2,8(r2)
   4e15c:	108000cc 	andi	r2,r2,3
   4e160:	10001826 	beq	r2,zero,4e1c4 <write+0xbc>
   4e164:	e0bfff17 	ldw	r2,-4(fp)
   4e168:	10800017 	ldw	r2,0(r2)
   4e16c:	10800617 	ldw	r2,24(r2)
   4e170:	10001426 	beq	r2,zero,4e1c4 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4e174:	e0bfff17 	ldw	r2,-4(fp)
   4e178:	10800017 	ldw	r2,0(r2)
   4e17c:	10800617 	ldw	r2,24(r2)
   4e180:	e0fffb17 	ldw	r3,-20(fp)
   4e184:	180d883a 	mov	r6,r3
   4e188:	e17ffc17 	ldw	r5,-16(fp)
   4e18c:	e13fff17 	ldw	r4,-4(fp)
   4e190:	103ee83a 	callr	r2
   4e194:	e0bffe15 	stw	r2,-8(fp)
   4e198:	e0bffe17 	ldw	r2,-8(fp)
   4e19c:	1000070e 	bge	r2,zero,4e1bc <write+0xb4>
      {
        ALT_ERRNO = -rval;
   4e1a0:	004e0c00 	call	4e0c0 <alt_get_errno>
   4e1a4:	1007883a 	mov	r3,r2
   4e1a8:	e0bffe17 	ldw	r2,-8(fp)
   4e1ac:	0085c83a 	sub	r2,zero,r2
   4e1b0:	18800015 	stw	r2,0(r3)
        return -1;
   4e1b4:	00bfffc4 	movi	r2,-1
   4e1b8:	00000c06 	br	4e1ec <write+0xe4>
      }
      return rval;
   4e1bc:	e0bffe17 	ldw	r2,-8(fp)
   4e1c0:	00000a06 	br	4e1ec <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4e1c4:	004e0c00 	call	4e0c0 <alt_get_errno>
   4e1c8:	1007883a 	mov	r3,r2
   4e1cc:	00800344 	movi	r2,13
   4e1d0:	18800015 	stw	r2,0(r3)
   4e1d4:	00000406 	br	4e1e8 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4e1d8:	004e0c00 	call	4e0c0 <alt_get_errno>
   4e1dc:	1007883a 	mov	r3,r2
   4e1e0:	00801444 	movi	r2,81
   4e1e4:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4e1e8:	00bfffc4 	movi	r2,-1
}
   4e1ec:	e037883a 	mov	sp,fp
   4e1f0:	dfc00117 	ldw	ra,4(sp)
   4e1f4:	df000017 	ldw	fp,0(sp)
   4e1f8:	dec00204 	addi	sp,sp,8
   4e1fc:	f800283a 	ret

0004e200 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4e200:	defffd04 	addi	sp,sp,-12
   4e204:	dfc00215 	stw	ra,8(sp)
   4e208:	df000115 	stw	fp,4(sp)
   4e20c:	df000104 	addi	fp,sp,4
   4e210:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4e214:	01400174 	movhi	r5,5
   4e218:	29488204 	addi	r5,r5,8712
   4e21c:	e13fff17 	ldw	r4,-4(fp)
   4e220:	004f0a80 	call	4f0a8 <alt_dev_llist_insert>
}
   4e224:	e037883a 	mov	sp,fp
   4e228:	dfc00117 	ldw	ra,4(sp)
   4e22c:	df000017 	ldw	fp,0(sp)
   4e230:	dec00204 	addi	sp,sp,8
   4e234:	f800283a 	ret

0004e238 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4e238:	defffd04 	addi	sp,sp,-12
   4e23c:	dfc00215 	stw	ra,8(sp)
   4e240:	df000115 	stw	fp,4(sp)
   4e244:	df000104 	addi	fp,sp,4
   4e248:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_QSYS, nios2_qsys);
   4e24c:	004fa540 	call	4fa54 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4e250:	00800044 	movi	r2,1
   4e254:	1001703a 	wrctl	status,r2
}
   4e258:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   4e25c:	0001883a 	nop
   4e260:	e037883a 	mov	sp,fp
   4e264:	dfc00117 	ldw	ra,4(sp)
   4e268:	df000017 	ldw	fp,0(sp)
   4e26c:	dec00204 	addi	sp,sp,8
   4e270:	f800283a 	ret

0004e274 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4e274:	defffe04 	addi	sp,sp,-8
   4e278:	dfc00115 	stw	ra,4(sp)
   4e27c:	df000015 	stw	fp,0(sp)
   4e280:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   4e284:	000d883a 	mov	r6,zero
   4e288:	000b883a 	mov	r5,zero
   4e28c:	01000174 	movhi	r4,5
   4e290:	21046e04 	addi	r4,r4,4536
   4e294:	004e4240 	call	4e424 <altera_avalon_jtag_uart_init>
   4e298:	01000174 	movhi	r4,5
   4e29c:	21046404 	addi	r4,r4,4496
   4e2a0:	004e2000 	call	4e200 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
   4e2a4:	0001883a 	nop
}
   4e2a8:	0001883a 	nop
   4e2ac:	e037883a 	mov	sp,fp
   4e2b0:	dfc00117 	ldw	ra,4(sp)
   4e2b4:	df000017 	ldw	fp,0(sp)
   4e2b8:	dec00204 	addi	sp,sp,8
   4e2bc:	f800283a 	ret

0004e2c0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4e2c0:	defffa04 	addi	sp,sp,-24
   4e2c4:	dfc00515 	stw	ra,20(sp)
   4e2c8:	df000415 	stw	fp,16(sp)
   4e2cc:	df000404 	addi	fp,sp,16
   4e2d0:	e13ffe15 	stw	r4,-8(fp)
   4e2d4:	e17ffd15 	stw	r5,-12(fp)
   4e2d8:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4e2dc:	e0bffe17 	ldw	r2,-8(fp)
   4e2e0:	10800017 	ldw	r2,0(r2)
   4e2e4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4e2e8:	e0bfff17 	ldw	r2,-4(fp)
   4e2ec:	10c00a04 	addi	r3,r2,40
   4e2f0:	e0bffe17 	ldw	r2,-8(fp)
   4e2f4:	10800217 	ldw	r2,8(r2)
   4e2f8:	100f883a 	mov	r7,r2
   4e2fc:	e1bffc17 	ldw	r6,-16(fp)
   4e300:	e17ffd17 	ldw	r5,-12(fp)
   4e304:	1809883a 	mov	r4,r3
   4e308:	004e9040 	call	4e904 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4e30c:	e037883a 	mov	sp,fp
   4e310:	dfc00117 	ldw	ra,4(sp)
   4e314:	df000017 	ldw	fp,0(sp)
   4e318:	dec00204 	addi	sp,sp,8
   4e31c:	f800283a 	ret

0004e320 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4e320:	defffa04 	addi	sp,sp,-24
   4e324:	dfc00515 	stw	ra,20(sp)
   4e328:	df000415 	stw	fp,16(sp)
   4e32c:	df000404 	addi	fp,sp,16
   4e330:	e13ffe15 	stw	r4,-8(fp)
   4e334:	e17ffd15 	stw	r5,-12(fp)
   4e338:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4e33c:	e0bffe17 	ldw	r2,-8(fp)
   4e340:	10800017 	ldw	r2,0(r2)
   4e344:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4e348:	e0bfff17 	ldw	r2,-4(fp)
   4e34c:	10c00a04 	addi	r3,r2,40
   4e350:	e0bffe17 	ldw	r2,-8(fp)
   4e354:	10800217 	ldw	r2,8(r2)
   4e358:	100f883a 	mov	r7,r2
   4e35c:	e1bffc17 	ldw	r6,-16(fp)
   4e360:	e17ffd17 	ldw	r5,-12(fp)
   4e364:	1809883a 	mov	r4,r3
   4e368:	004eb240 	call	4eb24 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4e36c:	e037883a 	mov	sp,fp
   4e370:	dfc00117 	ldw	ra,4(sp)
   4e374:	df000017 	ldw	fp,0(sp)
   4e378:	dec00204 	addi	sp,sp,8
   4e37c:	f800283a 	ret

0004e380 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4e380:	defffc04 	addi	sp,sp,-16
   4e384:	dfc00315 	stw	ra,12(sp)
   4e388:	df000215 	stw	fp,8(sp)
   4e38c:	df000204 	addi	fp,sp,8
   4e390:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4e394:	e0bffe17 	ldw	r2,-8(fp)
   4e398:	10800017 	ldw	r2,0(r2)
   4e39c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4e3a0:	e0bfff17 	ldw	r2,-4(fp)
   4e3a4:	10c00a04 	addi	r3,r2,40
   4e3a8:	e0bffe17 	ldw	r2,-8(fp)
   4e3ac:	10800217 	ldw	r2,8(r2)
   4e3b0:	100b883a 	mov	r5,r2
   4e3b4:	1809883a 	mov	r4,r3
   4e3b8:	004e7a80 	call	4e7a8 <altera_avalon_jtag_uart_close>
}
   4e3bc:	e037883a 	mov	sp,fp
   4e3c0:	dfc00117 	ldw	ra,4(sp)
   4e3c4:	df000017 	ldw	fp,0(sp)
   4e3c8:	dec00204 	addi	sp,sp,8
   4e3cc:	f800283a 	ret

0004e3d0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4e3d0:	defffa04 	addi	sp,sp,-24
   4e3d4:	dfc00515 	stw	ra,20(sp)
   4e3d8:	df000415 	stw	fp,16(sp)
   4e3dc:	df000404 	addi	fp,sp,16
   4e3e0:	e13ffe15 	stw	r4,-8(fp)
   4e3e4:	e17ffd15 	stw	r5,-12(fp)
   4e3e8:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4e3ec:	e0bffe17 	ldw	r2,-8(fp)
   4e3f0:	10800017 	ldw	r2,0(r2)
   4e3f4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4e3f8:	e0bfff17 	ldw	r2,-4(fp)
   4e3fc:	10800a04 	addi	r2,r2,40
   4e400:	e1bffc17 	ldw	r6,-16(fp)
   4e404:	e17ffd17 	ldw	r5,-12(fp)
   4e408:	1009883a 	mov	r4,r2
   4e40c:	004e8100 	call	4e810 <altera_avalon_jtag_uart_ioctl>
}
   4e410:	e037883a 	mov	sp,fp
   4e414:	dfc00117 	ldw	ra,4(sp)
   4e418:	df000017 	ldw	fp,0(sp)
   4e41c:	dec00204 	addi	sp,sp,8
   4e420:	f800283a 	ret

0004e424 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4e424:	defffa04 	addi	sp,sp,-24
   4e428:	dfc00515 	stw	ra,20(sp)
   4e42c:	df000415 	stw	fp,16(sp)
   4e430:	df000404 	addi	fp,sp,16
   4e434:	e13fff15 	stw	r4,-4(fp)
   4e438:	e17ffe15 	stw	r5,-8(fp)
   4e43c:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e440:	e0bfff17 	ldw	r2,-4(fp)
   4e444:	00c00044 	movi	r3,1
   4e448:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4e44c:	e0bfff17 	ldw	r2,-4(fp)
   4e450:	10800017 	ldw	r2,0(r2)
   4e454:	10800104 	addi	r2,r2,4
   4e458:	1007883a 	mov	r3,r2
   4e45c:	e0bfff17 	ldw	r2,-4(fp)
   4e460:	10800817 	ldw	r2,32(r2)
   4e464:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4e468:	e0bffe17 	ldw	r2,-8(fp)
   4e46c:	e0fffd17 	ldw	r3,-12(fp)
   4e470:	d8000015 	stw	zero,0(sp)
   4e474:	e1ffff17 	ldw	r7,-4(fp)
   4e478:	01800174 	movhi	r6,5
   4e47c:	31b93a04 	addi	r6,r6,-6936
   4e480:	180b883a 	mov	r5,r3
   4e484:	1009883a 	mov	r4,r2
   4e488:	004f24c0 	call	4f24c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4e48c:	e0bfff17 	ldw	r2,-4(fp)
   4e490:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4e494:	e0bfff17 	ldw	r2,-4(fp)
   4e498:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4e49c:	00800174 	movhi	r2,5
   4e4a0:	108f8917 	ldw	r2,15908(r2)
   4e4a4:	e1ffff17 	ldw	r7,-4(fp)
   4e4a8:	01800174 	movhi	r6,5
   4e4ac:	31b9bf04 	addi	r6,r6,-6404
   4e4b0:	100b883a 	mov	r5,r2
   4e4b4:	1809883a 	mov	r4,r3
   4e4b8:	004ed4c0 	call	4ed4c <alt_alarm_start>
   4e4bc:	1000040e 	bge	r2,zero,4e4d0 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4e4c0:	e0ffff17 	ldw	r3,-4(fp)
   4e4c4:	00a00034 	movhi	r2,32768
   4e4c8:	10bfffc4 	addi	r2,r2,-1
   4e4cc:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4e4d0:	0001883a 	nop
   4e4d4:	e037883a 	mov	sp,fp
   4e4d8:	dfc00117 	ldw	ra,4(sp)
   4e4dc:	df000017 	ldw	fp,0(sp)
   4e4e0:	dec00204 	addi	sp,sp,8
   4e4e4:	f800283a 	ret

0004e4e8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4e4e8:	defff704 	addi	sp,sp,-36
   4e4ec:	df000815 	stw	fp,32(sp)
   4e4f0:	df000804 	addi	fp,sp,32
   4e4f4:	e13ff815 	stw	r4,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4e4f8:	e0bff817 	ldw	r2,-32(fp)
   4e4fc:	e0bffc15 	stw	r2,-16(fp)
  unsigned int base = sp->base;
   4e500:	e0bffc17 	ldw	r2,-16(fp)
   4e504:	10800017 	ldw	r2,0(r2)
   4e508:	e0bffb15 	stw	r2,-20(fp)
  unsigned int postflag=0;
   4e50c:	e03fff15 	stw	zero,-4(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4e510:	e0bffb17 	ldw	r2,-20(fp)
   4e514:	10800104 	addi	r2,r2,4
   4e518:	10800037 	ldwio	r2,0(r2)
   4e51c:	e0bffa15 	stw	r2,-24(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4e520:	e0bffa17 	ldw	r2,-24(fp)
   4e524:	1080c00c 	andi	r2,r2,768
   4e528:	10006e26 	beq	r2,zero,4e6e4 <altera_avalon_jtag_uart_irq+0x1fc>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4e52c:	e0bffa17 	ldw	r2,-24(fp)
   4e530:	1080400c 	andi	r2,r2,256
   4e534:	10003526 	beq	r2,zero,4e60c <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4e538:	00800074 	movhi	r2,1
   4e53c:	e0bffe15 	stw	r2,-8(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e540:	e0bffc17 	ldw	r2,-16(fp)
   4e544:	10800a17 	ldw	r2,40(r2)
   4e548:	10800044 	addi	r2,r2,1
   4e54c:	1081ffcc 	andi	r2,r2,2047
   4e550:	e0bff915 	stw	r2,-28(fp)
        if (next == sp->rx_out)
   4e554:	e0bffc17 	ldw	r2,-16(fp)
   4e558:	10800b17 	ldw	r2,44(r2)
   4e55c:	e0fff917 	ldw	r3,-28(fp)
   4e560:	18801526 	beq	r3,r2,4e5b8 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4e564:	e0bffb17 	ldw	r2,-20(fp)
   4e568:	10800037 	ldwio	r2,0(r2)
   4e56c:	e0bffe15 	stw	r2,-8(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4e570:	e0bffe17 	ldw	r2,-8(fp)
   4e574:	10a0000c 	andi	r2,r2,32768
   4e578:	10001126 	beq	r2,zero,4e5c0 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4e57c:	e0bffc17 	ldw	r2,-16(fp)
   4e580:	10800a17 	ldw	r2,40(r2)
   4e584:	e0fffe17 	ldw	r3,-8(fp)
   4e588:	1809883a 	mov	r4,r3
   4e58c:	e0fffc17 	ldw	r3,-16(fp)
   4e590:	1885883a 	add	r2,r3,r2
   4e594:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e598:	e0bffc17 	ldw	r2,-16(fp)
   4e59c:	10800a17 	ldw	r2,40(r2)
   4e5a0:	10800044 	addi	r2,r2,1
   4e5a4:	10c1ffcc 	andi	r3,r2,2047
   4e5a8:	e0bffc17 	ldw	r2,-16(fp)
   4e5ac:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   4e5b0:	0001883a 	nop
      {
   4e5b4:	003fe206 	br	4e540 <altera_avalon_jtag_uart_irq+0x58>
          break;
   4e5b8:	0001883a 	nop
   4e5bc:	00000106 	br	4e5c4 <altera_avalon_jtag_uart_irq+0xdc>
          break;
   4e5c0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, ALT_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4e5c4:	e0bffe17 	ldw	r2,-8(fp)
   4e5c8:	00ffffd4 	movui	r3,65535
   4e5cc:	18800f2e 	bgeu	r3,r2,4e60c <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e5d0:	e0bffc17 	ldw	r2,-16(fp)
   4e5d4:	10c00817 	ldw	r3,32(r2)
   4e5d8:	00bfff84 	movi	r2,-2
   4e5dc:	1886703a 	and	r3,r3,r2
   4e5e0:	e0bffc17 	ldw	r2,-16(fp)
   4e5e4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4e5e8:	e0bffb17 	ldw	r2,-20(fp)
   4e5ec:	10800104 	addi	r2,r2,4
   4e5f0:	1007883a 	mov	r3,r2
   4e5f4:	e0bffc17 	ldw	r2,-16(fp)
   4e5f8:	10800817 	ldw	r2,32(r2)
   4e5fc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4e600:	e0bffb17 	ldw	r2,-20(fp)
   4e604:	10800104 	addi	r2,r2,4
   4e608:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4e60c:	e0bffa17 	ldw	r2,-24(fp)
   4e610:	1080800c 	andi	r2,r2,512
   4e614:	103fbe26 	beq	r2,zero,4e510 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4e618:	e0bffa17 	ldw	r2,-24(fp)
   4e61c:	1004d43a 	srli	r2,r2,16
   4e620:	e0bffd15 	stw	r2,-12(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4e624:	00001506 	br	4e67c <altera_avalon_jtag_uart_irq+0x194>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4e628:	e0bffb17 	ldw	r2,-20(fp)
   4e62c:	e0fffc17 	ldw	r3,-16(fp)
   4e630:	18c00d17 	ldw	r3,52(r3)
   4e634:	e13ffc17 	ldw	r4,-16(fp)
   4e638:	20c7883a 	add	r3,r4,r3
   4e63c:	18c20e03 	ldbu	r3,2104(r3)
   4e640:	18c03fcc 	andi	r3,r3,255
   4e644:	18c0201c 	xori	r3,r3,128
   4e648:	18ffe004 	addi	r3,r3,-128
   4e64c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e650:	e0bffc17 	ldw	r2,-16(fp)
   4e654:	10800d17 	ldw	r2,52(r2)
   4e658:	10800044 	addi	r2,r2,1
   4e65c:	10c1ffcc 	andi	r3,r2,2047
   4e660:	e0bffc17 	ldw	r2,-16(fp)
   4e664:	10c00d15 	stw	r3,52(r2)
        
        /* indicate that the ALT_FLAG_POST routine must be called */
        postflag=1;
   4e668:	00800044 	movi	r2,1
   4e66c:	e0bfff15 	stw	r2,-4(fp)

        space--;
   4e670:	e0bffd17 	ldw	r2,-12(fp)
   4e674:	10bfffc4 	addi	r2,r2,-1
   4e678:	e0bffd15 	stw	r2,-12(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   4e67c:	e0bffd17 	ldw	r2,-12(fp)
   4e680:	10000526 	beq	r2,zero,4e698 <altera_avalon_jtag_uart_irq+0x1b0>
   4e684:	e0bffc17 	ldw	r2,-16(fp)
   4e688:	10c00d17 	ldw	r3,52(r2)
   4e68c:	e0bffc17 	ldw	r2,-16(fp)
   4e690:	10800c17 	ldw	r2,48(r2)
   4e694:	18bfe41e 	bne	r3,r2,4e628 <altera_avalon_jtag_uart_irq+0x140>
      {
        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, ALT_FLAG_SET);
      }

      if (space > 0)
   4e698:	e0bffd17 	ldw	r2,-12(fp)
   4e69c:	103f9c26 	beq	r2,zero,4e510 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e6a0:	e0bffc17 	ldw	r2,-16(fp)
   4e6a4:	10c00817 	ldw	r3,32(r2)
   4e6a8:	00bfff44 	movi	r2,-3
   4e6ac:	1886703a 	and	r3,r3,r2
   4e6b0:	e0bffc17 	ldw	r2,-16(fp)
   4e6b4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e6b8:	e0bffc17 	ldw	r2,-16(fp)
   4e6bc:	10800017 	ldw	r2,0(r2)
   4e6c0:	10800104 	addi	r2,r2,4
   4e6c4:	1007883a 	mov	r3,r2
   4e6c8:	e0bffc17 	ldw	r2,-16(fp)
   4e6cc:	10800817 	ldw	r2,32(r2)
   4e6d0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4e6d4:	e0bffb17 	ldw	r2,-20(fp)
   4e6d8:	10800104 	addi	r2,r2,4
   4e6dc:	10800037 	ldwio	r2,0(r2)
  {
   4e6e0:	003f8b06 	br	4e510 <altera_avalon_jtag_uart_irq+0x28>
      break;
   4e6e4:	0001883a 	nop
      }
    }
  }
}
   4e6e8:	0001883a 	nop
   4e6ec:	e037883a 	mov	sp,fp
   4e6f0:	df000017 	ldw	fp,0(sp)
   4e6f4:	dec00104 	addi	sp,sp,4
   4e6f8:	f800283a 	ret

0004e6fc <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4e6fc:	defffc04 	addi	sp,sp,-16
   4e700:	df000315 	stw	fp,12(sp)
   4e704:	df000304 	addi	fp,sp,12
   4e708:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4e70c:	e0bffd17 	ldw	r2,-12(fp)
   4e710:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4e714:	e0bfff17 	ldw	r2,-4(fp)
   4e718:	10800017 	ldw	r2,0(r2)
   4e71c:	10800104 	addi	r2,r2,4
   4e720:	10800037 	ldwio	r2,0(r2)
   4e724:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4e728:	e0bffe17 	ldw	r2,-8(fp)
   4e72c:	1081000c 	andi	r2,r2,1024
   4e730:	10000b26 	beq	r2,zero,4e760 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4e734:	e0bfff17 	ldw	r2,-4(fp)
   4e738:	10800017 	ldw	r2,0(r2)
   4e73c:	10800104 	addi	r2,r2,4
   4e740:	1007883a 	mov	r3,r2
   4e744:	e0bfff17 	ldw	r2,-4(fp)
   4e748:	10800817 	ldw	r2,32(r2)
   4e74c:	10810014 	ori	r2,r2,1024
   4e750:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4e754:	e0bfff17 	ldw	r2,-4(fp)
   4e758:	10000915 	stw	zero,36(r2)
   4e75c:	00000c06 	br	4e790 <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4e760:	e0bfff17 	ldw	r2,-4(fp)
   4e764:	10c00917 	ldw	r3,36(r2)
   4e768:	00a00034 	movhi	r2,32768
   4e76c:	10bfff04 	addi	r2,r2,-4
   4e770:	10c00736 	bltu	r2,r3,4e790 <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
   4e774:	e0bfff17 	ldw	r2,-4(fp)
   4e778:	10800917 	ldw	r2,36(r2)
   4e77c:	10c00044 	addi	r3,r2,1
   4e780:	e0bfff17 	ldw	r2,-4(fp)
   4e784:	10c00915 	stw	r3,36(r2)
    
    if (sp->host_inactive >= sp->timeout) {
   4e788:	e0bfff17 	ldw	r2,-4(fp)
   4e78c:	10800917 	ldw	r2,36(r2)
   4e790:	00800174 	movhi	r2,5
   4e794:	108f8917 	ldw	r2,15908(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, ALT_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4e798:	e037883a 	mov	sp,fp
   4e79c:	df000017 	ldw	fp,0(sp)
   4e7a0:	dec00104 	addi	sp,sp,4
   4e7a4:	f800283a 	ret

0004e7a8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4e7a8:	defffd04 	addi	sp,sp,-12
   4e7ac:	df000215 	stw	fp,8(sp)
   4e7b0:	df000204 	addi	fp,sp,8
   4e7b4:	e13fff15 	stw	r4,-4(fp)
   4e7b8:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4e7bc:	00000506 	br	4e7d4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4e7c0:	e0bffe17 	ldw	r2,-8(fp)
   4e7c4:	1090000c 	andi	r2,r2,16384
   4e7c8:	10000226 	beq	r2,zero,4e7d4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4e7cc:	00bffd44 	movi	r2,-11
   4e7d0:	00000b06 	br	4e800 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4e7d4:	e0bfff17 	ldw	r2,-4(fp)
   4e7d8:	10c00d17 	ldw	r3,52(r2)
   4e7dc:	e0bfff17 	ldw	r2,-4(fp)
   4e7e0:	10800c17 	ldw	r2,48(r2)
   4e7e4:	18800526 	beq	r3,r2,4e7fc <altera_avalon_jtag_uart_close+0x54>
   4e7e8:	e0bfff17 	ldw	r2,-4(fp)
   4e7ec:	10c00917 	ldw	r3,36(r2)
   4e7f0:	e0bfff17 	ldw	r2,-4(fp)
   4e7f4:	10800117 	ldw	r2,4(r2)
   4e7f8:	18bff136 	bltu	r3,r2,4e7c0 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   4e7fc:	0005883a 	mov	r2,zero
}
   4e800:	e037883a 	mov	sp,fp
   4e804:	df000017 	ldw	fp,0(sp)
   4e808:	dec00104 	addi	sp,sp,4
   4e80c:	f800283a 	ret

0004e810 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4e810:	defffa04 	addi	sp,sp,-24
   4e814:	df000515 	stw	fp,20(sp)
   4e818:	df000504 	addi	fp,sp,20
   4e81c:	e13ffd15 	stw	r4,-12(fp)
   4e820:	e17ffc15 	stw	r5,-16(fp)
   4e824:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   4e828:	00bff9c4 	movi	r2,-25
   4e82c:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   4e830:	e0bffc17 	ldw	r2,-16(fp)
   4e834:	109a8060 	cmpeqi	r2,r2,27137
   4e838:	1000041e 	bne	r2,zero,4e84c <altera_avalon_jtag_uart_ioctl+0x3c>
   4e83c:	e0bffc17 	ldw	r2,-16(fp)
   4e840:	109a80a0 	cmpeqi	r2,r2,27138
   4e844:	1000181e 	bne	r2,zero,4e8a8 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   4e848:	00002906 	br	4e8f0 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   4e84c:	e0bffd17 	ldw	r2,-12(fp)
   4e850:	10c00117 	ldw	r3,4(r2)
   4e854:	00a00034 	movhi	r2,32768
   4e858:	10bfffc4 	addi	r2,r2,-1
   4e85c:	18802126 	beq	r3,r2,4e8e4 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   4e860:	e0bffb17 	ldw	r2,-20(fp)
   4e864:	10800017 	ldw	r2,0(r2)
   4e868:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4e86c:	e0bffe17 	ldw	r2,-8(fp)
   4e870:	10800090 	cmplti	r2,r2,2
   4e874:	1000061e 	bne	r2,zero,4e890 <altera_avalon_jtag_uart_ioctl+0x80>
   4e878:	e0fffe17 	ldw	r3,-8(fp)
   4e87c:	00a00034 	movhi	r2,32768
   4e880:	10bfffc4 	addi	r2,r2,-1
   4e884:	18800226 	beq	r3,r2,4e890 <altera_avalon_jtag_uart_ioctl+0x80>
   4e888:	e0bffe17 	ldw	r2,-8(fp)
   4e88c:	00000206 	br	4e898 <altera_avalon_jtag_uart_ioctl+0x88>
   4e890:	00a00034 	movhi	r2,32768
   4e894:	10bfff84 	addi	r2,r2,-2
   4e898:	e0fffd17 	ldw	r3,-12(fp)
   4e89c:	18800115 	stw	r2,4(r3)
      rc = 0;
   4e8a0:	e03fff15 	stw	zero,-4(fp)
    break;
   4e8a4:	00000f06 	br	4e8e4 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   4e8a8:	e0bffd17 	ldw	r2,-12(fp)
   4e8ac:	10c00117 	ldw	r3,4(r2)
   4e8b0:	00a00034 	movhi	r2,32768
   4e8b4:	10bfffc4 	addi	r2,r2,-1
   4e8b8:	18800c26 	beq	r3,r2,4e8ec <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4e8bc:	e0bffd17 	ldw	r2,-12(fp)
   4e8c0:	10c00917 	ldw	r3,36(r2)
   4e8c4:	e0bffd17 	ldw	r2,-12(fp)
   4e8c8:	10800117 	ldw	r2,4(r2)
   4e8cc:	1885803a 	cmpltu	r2,r3,r2
   4e8d0:	10c03fcc 	andi	r3,r2,255
   4e8d4:	e0bffb17 	ldw	r2,-20(fp)
   4e8d8:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4e8dc:	e03fff15 	stw	zero,-4(fp)
    break;
   4e8e0:	00000206 	br	4e8ec <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   4e8e4:	0001883a 	nop
   4e8e8:	00000106 	br	4e8f0 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   4e8ec:	0001883a 	nop
  }

  return rc;
   4e8f0:	e0bfff17 	ldw	r2,-4(fp)
}
   4e8f4:	e037883a 	mov	sp,fp
   4e8f8:	df000017 	ldw	fp,0(sp)
   4e8fc:	dec00104 	addi	sp,sp,4
   4e900:	f800283a 	ret

0004e904 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4e904:	defff304 	addi	sp,sp,-52
   4e908:	dfc00c15 	stw	ra,48(sp)
   4e90c:	df000b15 	stw	fp,44(sp)
   4e910:	df000b04 	addi	fp,sp,44
   4e914:	e13ff815 	stw	r4,-32(fp)
   4e918:	e17ff715 	stw	r5,-36(fp)
   4e91c:	e1bff615 	stw	r6,-40(fp)
   4e920:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   4e924:	e0bff717 	ldw	r2,-36(fp)
   4e928:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e92c:	00004706 	br	4ea4c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4e930:	e0bff817 	ldw	r2,-32(fp)
   4e934:	10800a17 	ldw	r2,40(r2)
   4e938:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   4e93c:	e0bff817 	ldw	r2,-32(fp)
   4e940:	10800b17 	ldw	r2,44(r2)
   4e944:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   4e948:	e0fffd17 	ldw	r3,-12(fp)
   4e94c:	e0bffc17 	ldw	r2,-16(fp)
   4e950:	18800536 	bltu	r3,r2,4e968 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4e954:	e0fffd17 	ldw	r3,-12(fp)
   4e958:	e0bffc17 	ldw	r2,-16(fp)
   4e95c:	1885c83a 	sub	r2,r3,r2
   4e960:	e0bffe15 	stw	r2,-8(fp)
   4e964:	00000406 	br	4e978 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4e968:	00c20004 	movi	r3,2048
   4e96c:	e0bffc17 	ldw	r2,-16(fp)
   4e970:	1885c83a 	sub	r2,r3,r2
   4e974:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   4e978:	e0bffe17 	ldw	r2,-8(fp)
   4e97c:	10001e26 	beq	r2,zero,4e9f8 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4e980:	e0fff617 	ldw	r3,-40(fp)
   4e984:	e0bffe17 	ldw	r2,-8(fp)
   4e988:	1880022e 	bgeu	r3,r2,4e994 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4e98c:	e0bff617 	ldw	r2,-40(fp)
   4e990:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4e994:	e0bff817 	ldw	r2,-32(fp)
   4e998:	10c00e04 	addi	r3,r2,56
   4e99c:	e0bffc17 	ldw	r2,-16(fp)
   4e9a0:	1885883a 	add	r2,r3,r2
   4e9a4:	e1bffe17 	ldw	r6,-8(fp)
   4e9a8:	100b883a 	mov	r5,r2
   4e9ac:	e13fff17 	ldw	r4,-4(fp)
   4e9b0:	0046cac0 	call	46cac <memcpy>
      ptr   += n;
   4e9b4:	e0ffff17 	ldw	r3,-4(fp)
   4e9b8:	e0bffe17 	ldw	r2,-8(fp)
   4e9bc:	1885883a 	add	r2,r3,r2
   4e9c0:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   4e9c4:	e0fff617 	ldw	r3,-40(fp)
   4e9c8:	e0bffe17 	ldw	r2,-8(fp)
   4e9cc:	1885c83a 	sub	r2,r3,r2
   4e9d0:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e9d4:	e0fffc17 	ldw	r3,-16(fp)
   4e9d8:	e0bffe17 	ldw	r2,-8(fp)
   4e9dc:	1885883a 	add	r2,r3,r2
   4e9e0:	10c1ffcc 	andi	r3,r2,2047
   4e9e4:	e0bff817 	ldw	r2,-32(fp)
   4e9e8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4e9ec:	e0bff617 	ldw	r2,-40(fp)
   4e9f0:	00bfcf16 	blt	zero,r2,4e930 <altera_avalon_jtag_uart_read+0x2c>
   4e9f4:	00000106 	br	4e9fc <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   4e9f8:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   4e9fc:	e0ffff17 	ldw	r3,-4(fp)
   4ea00:	e0bff717 	ldw	r2,-36(fp)
   4ea04:	1880141e 	bne	r3,r2,4ea58 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4ea08:	e0bff517 	ldw	r2,-44(fp)
   4ea0c:	1090000c 	andi	r2,r2,16384
   4ea10:	1000131e 	bne	r2,zero,4ea60 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4ea14:	0001883a 	nop
   4ea18:	e0bff817 	ldw	r2,-32(fp)
   4ea1c:	10800a17 	ldw	r2,40(r2)
   4ea20:	e0fffd17 	ldw	r3,-12(fp)
   4ea24:	1880051e 	bne	r3,r2,4ea3c <altera_avalon_jtag_uart_read+0x138>
   4ea28:	e0bff817 	ldw	r2,-32(fp)
   4ea2c:	10c00917 	ldw	r3,36(r2)
   4ea30:	e0bff817 	ldw	r2,-32(fp)
   4ea34:	10800117 	ldw	r2,4(r2)
   4ea38:	18bff736 	bltu	r3,r2,4ea18 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4ea3c:	e0bff817 	ldw	r2,-32(fp)
   4ea40:	10800a17 	ldw	r2,40(r2)
   4ea44:	e0fffd17 	ldw	r3,-12(fp)
   4ea48:	18800726 	beq	r3,r2,4ea68 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   4ea4c:	e0bff617 	ldw	r2,-40(fp)
   4ea50:	00bfb716 	blt	zero,r2,4e930 <altera_avalon_jtag_uart_read+0x2c>
   4ea54:	00000506 	br	4ea6c <altera_avalon_jtag_uart_read+0x168>
      break;
   4ea58:	0001883a 	nop
   4ea5c:	00000306 	br	4ea6c <altera_avalon_jtag_uart_read+0x168>
      break;
   4ea60:	0001883a 	nop
   4ea64:	00000106 	br	4ea6c <altera_avalon_jtag_uart_read+0x168>
      break;
   4ea68:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4ea6c:	e0ffff17 	ldw	r3,-4(fp)
   4ea70:	e0bff717 	ldw	r2,-36(fp)
   4ea74:	18801926 	beq	r3,r2,4eadc <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   4ea78:	0005303a 	rdctl	r2,status
   4ea7c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ea80:	e0fff917 	ldw	r3,-28(fp)
   4ea84:	00bfff84 	movi	r2,-2
   4ea88:	1884703a 	and	r2,r3,r2
   4ea8c:	1001703a 	wrctl	status,r2
  return context;
   4ea90:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4ea94:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4ea98:	e0bff817 	ldw	r2,-32(fp)
   4ea9c:	10800817 	ldw	r2,32(r2)
   4eaa0:	10c00054 	ori	r3,r2,1
   4eaa4:	e0bff817 	ldw	r2,-32(fp)
   4eaa8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4eaac:	e0bff817 	ldw	r2,-32(fp)
   4eab0:	10800017 	ldw	r2,0(r2)
   4eab4:	10800104 	addi	r2,r2,4
   4eab8:	1007883a 	mov	r3,r2
   4eabc:	e0bff817 	ldw	r2,-32(fp)
   4eac0:	10800817 	ldw	r2,32(r2)
   4eac4:	18800035 	stwio	r2,0(r3)
   4eac8:	e0bffb17 	ldw	r2,-20(fp)
   4eacc:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   4ead0:	e0bffa17 	ldw	r2,-24(fp)
   4ead4:	1001703a 	wrctl	status,r2
}
   4ead8:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4eadc:	e0ffff17 	ldw	r3,-4(fp)
   4eae0:	e0bff717 	ldw	r2,-36(fp)
   4eae4:	18800426 	beq	r3,r2,4eaf8 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   4eae8:	e0ffff17 	ldw	r3,-4(fp)
   4eaec:	e0bff717 	ldw	r2,-36(fp)
   4eaf0:	1885c83a 	sub	r2,r3,r2
   4eaf4:	00000606 	br	4eb10 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   4eaf8:	e0bff517 	ldw	r2,-44(fp)
   4eafc:	1090000c 	andi	r2,r2,16384
   4eb00:	10000226 	beq	r2,zero,4eb0c <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   4eb04:	00bffd44 	movi	r2,-11
   4eb08:	00000106 	br	4eb10 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   4eb0c:	00bffec4 	movi	r2,-5
}
   4eb10:	e037883a 	mov	sp,fp
   4eb14:	dfc00117 	ldw	ra,4(sp)
   4eb18:	df000017 	ldw	fp,0(sp)
   4eb1c:	dec00204 	addi	sp,sp,8
   4eb20:	f800283a 	ret

0004eb24 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4eb24:	defff304 	addi	sp,sp,-52
   4eb28:	dfc00c15 	stw	ra,48(sp)
   4eb2c:	df000b15 	stw	fp,44(sp)
   4eb30:	df000b04 	addi	fp,sp,44
   4eb34:	e13ff815 	stw	r4,-32(fp)
   4eb38:	e17ff715 	stw	r5,-36(fp)
   4eb3c:	e1bff615 	stw	r6,-40(fp)
   4eb40:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4eb44:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4eb48:	e0bff717 	ldw	r2,-36(fp)
   4eb4c:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4eb50:	00003706 	br	4ec30 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4eb54:	e0bff817 	ldw	r2,-32(fp)
   4eb58:	10800c17 	ldw	r2,48(r2)
   4eb5c:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   4eb60:	e0bff817 	ldw	r2,-32(fp)
   4eb64:	10800d17 	ldw	r2,52(r2)
   4eb68:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   4eb6c:	e0fffc17 	ldw	r3,-16(fp)
   4eb70:	e0bfff17 	ldw	r2,-4(fp)
   4eb74:	1880062e 	bgeu	r3,r2,4eb90 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4eb78:	e0ffff17 	ldw	r3,-4(fp)
   4eb7c:	e0bffc17 	ldw	r2,-16(fp)
   4eb80:	1885c83a 	sub	r2,r3,r2
   4eb84:	10bfffc4 	addi	r2,r2,-1
   4eb88:	e0bffe15 	stw	r2,-8(fp)
   4eb8c:	00000b06 	br	4ebbc <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4eb90:	e0bfff17 	ldw	r2,-4(fp)
   4eb94:	10000526 	beq	r2,zero,4ebac <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4eb98:	00c20004 	movi	r3,2048
   4eb9c:	e0bffc17 	ldw	r2,-16(fp)
   4eba0:	1885c83a 	sub	r2,r3,r2
   4eba4:	e0bffe15 	stw	r2,-8(fp)
   4eba8:	00000406 	br	4ebbc <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4ebac:	00c1ffc4 	movi	r3,2047
   4ebb0:	e0bffc17 	ldw	r2,-16(fp)
   4ebb4:	1885c83a 	sub	r2,r3,r2
   4ebb8:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   4ebbc:	e0bffe17 	ldw	r2,-8(fp)
   4ebc0:	10001e26 	beq	r2,zero,4ec3c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4ebc4:	e0fff617 	ldw	r3,-40(fp)
   4ebc8:	e0bffe17 	ldw	r2,-8(fp)
   4ebcc:	1880022e 	bgeu	r3,r2,4ebd8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4ebd0:	e0bff617 	ldw	r2,-40(fp)
   4ebd4:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4ebd8:	e0bff817 	ldw	r2,-32(fp)
   4ebdc:	10c20e04 	addi	r3,r2,2104
   4ebe0:	e0bffc17 	ldw	r2,-16(fp)
   4ebe4:	1885883a 	add	r2,r3,r2
   4ebe8:	e1bffe17 	ldw	r6,-8(fp)
   4ebec:	e17ff717 	ldw	r5,-36(fp)
   4ebf0:	1009883a 	mov	r4,r2
   4ebf4:	0046cac0 	call	46cac <memcpy>
      ptr   += n;
   4ebf8:	e0fff717 	ldw	r3,-36(fp)
   4ebfc:	e0bffe17 	ldw	r2,-8(fp)
   4ec00:	1885883a 	add	r2,r3,r2
   4ec04:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   4ec08:	e0fff617 	ldw	r3,-40(fp)
   4ec0c:	e0bffe17 	ldw	r2,-8(fp)
   4ec10:	1885c83a 	sub	r2,r3,r2
   4ec14:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4ec18:	e0fffc17 	ldw	r3,-16(fp)
   4ec1c:	e0bffe17 	ldw	r2,-8(fp)
   4ec20:	1885883a 	add	r2,r3,r2
   4ec24:	10c1ffcc 	andi	r3,r2,2047
   4ec28:	e0bff817 	ldw	r2,-32(fp)
   4ec2c:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   4ec30:	e0bff617 	ldw	r2,-40(fp)
   4ec34:	00bfc716 	blt	zero,r2,4eb54 <altera_avalon_jtag_uart_write+0x30>
   4ec38:	00000106 	br	4ec40 <altera_avalon_jtag_uart_write+0x11c>
        break;
   4ec3c:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   4ec40:	0005303a 	rdctl	r2,status
   4ec44:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ec48:	e0fff917 	ldw	r3,-28(fp)
   4ec4c:	00bfff84 	movi	r2,-2
   4ec50:	1884703a 	and	r2,r3,r2
   4ec54:	1001703a 	wrctl	status,r2
  return context;
   4ec58:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   4ec5c:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4ec60:	e0bff817 	ldw	r2,-32(fp)
   4ec64:	10800817 	ldw	r2,32(r2)
   4ec68:	10c00094 	ori	r3,r2,2
   4ec6c:	e0bff817 	ldw	r2,-32(fp)
   4ec70:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4ec74:	e0bff817 	ldw	r2,-32(fp)
   4ec78:	10800017 	ldw	r2,0(r2)
   4ec7c:	10800104 	addi	r2,r2,4
   4ec80:	1007883a 	mov	r3,r2
   4ec84:	e0bff817 	ldw	r2,-32(fp)
   4ec88:	10800817 	ldw	r2,32(r2)
   4ec8c:	18800035 	stwio	r2,0(r3)
   4ec90:	e0bffb17 	ldw	r2,-20(fp)
   4ec94:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   4ec98:	e0bffa17 	ldw	r2,-24(fp)
   4ec9c:	1001703a 	wrctl	status,r2
}
   4eca0:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   4eca4:	e0bff617 	ldw	r2,-40(fp)
   4eca8:	0080100e 	bge	zero,r2,4ecec <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   4ecac:	e0bff517 	ldw	r2,-44(fp)
   4ecb0:	1090000c 	andi	r2,r2,16384
   4ecb4:	1000101e 	bne	r2,zero,4ecf8 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   4ecb8:	0001883a 	nop
   4ecbc:	e0bff817 	ldw	r2,-32(fp)
   4ecc0:	10800d17 	ldw	r2,52(r2)
   4ecc4:	e0ffff17 	ldw	r3,-4(fp)
   4ecc8:	1880051e 	bne	r3,r2,4ece0 <altera_avalon_jtag_uart_write+0x1bc>
   4eccc:	e0bff817 	ldw	r2,-32(fp)
   4ecd0:	10c00917 	ldw	r3,36(r2)
   4ecd4:	e0bff817 	ldw	r2,-32(fp)
   4ecd8:	10800117 	ldw	r2,4(r2)
   4ecdc:	18bff736 	bltu	r3,r2,4ecbc <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   4ece0:	e0bff817 	ldw	r2,-32(fp)
   4ece4:	10800917 	ldw	r2,36(r2)
   4ece8:	1000051e 	bne	r2,zero,4ed00 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   4ecec:	e0bff617 	ldw	r2,-40(fp)
   4ecf0:	00bfcf16 	blt	zero,r2,4ec30 <altera_avalon_jtag_uart_write+0x10c>
   4ecf4:	00000306 	br	4ed04 <altera_avalon_jtag_uart_write+0x1e0>
        break;
   4ecf8:	0001883a 	nop
   4ecfc:	00000106 	br	4ed04 <altera_avalon_jtag_uart_write+0x1e0>
         break;
   4ed00:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   4ed04:	e0fff717 	ldw	r3,-36(fp)
   4ed08:	e0bffd17 	ldw	r2,-12(fp)
   4ed0c:	18800426 	beq	r3,r2,4ed20 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   4ed10:	e0fff717 	ldw	r3,-36(fp)
   4ed14:	e0bffd17 	ldw	r2,-12(fp)
   4ed18:	1885c83a 	sub	r2,r3,r2
   4ed1c:	00000606 	br	4ed38 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   4ed20:	e0bff517 	ldw	r2,-44(fp)
   4ed24:	1090000c 	andi	r2,r2,16384
   4ed28:	10000226 	beq	r2,zero,4ed34 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   4ed2c:	00bffd44 	movi	r2,-11
   4ed30:	00000106 	br	4ed38 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   4ed34:	00bffec4 	movi	r2,-5
}
   4ed38:	e037883a 	mov	sp,fp
   4ed3c:	dfc00117 	ldw	ra,4(sp)
   4ed40:	df000017 	ldw	fp,0(sp)
   4ed44:	dec00204 	addi	sp,sp,8
   4ed48:	f800283a 	ret

0004ed4c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   4ed4c:	defff404 	addi	sp,sp,-48
   4ed50:	df000b15 	stw	fp,44(sp)
   4ed54:	df000b04 	addi	fp,sp,44
   4ed58:	e13ff815 	stw	r4,-32(fp)
   4ed5c:	e17ff715 	stw	r5,-36(fp)
   4ed60:	e1bff615 	stw	r6,-40(fp)
   4ed64:	e1fff515 	stw	r7,-44(fp)
  alt_irq_context irq_context;
  alt_u64 current_nticks = 0;
   4ed68:	e03ffe15 	stw	zero,-8(fp)
   4ed6c:	e03fff15 	stw	zero,-4(fp)
   4ed70:	00800174 	movhi	r2,5
   4ed74:	108f8917 	ldw	r2,15908(r2)
  
  if (alt_ticks_per_second ())
   4ed78:	10004b26 	beq	r2,zero,4eea8 <alt_alarm_start+0x15c>
  {
    if (alarm)
   4ed7c:	e0bff817 	ldw	r2,-32(fp)
   4ed80:	10004726 	beq	r2,zero,4eea0 <alt_alarm_start+0x154>
    {
      alarm->callback = callback;
   4ed84:	e0bff817 	ldw	r2,-32(fp)
   4ed88:	e0fff617 	ldw	r3,-40(fp)
   4ed8c:	10c00415 	stw	r3,16(r2)
      alarm->context  = context;
   4ed90:	e0bff817 	ldw	r2,-32(fp)
   4ed94:	e0fff517 	ldw	r3,-44(fp)
   4ed98:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   4ed9c:	0005303a 	rdctl	r2,status
   4eda0:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4eda4:	e0fff917 	ldw	r3,-28(fp)
   4eda8:	00bfff84 	movi	r2,-2
   4edac:	1884703a 	and	r2,r3,r2
   4edb0:	1001703a 	wrctl	status,r2
  return context;
   4edb4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   4edb8:	e0bffd15 	stw	r2,-12(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u64 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   4edbc:	01000174 	movhi	r4,5
   4edc0:	208f8a17 	ldw	r2,15912(r4)
   4edc4:	01000174 	movhi	r4,5
   4edc8:	20cf8b17 	ldw	r3,15916(r4)
      
      current_nticks = alt_nticks();
   4edcc:	e0bffe15 	stw	r2,-8(fp)
   4edd0:	e0ffff15 	stw	r3,-4(fp)
      
      alarm->time = (alt_u64)nticks + current_nticks + 1; 
   4edd4:	e0bff717 	ldw	r2,-36(fp)
   4edd8:	1011883a 	mov	r8,r2
   4eddc:	0013883a 	mov	r9,zero
   4ede0:	e13ffe17 	ldw	r4,-8(fp)
   4ede4:	e17fff17 	ldw	r5,-4(fp)
   4ede8:	4105883a 	add	r2,r8,r4
   4edec:	120d803a 	cmpltu	r6,r2,r8
   4edf0:	4947883a 	add	r3,r9,r5
   4edf4:	30c9883a 	add	r4,r6,r3
   4edf8:	2007883a 	mov	r3,r4
   4edfc:	1009883a 	mov	r4,r2
   4ee00:	180b883a 	mov	r5,r3
   4ee04:	01800044 	movi	r6,1
   4ee08:	000f883a 	mov	r7,zero
   4ee0c:	2185883a 	add	r2,r4,r6
   4ee10:	1111803a 	cmpltu	r8,r2,r4
   4ee14:	29c7883a 	add	r3,r5,r7
   4ee18:	40c9883a 	add	r4,r8,r3
   4ee1c:	2007883a 	mov	r3,r4
   4ee20:	1009883a 	mov	r4,r2
   4ee24:	180b883a 	mov	r5,r3
   4ee28:	e0bff817 	ldw	r2,-32(fp)
   4ee2c:	11000215 	stw	r4,8(r2)
   4ee30:	11400315 	stw	r5,12(r2)
          
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   4ee34:	e0fff817 	ldw	r3,-32(fp)
   4ee38:	00800174 	movhi	r2,5
   4ee3c:	10888804 	addi	r2,r2,8736
   4ee40:	e0bffb15 	stw	r2,-20(fp)
   4ee44:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4ee48:	e0bffa17 	ldw	r2,-24(fp)
   4ee4c:	e0fffb17 	ldw	r3,-20(fp)
   4ee50:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4ee54:	e0bffb17 	ldw	r2,-20(fp)
   4ee58:	10c00017 	ldw	r3,0(r2)
   4ee5c:	e0bffa17 	ldw	r2,-24(fp)
   4ee60:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4ee64:	e0bffb17 	ldw	r2,-20(fp)
   4ee68:	10800017 	ldw	r2,0(r2)
   4ee6c:	e0fffa17 	ldw	r3,-24(fp)
   4ee70:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4ee74:	e0bffb17 	ldw	r2,-20(fp)
   4ee78:	e0fffa17 	ldw	r3,-24(fp)
   4ee7c:	10c00015 	stw	r3,0(r2)
}
   4ee80:	0001883a 	nop
   4ee84:	e0bffd17 	ldw	r2,-12(fp)
   4ee88:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4ee8c:	e0bffc17 	ldw	r2,-16(fp)
   4ee90:	1001703a 	wrctl	status,r2
}
   4ee94:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   4ee98:	0005883a 	mov	r2,zero
   4ee9c:	00000306 	br	4eeac <alt_alarm_start+0x160>
    }
    else
    {
      return -EINVAL;
   4eea0:	00bffa84 	movi	r2,-22
   4eea4:	00000106 	br	4eeac <alt_alarm_start+0x160>
    }
  }
  else
  {
    return -ENOTSUP;
   4eea8:	00bfde84 	movi	r2,-134
  }
}
   4eeac:	e037883a 	mov	sp,fp
   4eeb0:	df000017 	ldw	fp,0(sp)
   4eeb4:	dec00104 	addi	sp,sp,4
   4eeb8:	f800283a 	ret

0004eebc <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   4eebc:	defffa04 	addi	sp,sp,-24
   4eec0:	dfc00515 	stw	ra,20(sp)
   4eec4:	df000415 	stw	fp,16(sp)
   4eec8:	df000404 	addi	fp,sp,16
   4eecc:	e13ffc15 	stw	r4,-16(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   4eed0:	008000c4 	movi	r2,3
   4eed4:	e0bffe15 	stw	r2,-8(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   4eed8:	e0fffe17 	ldw	r3,-8(fp)
   4eedc:	008003f4 	movhi	r2,15
   4eee0:	10909004 	addi	r2,r2,16960
   4eee4:	1885383a 	mul	r2,r3,r2
   4eee8:	100b883a 	mov	r5,r2
   4eeec:	01017db4 	movhi	r4,1526
   4eef0:	21384004 	addi	r4,r4,-7936
   4eef4:	0040f0c0 	call	40f0c <__udivsi3>
  big_loops = us / (INT_MAX/
   4eef8:	100b883a 	mov	r5,r2
   4eefc:	01200034 	movhi	r4,32768
   4ef00:	213fffc4 	addi	r4,r4,-1
   4ef04:	0040f0c0 	call	40f0c <__udivsi3>
   4ef08:	100b883a 	mov	r5,r2
   4ef0c:	e13ffc17 	ldw	r4,-16(fp)
   4ef10:	0040f0c0 	call	40f0c <__udivsi3>
   4ef14:	e0bffd15 	stw	r2,-12(fp)

  if (big_loops)
   4ef18:	e0bffd17 	ldw	r2,-12(fp)
   4ef1c:	10002a26 	beq	r2,zero,4efc8 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   4ef20:	e03fff15 	stw	zero,-4(fp)
   4ef24:	00001706 	br	4ef84 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   4ef28:	00a00034 	movhi	r2,32768
   4ef2c:	10bfffc4 	addi	r2,r2,-1
   4ef30:	10bfffc4 	addi	r2,r2,-1
   4ef34:	103ffe1e 	bne	r2,zero,4ef30 <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   4ef38:	e0fffe17 	ldw	r3,-8(fp)
   4ef3c:	008003f4 	movhi	r2,15
   4ef40:	10909004 	addi	r2,r2,16960
   4ef44:	1885383a 	mul	r2,r3,r2
      us -= (INT_MAX/(ALT_CPU_FREQ/
   4ef48:	100b883a 	mov	r5,r2
   4ef4c:	01017db4 	movhi	r4,1526
   4ef50:	21384004 	addi	r4,r4,-7936
   4ef54:	0040f0c0 	call	40f0c <__udivsi3>
   4ef58:	100b883a 	mov	r5,r2
   4ef5c:	01200034 	movhi	r4,32768
   4ef60:	213fffc4 	addi	r4,r4,-1
   4ef64:	0040f0c0 	call	40f0c <__udivsi3>
   4ef68:	1007883a 	mov	r3,r2
   4ef6c:	e0bffc17 	ldw	r2,-16(fp)
   4ef70:	10c5c83a 	sub	r2,r2,r3
   4ef74:	e0bffc15 	stw	r2,-16(fp)
    for(i=0;i<big_loops;i++)
   4ef78:	e0bfff17 	ldw	r2,-4(fp)
   4ef7c:	10800044 	addi	r2,r2,1
   4ef80:	e0bfff15 	stw	r2,-4(fp)
   4ef84:	e0ffff17 	ldw	r3,-4(fp)
   4ef88:	e0bffd17 	ldw	r2,-12(fp)
   4ef8c:	18bfe616 	blt	r3,r2,4ef28 <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4ef90:	e0fffe17 	ldw	r3,-8(fp)
   4ef94:	008003f4 	movhi	r2,15
   4ef98:	10909004 	addi	r2,r2,16960
   4ef9c:	1885383a 	mul	r2,r3,r2
   4efa0:	100b883a 	mov	r5,r2
   4efa4:	01017db4 	movhi	r4,1526
   4efa8:	21384004 	addi	r4,r4,-7936
   4efac:	0040f0c0 	call	40f0c <__udivsi3>
   4efb0:	1007883a 	mov	r3,r2
   4efb4:	e0bffc17 	ldw	r2,-16(fp)
   4efb8:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
   4efbc:	10bfffc4 	addi	r2,r2,-1
   4efc0:	103ffe1e 	bne	r2,zero,4efbc <alt_busy_sleep+0x100>
   4efc4:	00000d06 	br	4effc <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4efc8:	e0fffe17 	ldw	r3,-8(fp)
   4efcc:	008003f4 	movhi	r2,15
   4efd0:	10909004 	addi	r2,r2,16960
   4efd4:	1885383a 	mul	r2,r3,r2
   4efd8:	100b883a 	mov	r5,r2
   4efdc:	01017db4 	movhi	r4,1526
   4efe0:	21384004 	addi	r4,r4,-7936
   4efe4:	0040f0c0 	call	40f0c <__udivsi3>
   4efe8:	1007883a 	mov	r3,r2
   4efec:	e0bffc17 	ldw	r2,-16(fp)
   4eff0:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
   4eff4:	10bfffc4 	addi	r2,r2,-1
   4eff8:	00bffe16 	blt	zero,r2,4eff4 <alt_busy_sleep+0x138>
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   4effc:	0005883a 	mov	r2,zero
}
   4f000:	e037883a 	mov	sp,fp
   4f004:	dfc00117 	ldw	ra,4(sp)
   4f008:	df000017 	ldw	fp,0(sp)
   4f00c:	dec00204 	addi	sp,sp,8
   4f010:	f800283a 	ret

0004f014 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   4f014:	defffe04 	addi	sp,sp,-8
   4f018:	df000115 	stw	fp,4(sp)
   4f01c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4f020:	e03fff15 	stw	zero,-4(fp)
   4f024:	00000506 	br	4f03c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   4f028:	e0bfff17 	ldw	r2,-4(fp)
   4f02c:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4f030:	e0bfff17 	ldw	r2,-4(fp)
   4f034:	10800804 	addi	r2,r2,32
   4f038:	e0bfff15 	stw	r2,-4(fp)
   4f03c:	e0bfff17 	ldw	r2,-4(fp)
   4f040:	10820030 	cmpltui	r2,r2,2048
   4f044:	103ff81e 	bne	r2,zero,4f028 <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   4f048:	0001883a 	nop
   4f04c:	0001883a 	nop
   4f050:	e037883a 	mov	sp,fp
   4f054:	df000017 	ldw	fp,0(sp)
   4f058:	dec00104 	addi	sp,sp,4
   4f05c:	f800283a 	ret

0004f060 <alt_get_errno>:
{
   4f060:	defffe04 	addi	sp,sp,-8
   4f064:	dfc00115 	stw	ra,4(sp)
   4f068:	df000015 	stw	fp,0(sp)
   4f06c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4f070:	00800174 	movhi	r2,5
   4f074:	10888517 	ldw	r2,8724(r2)
   4f078:	10000426 	beq	r2,zero,4f08c <alt_get_errno+0x2c>
   4f07c:	00800174 	movhi	r2,5
   4f080:	10888517 	ldw	r2,8724(r2)
   4f084:	103ee83a 	callr	r2
   4f088:	00000206 	br	4f094 <alt_get_errno+0x34>
   4f08c:	00800174 	movhi	r2,5
   4f090:	108f8304 	addi	r2,r2,15884
}
   4f094:	e037883a 	mov	sp,fp
   4f098:	dfc00117 	ldw	ra,4(sp)
   4f09c:	df000017 	ldw	fp,0(sp)
   4f0a0:	dec00204 	addi	sp,sp,8
   4f0a4:	f800283a 	ret

0004f0a8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   4f0a8:	defffa04 	addi	sp,sp,-24
   4f0ac:	dfc00515 	stw	ra,20(sp)
   4f0b0:	df000415 	stw	fp,16(sp)
   4f0b4:	df000404 	addi	fp,sp,16
   4f0b8:	e13ffd15 	stw	r4,-12(fp)
   4f0bc:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   4f0c0:	e0bffd17 	ldw	r2,-12(fp)
   4f0c4:	10000326 	beq	r2,zero,4f0d4 <alt_dev_llist_insert+0x2c>
   4f0c8:	e0bffd17 	ldw	r2,-12(fp)
   4f0cc:	10800217 	ldw	r2,8(r2)
   4f0d0:	1000061e 	bne	r2,zero,4f0ec <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   4f0d4:	004f0600 	call	4f060 <alt_get_errno>
   4f0d8:	1007883a 	mov	r3,r2
   4f0dc:	00800584 	movi	r2,22
   4f0e0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   4f0e4:	00bffa84 	movi	r2,-22
   4f0e8:	00001406 	br	4f13c <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   4f0ec:	e0bffd17 	ldw	r2,-12(fp)
   4f0f0:	e0fffc17 	ldw	r3,-16(fp)
   4f0f4:	e0ffff15 	stw	r3,-4(fp)
   4f0f8:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   4f0fc:	e0bffe17 	ldw	r2,-8(fp)
   4f100:	e0ffff17 	ldw	r3,-4(fp)
   4f104:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4f108:	e0bfff17 	ldw	r2,-4(fp)
   4f10c:	10c00017 	ldw	r3,0(r2)
   4f110:	e0bffe17 	ldw	r2,-8(fp)
   4f114:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   4f118:	e0bfff17 	ldw	r2,-4(fp)
   4f11c:	10800017 	ldw	r2,0(r2)
   4f120:	e0fffe17 	ldw	r3,-8(fp)
   4f124:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4f128:	e0bfff17 	ldw	r2,-4(fp)
   4f12c:	e0fffe17 	ldw	r3,-8(fp)
   4f130:	10c00015 	stw	r3,0(r2)
}
   4f134:	0001883a 	nop

  return 0;  
   4f138:	0005883a 	mov	r2,zero
}
   4f13c:	e037883a 	mov	sp,fp
   4f140:	dfc00117 	ldw	ra,4(sp)
   4f144:	df000017 	ldw	fp,0(sp)
   4f148:	dec00204 	addi	sp,sp,8
   4f14c:	f800283a 	ret

0004f150 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   4f150:	defffd04 	addi	sp,sp,-12
   4f154:	dfc00215 	stw	ra,8(sp)
   4f158:	df000115 	stw	fp,4(sp)
   4f15c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4f160:	00800174 	movhi	r2,5
   4f164:	10bfef04 	addi	r2,r2,-68
   4f168:	e0bfff15 	stw	r2,-4(fp)
   4f16c:	00000606 	br	4f188 <_do_ctors+0x38>
        (*ctor) (); 
   4f170:	e0bfff17 	ldw	r2,-4(fp)
   4f174:	10800017 	ldw	r2,0(r2)
   4f178:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4f17c:	e0bfff17 	ldw	r2,-4(fp)
   4f180:	10bfff04 	addi	r2,r2,-4
   4f184:	e0bfff15 	stw	r2,-4(fp)
   4f188:	e0ffff17 	ldw	r3,-4(fp)
   4f18c:	00800174 	movhi	r2,5
   4f190:	10bff004 	addi	r2,r2,-64
   4f194:	18bff62e 	bgeu	r3,r2,4f170 <_do_ctors+0x20>
}
   4f198:	0001883a 	nop
   4f19c:	0001883a 	nop
   4f1a0:	e037883a 	mov	sp,fp
   4f1a4:	dfc00117 	ldw	ra,4(sp)
   4f1a8:	df000017 	ldw	fp,0(sp)
   4f1ac:	dec00204 	addi	sp,sp,8
   4f1b0:	f800283a 	ret

0004f1b4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   4f1b4:	defffd04 	addi	sp,sp,-12
   4f1b8:	dfc00215 	stw	ra,8(sp)
   4f1bc:	df000115 	stw	fp,4(sp)
   4f1c0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4f1c4:	00800174 	movhi	r2,5
   4f1c8:	10bfef04 	addi	r2,r2,-68
   4f1cc:	e0bfff15 	stw	r2,-4(fp)
   4f1d0:	00000606 	br	4f1ec <_do_dtors+0x38>
        (*dtor) (); 
   4f1d4:	e0bfff17 	ldw	r2,-4(fp)
   4f1d8:	10800017 	ldw	r2,0(r2)
   4f1dc:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4f1e0:	e0bfff17 	ldw	r2,-4(fp)
   4f1e4:	10bfff04 	addi	r2,r2,-4
   4f1e8:	e0bfff15 	stw	r2,-4(fp)
   4f1ec:	e0ffff17 	ldw	r3,-4(fp)
   4f1f0:	00800174 	movhi	r2,5
   4f1f4:	10bff004 	addi	r2,r2,-64
   4f1f8:	18bff62e 	bgeu	r3,r2,4f1d4 <_do_dtors+0x20>
}
   4f1fc:	0001883a 	nop
   4f200:	0001883a 	nop
   4f204:	e037883a 	mov	sp,fp
   4f208:	dfc00117 	ldw	ra,4(sp)
   4f20c:	df000017 	ldw	fp,0(sp)
   4f210:	dec00204 	addi	sp,sp,8
   4f214:	f800283a 	ret

0004f218 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   4f218:	defffe04 	addi	sp,sp,-8
   4f21c:	dfc00115 	stw	ra,4(sp)
   4f220:	df000015 	stw	fp,0(sp)
   4f224:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   4f228:	01440004 	movi	r5,4096
   4f22c:	0009883a 	mov	r4,zero
   4f230:	004fcc00 	call	4fcc0 <alt_icache_flush>
#endif
}
   4f234:	0001883a 	nop
   4f238:	e037883a 	mov	sp,fp
   4f23c:	dfc00117 	ldw	ra,4(sp)
   4f240:	df000017 	ldw	fp,0(sp)
   4f244:	dec00204 	addi	sp,sp,8
   4f248:	f800283a 	ret

0004f24c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4f24c:	defff904 	addi	sp,sp,-28
   4f250:	dfc00615 	stw	ra,24(sp)
   4f254:	df000515 	stw	fp,20(sp)
   4f258:	df000504 	addi	fp,sp,20
   4f25c:	e13fff15 	stw	r4,-4(fp)
   4f260:	e17ffe15 	stw	r5,-8(fp)
   4f264:	e1bffd15 	stw	r6,-12(fp)
   4f268:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   4f26c:	e0800217 	ldw	r2,8(fp)
   4f270:	d8800015 	stw	r2,0(sp)
   4f274:	e1fffc17 	ldw	r7,-16(fp)
   4f278:	e1bffd17 	ldw	r6,-12(fp)
   4f27c:	e17ffe17 	ldw	r5,-8(fp)
   4f280:	e13fff17 	ldw	r4,-4(fp)
   4f284:	004f4140 	call	4f414 <alt_iic_isr_register>
}  
   4f288:	e037883a 	mov	sp,fp
   4f28c:	dfc00117 	ldw	ra,4(sp)
   4f290:	df000017 	ldw	fp,0(sp)
   4f294:	dec00204 	addi	sp,sp,8
   4f298:	f800283a 	ret

0004f29c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   4f29c:	defff904 	addi	sp,sp,-28
   4f2a0:	df000615 	stw	fp,24(sp)
   4f2a4:	df000604 	addi	fp,sp,24
   4f2a8:	e13ffb15 	stw	r4,-20(fp)
   4f2ac:	e17ffa15 	stw	r5,-24(fp)
   4f2b0:	e0bffa17 	ldw	r2,-24(fp)
   4f2b4:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
   4f2b8:	0005303a 	rdctl	r2,status
   4f2bc:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f2c0:	e0fffe17 	ldw	r3,-8(fp)
   4f2c4:	00bfff84 	movi	r2,-2
   4f2c8:	1884703a 	and	r2,r3,r2
   4f2cc:	1001703a 	wrctl	status,r2
  return context;
   4f2d0:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4f2d4:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
   4f2d8:	00c00044 	movi	r3,1
   4f2dc:	e0bfff17 	ldw	r2,-4(fp)
   4f2e0:	1884983a 	sll	r2,r3,r2
   4f2e4:	1007883a 	mov	r3,r2
   4f2e8:	00800174 	movhi	r2,5
   4f2ec:	108f8817 	ldw	r2,15904(r2)
   4f2f0:	1886b03a 	or	r3,r3,r2
   4f2f4:	00800174 	movhi	r2,5
   4f2f8:	10cf8815 	stw	r3,15904(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4f2fc:	00800174 	movhi	r2,5
   4f300:	108f8817 	ldw	r2,15904(r2)
   4f304:	100170fa 	wrctl	ienable,r2
   4f308:	e0bffd17 	ldw	r2,-12(fp)
   4f30c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4f310:	e0bffc17 	ldw	r2,-16(fp)
   4f314:	1001703a 	wrctl	status,r2
}
   4f318:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   4f31c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
   4f320:	e037883a 	mov	sp,fp
   4f324:	df000017 	ldw	fp,0(sp)
   4f328:	dec00104 	addi	sp,sp,4
   4f32c:	f800283a 	ret

0004f330 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   4f330:	defff904 	addi	sp,sp,-28
   4f334:	df000615 	stw	fp,24(sp)
   4f338:	df000604 	addi	fp,sp,24
   4f33c:	e13ffb15 	stw	r4,-20(fp)
   4f340:	e17ffa15 	stw	r5,-24(fp)
   4f344:	e0bffa17 	ldw	r2,-24(fp)
   4f348:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
   4f34c:	0005303a 	rdctl	r2,status
   4f350:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f354:	e0fffe17 	ldw	r3,-8(fp)
   4f358:	00bfff84 	movi	r2,-2
   4f35c:	1884703a 	and	r2,r3,r2
   4f360:	1001703a 	wrctl	status,r2
  return context;
   4f364:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
   4f368:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
   4f36c:	00c00044 	movi	r3,1
   4f370:	e0bfff17 	ldw	r2,-4(fp)
   4f374:	1884983a 	sll	r2,r3,r2
   4f378:	0084303a 	nor	r2,zero,r2
   4f37c:	1007883a 	mov	r3,r2
   4f380:	00800174 	movhi	r2,5
   4f384:	108f8817 	ldw	r2,15904(r2)
   4f388:	1886703a 	and	r3,r3,r2
   4f38c:	00800174 	movhi	r2,5
   4f390:	10cf8815 	stw	r3,15904(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4f394:	00800174 	movhi	r2,5
   4f398:	108f8817 	ldw	r2,15904(r2)
   4f39c:	100170fa 	wrctl	ienable,r2
   4f3a0:	e0bffd17 	ldw	r2,-12(fp)
   4f3a4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   4f3a8:	e0bffc17 	ldw	r2,-16(fp)
   4f3ac:	1001703a 	wrctl	status,r2
}
   4f3b0:	0001883a 	nop
  return 0;
   4f3b4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
   4f3b8:	e037883a 	mov	sp,fp
   4f3bc:	df000017 	ldw	fp,0(sp)
   4f3c0:	dec00104 	addi	sp,sp,4
   4f3c4:	f800283a 	ret

0004f3c8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   4f3c8:	defffc04 	addi	sp,sp,-16
   4f3cc:	df000315 	stw	fp,12(sp)
   4f3d0:	df000304 	addi	fp,sp,12
   4f3d4:	e13ffe15 	stw	r4,-8(fp)
   4f3d8:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   4f3dc:	000530fa 	rdctl	r2,ienable
   4f3e0:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   4f3e4:	00c00044 	movi	r3,1
   4f3e8:	e0bffd17 	ldw	r2,-12(fp)
   4f3ec:	1884983a 	sll	r2,r3,r2
   4f3f0:	1007883a 	mov	r3,r2
   4f3f4:	e0bfff17 	ldw	r2,-4(fp)
   4f3f8:	1884703a 	and	r2,r3,r2
   4f3fc:	1004c03a 	cmpne	r2,r2,zero
   4f400:	10803fcc 	andi	r2,r2,255
}
   4f404:	e037883a 	mov	sp,fp
   4f408:	df000017 	ldw	fp,0(sp)
   4f40c:	dec00104 	addi	sp,sp,4
   4f410:	f800283a 	ret

0004f414 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4f414:	defff504 	addi	sp,sp,-44
   4f418:	dfc00a15 	stw	ra,40(sp)
   4f41c:	df000915 	stw	fp,36(sp)
   4f420:	df000904 	addi	fp,sp,36
   4f424:	e13ffa15 	stw	r4,-24(fp)
   4f428:	e17ff915 	stw	r5,-28(fp)
   4f42c:	e1bff815 	stw	r6,-32(fp)
   4f430:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
   4f434:	00bffa84 	movi	r2,-22
   4f438:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   4f43c:	e0bff917 	ldw	r2,-28(fp)
   4f440:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   4f444:	e0bffe17 	ldw	r2,-8(fp)
   4f448:	10800808 	cmpgei	r2,r2,32
   4f44c:	1000251e 	bne	r2,zero,4f4e4 <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
   4f450:	0005303a 	rdctl	r2,status
   4f454:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f458:	e0fffc17 	ldw	r3,-16(fp)
   4f45c:	00bfff84 	movi	r2,-2
   4f460:	1884703a 	and	r2,r3,r2
   4f464:	1001703a 	wrctl	status,r2
  return context;
   4f468:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   4f46c:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
   4f470:	e0bffe17 	ldw	r2,-8(fp)
   4f474:	100890fa 	slli	r4,r2,3
   4f478:	e0fff817 	ldw	r3,-32(fp)
   4f47c:	00800174 	movhi	r2,5
   4f480:	2085883a 	add	r2,r4,r2
   4f484:	10cf9615 	stw	r3,15960(r2)
    alt_irq[id].context = isr_context;
   4f488:	e0bffe17 	ldw	r2,-8(fp)
   4f48c:	100890fa 	slli	r4,r2,3
   4f490:	e0fff717 	ldw	r3,-36(fp)
   4f494:	00800174 	movhi	r2,5
   4f498:	2085883a 	add	r2,r4,r2
   4f49c:	10cf9715 	stw	r3,15964(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   4f4a0:	e0bff817 	ldw	r2,-32(fp)
   4f4a4:	10000526 	beq	r2,zero,4f4bc <alt_iic_isr_register+0xa8>
   4f4a8:	e0bffe17 	ldw	r2,-8(fp)
   4f4ac:	100b883a 	mov	r5,r2
   4f4b0:	e13ffa17 	ldw	r4,-24(fp)
   4f4b4:	004f29c0 	call	4f29c <alt_ic_irq_enable>
   4f4b8:	00000406 	br	4f4cc <alt_iic_isr_register+0xb8>
   4f4bc:	e0bffe17 	ldw	r2,-8(fp)
   4f4c0:	100b883a 	mov	r5,r2
   4f4c4:	e13ffa17 	ldw	r4,-24(fp)
   4f4c8:	004f3300 	call	4f330 <alt_ic_irq_disable>
   4f4cc:	e0bfff15 	stw	r2,-4(fp)
   4f4d0:	e0bffd17 	ldw	r2,-12(fp)
   4f4d4:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   4f4d8:	e0bffb17 	ldw	r2,-20(fp)
   4f4dc:	1001703a 	wrctl	status,r2
}
   4f4e0:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
   4f4e4:	e0bfff17 	ldw	r2,-4(fp)
}
   4f4e8:	e037883a 	mov	sp,fp
   4f4ec:	dfc00117 	ldw	ra,4(sp)
   4f4f0:	df000017 	ldw	fp,0(sp)
   4f4f4:	dec00204 	addi	sp,sp,8
   4f4f8:	f800283a 	ret

0004f4fc <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   4f4fc:	defff904 	addi	sp,sp,-28
   4f500:	dfc00615 	stw	ra,24(sp)
   4f504:	df000515 	stw	fp,20(sp)
   4f508:	df000504 	addi	fp,sp,20
   4f50c:	e13ffe15 	stw	r4,-8(fp)
   4f510:	e17ffd15 	stw	r5,-12(fp)
   4f514:	e1bffc15 	stw	r6,-16(fp)
   4f518:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   4f51c:	e1bffb17 	ldw	r6,-20(fp)
   4f520:	e17ffc17 	ldw	r5,-16(fp)
   4f524:	e13ffd17 	ldw	r4,-12(fp)
   4f528:	004f72c0 	call	4f72c <open>
   4f52c:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   4f530:	e0bfff17 	ldw	r2,-4(fp)
   4f534:	10001716 	blt	r2,zero,4f594 <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
   4f538:	e0bfff17 	ldw	r2,-4(fp)
   4f53c:	10c00324 	muli	r3,r2,12
   4f540:	00800174 	movhi	r2,5
   4f544:	1885883a 	add	r2,r3,r2
   4f548:	10c40417 	ldw	r3,4112(r2)
   4f54c:	e0bffe17 	ldw	r2,-8(fp)
   4f550:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   4f554:	e0bfff17 	ldw	r2,-4(fp)
   4f558:	10c00324 	muli	r3,r2,12
   4f55c:	00800174 	movhi	r2,5
   4f560:	1885883a 	add	r2,r3,r2
   4f564:	10c40517 	ldw	r3,4116(r2)
   4f568:	e0bffe17 	ldw	r2,-8(fp)
   4f56c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   4f570:	e0bfff17 	ldw	r2,-4(fp)
   4f574:	10c00324 	muli	r3,r2,12
   4f578:	00800174 	movhi	r2,5
   4f57c:	1885883a 	add	r2,r3,r2
   4f580:	10c40617 	ldw	r3,4120(r2)
   4f584:	e0bffe17 	ldw	r2,-8(fp)
   4f588:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   4f58c:	e13fff17 	ldw	r4,-4(fp)
   4f590:	004df800 	call	4df80 <alt_release_fd>
  }
} 
   4f594:	0001883a 	nop
   4f598:	e037883a 	mov	sp,fp
   4f59c:	dfc00117 	ldw	ra,4(sp)
   4f5a0:	df000017 	ldw	fp,0(sp)
   4f5a4:	dec00204 	addi	sp,sp,8
   4f5a8:	f800283a 	ret

0004f5ac <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   4f5ac:	defffb04 	addi	sp,sp,-20
   4f5b0:	dfc00415 	stw	ra,16(sp)
   4f5b4:	df000315 	stw	fp,12(sp)
   4f5b8:	df000304 	addi	fp,sp,12
   4f5bc:	e13fff15 	stw	r4,-4(fp)
   4f5c0:	e17ffe15 	stw	r5,-8(fp)
   4f5c4:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   4f5c8:	01c07fc4 	movi	r7,511
   4f5cc:	01800044 	movi	r6,1
   4f5d0:	e17fff17 	ldw	r5,-4(fp)
   4f5d4:	01000174 	movhi	r4,5
   4f5d8:	21040704 	addi	r4,r4,4124
   4f5dc:	004f4fc0 	call	4f4fc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   4f5e0:	01c07fc4 	movi	r7,511
   4f5e4:	000d883a 	mov	r6,zero
   4f5e8:	e17ffe17 	ldw	r5,-8(fp)
   4f5ec:	01000174 	movhi	r4,5
   4f5f0:	21040404 	addi	r4,r4,4112
   4f5f4:	004f4fc0 	call	4f4fc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   4f5f8:	01c07fc4 	movi	r7,511
   4f5fc:	01800044 	movi	r6,1
   4f600:	e17ffd17 	ldw	r5,-12(fp)
   4f604:	01000174 	movhi	r4,5
   4f608:	21040a04 	addi	r4,r4,4136
   4f60c:	004f4fc0 	call	4f4fc <alt_open_fd>
}  
   4f610:	0001883a 	nop
   4f614:	e037883a 	mov	sp,fp
   4f618:	dfc00117 	ldw	ra,4(sp)
   4f61c:	df000017 	ldw	fp,0(sp)
   4f620:	dec00204 	addi	sp,sp,8
   4f624:	f800283a 	ret

0004f628 <alt_get_errno>:
{
   4f628:	defffe04 	addi	sp,sp,-8
   4f62c:	dfc00115 	stw	ra,4(sp)
   4f630:	df000015 	stw	fp,0(sp)
   4f634:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4f638:	00800174 	movhi	r2,5
   4f63c:	10888517 	ldw	r2,8724(r2)
   4f640:	10000426 	beq	r2,zero,4f654 <alt_get_errno+0x2c>
   4f644:	00800174 	movhi	r2,5
   4f648:	10888517 	ldw	r2,8724(r2)
   4f64c:	103ee83a 	callr	r2
   4f650:	00000206 	br	4f65c <alt_get_errno+0x34>
   4f654:	00800174 	movhi	r2,5
   4f658:	108f8304 	addi	r2,r2,15884
}
   4f65c:	e037883a 	mov	sp,fp
   4f660:	dfc00117 	ldw	ra,4(sp)
   4f664:	df000017 	ldw	fp,0(sp)
   4f668:	dec00204 	addi	sp,sp,8
   4f66c:	f800283a 	ret

0004f670 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   4f670:	defffd04 	addi	sp,sp,-12
   4f674:	df000215 	stw	fp,8(sp)
   4f678:	df000204 	addi	fp,sp,8
   4f67c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   4f680:	e0bffe17 	ldw	r2,-8(fp)
   4f684:	10800217 	ldw	r2,8(r2)
   4f688:	10d00034 	orhi	r3,r2,16384
   4f68c:	e0bffe17 	ldw	r2,-8(fp)
   4f690:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4f694:	e03fff15 	stw	zero,-4(fp)
   4f698:	00001a06 	br	4f704 <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4f69c:	e0bfff17 	ldw	r2,-4(fp)
   4f6a0:	10c00324 	muli	r3,r2,12
   4f6a4:	00800174 	movhi	r2,5
   4f6a8:	1885883a 	add	r2,r3,r2
   4f6ac:	10c40417 	ldw	r3,4112(r2)
   4f6b0:	e0bffe17 	ldw	r2,-8(fp)
   4f6b4:	10800017 	ldw	r2,0(r2)
   4f6b8:	18800f1e 	bne	r3,r2,4f6f8 <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4f6bc:	e0bfff17 	ldw	r2,-4(fp)
   4f6c0:	10c00324 	muli	r3,r2,12
   4f6c4:	00800174 	movhi	r2,5
   4f6c8:	1885883a 	add	r2,r3,r2
   4f6cc:	10840617 	ldw	r2,4120(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
   4f6d0:	1000090e 	bge	r2,zero,4f6f8 <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
   4f6d4:	e0bfff17 	ldw	r2,-4(fp)
   4f6d8:	10c00324 	muli	r3,r2,12
   4f6dc:	00800174 	movhi	r2,5
   4f6e0:	10840404 	addi	r2,r2,4112
   4f6e4:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4f6e8:	e0fffe17 	ldw	r3,-8(fp)
   4f6ec:	18800226 	beq	r3,r2,4f6f8 <alt_file_locked+0x88>
    {
      return -EACCES;
   4f6f0:	00bffcc4 	movi	r2,-13
   4f6f4:	00000906 	br	4f71c <alt_file_locked+0xac>
  for (i = 0; i <= alt_max_fd; i++)
   4f6f8:	e0bfff17 	ldw	r2,-4(fp)
   4f6fc:	10800044 	addi	r2,r2,1
   4f700:	e0bfff15 	stw	r2,-4(fp)
   4f704:	00800174 	movhi	r2,5
   4f708:	10888417 	ldw	r2,8720(r2)
   4f70c:	1007883a 	mov	r3,r2
   4f710:	e0bfff17 	ldw	r2,-4(fp)
   4f714:	18bfe12e 	bgeu	r3,r2,4f69c <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   4f718:	0005883a 	mov	r2,zero
}
   4f71c:	e037883a 	mov	sp,fp
   4f720:	df000017 	ldw	fp,0(sp)
   4f724:	dec00104 	addi	sp,sp,4
   4f728:	f800283a 	ret

0004f72c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   4f72c:	defff604 	addi	sp,sp,-40
   4f730:	dfc00915 	stw	ra,36(sp)
   4f734:	df000815 	stw	fp,32(sp)
   4f738:	df000804 	addi	fp,sp,32
   4f73c:	e13ffa15 	stw	r4,-24(fp)
   4f740:	e17ff915 	stw	r5,-28(fp)
   4f744:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   4f748:	00bfffc4 	movi	r2,-1
   4f74c:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   4f750:	00bffb44 	movi	r2,-19
   4f754:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   4f758:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   4f75c:	01400174 	movhi	r5,5
   4f760:	29488204 	addi	r5,r5,8712
   4f764:	e13ffa17 	ldw	r4,-24(fp)
   4f768:	004fa780 	call	4fa78 <alt_find_dev>
   4f76c:	e0bfff15 	stw	r2,-4(fp)
   4f770:	e0bfff17 	ldw	r2,-4(fp)
   4f774:	1000051e 	bne	r2,zero,4f78c <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   4f778:	e13ffa17 	ldw	r4,-24(fp)
   4f77c:	004fb080 	call	4fb08 <alt_find_file>
   4f780:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   4f784:	00800044 	movi	r2,1
   4f788:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   4f78c:	e0bfff17 	ldw	r2,-4(fp)
   4f790:	10002926 	beq	r2,zero,4f838 <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
   4f794:	e13fff17 	ldw	r4,-4(fp)
   4f798:	004fc180 	call	4fc18 <alt_get_fd>
   4f79c:	e0bffe15 	stw	r2,-8(fp)
   4f7a0:	e0bffe17 	ldw	r2,-8(fp)
   4f7a4:	1000030e 	bge	r2,zero,4f7b4 <open+0x88>
    {
      status = index;
   4f7a8:	e0bffe17 	ldw	r2,-8(fp)
   4f7ac:	e0bffd15 	stw	r2,-12(fp)
   4f7b0:	00002306 	br	4f840 <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
   4f7b4:	e0bffe17 	ldw	r2,-8(fp)
   4f7b8:	10c00324 	muli	r3,r2,12
   4f7bc:	00800174 	movhi	r2,5
   4f7c0:	10840404 	addi	r2,r2,4112
   4f7c4:	1885883a 	add	r2,r3,r2
   4f7c8:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   4f7cc:	e0fff917 	ldw	r3,-28(fp)
   4f7d0:	00900034 	movhi	r2,16384
   4f7d4:	10bfffc4 	addi	r2,r2,-1
   4f7d8:	1886703a 	and	r3,r3,r2
   4f7dc:	e0bffb17 	ldw	r2,-20(fp)
   4f7e0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   4f7e4:	e0bffc17 	ldw	r2,-16(fp)
   4f7e8:	1000051e 	bne	r2,zero,4f800 <open+0xd4>
   4f7ec:	e13ffb17 	ldw	r4,-20(fp)
   4f7f0:	004f6700 	call	4f670 <alt_file_locked>
   4f7f4:	e0bffd15 	stw	r2,-12(fp)
   4f7f8:	e0bffd17 	ldw	r2,-12(fp)
   4f7fc:	10001016 	blt	r2,zero,4f840 <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   4f800:	e0bfff17 	ldw	r2,-4(fp)
   4f804:	10800317 	ldw	r2,12(r2)
   4f808:	10000826 	beq	r2,zero,4f82c <open+0x100>
   4f80c:	e0bfff17 	ldw	r2,-4(fp)
   4f810:	10800317 	ldw	r2,12(r2)
   4f814:	e1fff817 	ldw	r7,-32(fp)
   4f818:	e1bff917 	ldw	r6,-28(fp)
   4f81c:	e17ffa17 	ldw	r5,-24(fp)
   4f820:	e13ffb17 	ldw	r4,-20(fp)
   4f824:	103ee83a 	callr	r2
   4f828:	00000106 	br	4f830 <open+0x104>
   4f82c:	0005883a 	mov	r2,zero
   4f830:	e0bffd15 	stw	r2,-12(fp)
   4f834:	00000206 	br	4f840 <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
   4f838:	00bffb44 	movi	r2,-19
   4f83c:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   4f840:	e0bffd17 	ldw	r2,-12(fp)
   4f844:	1000090e 	bge	r2,zero,4f86c <open+0x140>
  {
    alt_release_fd (index);  
   4f848:	e13ffe17 	ldw	r4,-8(fp)
   4f84c:	004df800 	call	4df80 <alt_release_fd>
    ALT_ERRNO = -status;
   4f850:	004f6280 	call	4f628 <alt_get_errno>
   4f854:	1007883a 	mov	r3,r2
   4f858:	e0bffd17 	ldw	r2,-12(fp)
   4f85c:	0085c83a 	sub	r2,zero,r2
   4f860:	18800015 	stw	r2,0(r3)
    return -1;
   4f864:	00bfffc4 	movi	r2,-1
   4f868:	00000106 	br	4f870 <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
   4f86c:	e0bffe17 	ldw	r2,-8(fp)
}
   4f870:	e037883a 	mov	sp,fp
   4f874:	dfc00117 	ldw	ra,4(sp)
   4f878:	df000017 	ldw	fp,0(sp)
   4f87c:	dec00204 	addi	sp,sp,8
   4f880:	f800283a 	ret

0004f884 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   4f884:	defffa04 	addi	sp,sp,-24
   4f888:	df000515 	stw	fp,20(sp)
   4f88c:	df000504 	addi	fp,sp,20
   4f890:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   4f894:	0005303a 	rdctl	r2,status
   4f898:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f89c:	e0fffc17 	ldw	r3,-16(fp)
   4f8a0:	00bfff84 	movi	r2,-2
   4f8a4:	1884703a 	and	r2,r3,r2
   4f8a8:	1001703a 	wrctl	status,r2
  return context;
   4f8ac:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   4f8b0:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   4f8b4:	e0bffb17 	ldw	r2,-20(fp)
   4f8b8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   4f8bc:	e0bffd17 	ldw	r2,-12(fp)
   4f8c0:	10800017 	ldw	r2,0(r2)
   4f8c4:	e0fffd17 	ldw	r3,-12(fp)
   4f8c8:	18c00117 	ldw	r3,4(r3)
   4f8cc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   4f8d0:	e0bffd17 	ldw	r2,-12(fp)
   4f8d4:	10800117 	ldw	r2,4(r2)
   4f8d8:	e0fffd17 	ldw	r3,-12(fp)
   4f8dc:	18c00017 	ldw	r3,0(r3)
   4f8e0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   4f8e4:	e0bffd17 	ldw	r2,-12(fp)
   4f8e8:	e0fffd17 	ldw	r3,-12(fp)
   4f8ec:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   4f8f0:	e0bffd17 	ldw	r2,-12(fp)
   4f8f4:	e0fffd17 	ldw	r3,-12(fp)
   4f8f8:	10c00015 	stw	r3,0(r2)
} 
   4f8fc:	0001883a 	nop
   4f900:	e0bfff17 	ldw	r2,-4(fp)
   4f904:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   4f908:	e0bffe17 	ldw	r2,-8(fp)
   4f90c:	1001703a 	wrctl	status,r2
}
   4f910:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   4f914:	0001883a 	nop
   4f918:	e037883a 	mov	sp,fp
   4f91c:	df000017 	ldw	fp,0(sp)
   4f920:	dec00104 	addi	sp,sp,4
   4f924:	f800283a 	ret

0004f928 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   4f928:	defff904 	addi	sp,sp,-28
   4f92c:	dfc00615 	stw	ra,24(sp)
   4f930:	df000515 	stw	fp,20(sp)
   4f934:	dc400415 	stw	r17,16(sp)
   4f938:	dc000315 	stw	r16,12(sp)
   4f93c:	df000504 	addi	fp,sp,20
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   4f940:	d0a00c17 	ldw	r2,-32720(gp)
   4f944:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   4f948:	d1270e17 	ldw	r4,-25544(gp)
   4f94c:	d1670f17 	ldw	r5,-25540(gp)
   4f950:	01800044 	movi	r6,1
   4f954:	000f883a 	mov	r7,zero
   4f958:	2185883a 	add	r2,r4,r6
   4f95c:	1111803a 	cmpltu	r8,r2,r4
   4f960:	29c7883a 	add	r3,r5,r7
   4f964:	40c9883a 	add	r4,r8,r3
   4f968:	2007883a 	mov	r3,r4
   4f96c:	1009883a 	mov	r4,r2
   4f970:	180b883a 	mov	r5,r3
   4f974:	d1270e15 	stw	r4,-25544(gp)
   4f978:	d1670f15 	stw	r5,-25540(gp)
 
  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f97c:	00002906 	br	4fa24 <alt_tick+0xfc>
  {
    next = (alt_alarm*) alarm->llist.next;
   4f980:	e0bffd17 	ldw	r2,-12(fp)
   4f984:	10800017 	ldw	r2,0(r2)
   4f988:	e0bffc15 	stw	r2,-16(fp)
    
    /* if the alarm period has expired, make the callback */    
    if (alarm->time <= _alt_nticks)
   4f98c:	e13ffd17 	ldw	r4,-12(fp)
   4f990:	20800217 	ldw	r2,8(r4)
   4f994:	20c00317 	ldw	r3,12(r4)
   4f998:	d1270e17 	ldw	r4,-25544(gp)
   4f99c:	d1670f17 	ldw	r5,-25540(gp)
   4f9a0:	28c01e36 	bltu	r5,r3,4fa1c <alt_tick+0xf4>
   4f9a4:	1940011e 	bne	r3,r5,4f9ac <alt_tick+0x84>
   4f9a8:	20801c36 	bltu	r4,r2,4fa1c <alt_tick+0xf4>
    {
      next_callback = alarm->callback (alarm->context);
   4f9ac:	e0bffd17 	ldw	r2,-12(fp)
   4f9b0:	10800417 	ldw	r2,16(r2)
   4f9b4:	e0fffd17 	ldw	r3,-12(fp)
   4f9b8:	18c00517 	ldw	r3,20(r3)
   4f9bc:	1809883a 	mov	r4,r3
   4f9c0:	103ee83a 	callr	r2
   4f9c4:	e0bffb15 	stw	r2,-20(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   4f9c8:	e0bffb17 	ldw	r2,-20(fp)
   4f9cc:	1000031e 	bne	r2,zero,4f9dc <alt_tick+0xb4>
      {
        alt_alarm_stop (alarm);
   4f9d0:	e13ffd17 	ldw	r4,-12(fp)
   4f9d4:	004f8840 	call	4f884 <alt_alarm_stop>
   4f9d8:	00001006 	br	4fa1c <alt_tick+0xf4>
      }
      else
      {
        alarm->time += next_callback;
   4f9dc:	e0bffd17 	ldw	r2,-12(fp)
   4f9e0:	11000217 	ldw	r4,8(r2)
   4f9e4:	11400317 	ldw	r5,12(r2)
   4f9e8:	e0bffb17 	ldw	r2,-20(fp)
   4f9ec:	1021883a 	mov	r16,r2
   4f9f0:	0023883a 	mov	r17,zero
   4f9f4:	2405883a 	add	r2,r4,r16
   4f9f8:	110d803a 	cmpltu	r6,r2,r4
   4f9fc:	2c47883a 	add	r3,r5,r17
   4fa00:	30c9883a 	add	r4,r6,r3
   4fa04:	2007883a 	mov	r3,r4
   4fa08:	1009883a 	mov	r4,r2
   4fa0c:	180b883a 	mov	r5,r3
   4fa10:	e0bffd17 	ldw	r2,-12(fp)
   4fa14:	11000215 	stw	r4,8(r2)
   4fa18:	11400315 	stw	r5,12(r2)
      }
    }
    alarm = next;
   4fa1c:	e0bffc17 	ldw	r2,-16(fp)
   4fa20:	e0bffd15 	stw	r2,-12(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   4fa24:	e0fffd17 	ldw	r3,-12(fp)
   4fa28:	d0a00c04 	addi	r2,gp,-32720
   4fa2c:	18bfd41e 	bne	r3,r2,4f980 <alt_tick+0x58>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   4fa30:	0001883a 	nop
}
   4fa34:	0001883a 	nop
   4fa38:	e6fffe04 	addi	sp,fp,-8
   4fa3c:	dfc00317 	ldw	ra,12(sp)
   4fa40:	df000217 	ldw	fp,8(sp)
   4fa44:	dc400117 	ldw	r17,4(sp)
   4fa48:	dc000017 	ldw	r16,0(sp)
   4fa4c:	dec00404 	addi	sp,sp,16
   4fa50:	f800283a 	ret

0004fa54 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   4fa54:	deffff04 	addi	sp,sp,-4
   4fa58:	df000015 	stw	fp,0(sp)
   4fa5c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   4fa60:	000170fa 	wrctl	ienable,zero
}
   4fa64:	0001883a 	nop
   4fa68:	e037883a 	mov	sp,fp
   4fa6c:	df000017 	ldw	fp,0(sp)
   4fa70:	dec00104 	addi	sp,sp,4
   4fa74:	f800283a 	ret

0004fa78 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   4fa78:	defffa04 	addi	sp,sp,-24
   4fa7c:	dfc00515 	stw	ra,20(sp)
   4fa80:	df000415 	stw	fp,16(sp)
   4fa84:	df000404 	addi	fp,sp,16
   4fa88:	e13ffd15 	stw	r4,-12(fp)
   4fa8c:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   4fa90:	e0bffc17 	ldw	r2,-16(fp)
   4fa94:	10800017 	ldw	r2,0(r2)
   4fa98:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   4fa9c:	e13ffd17 	ldw	r4,-12(fp)
   4faa0:	00411140 	call	41114 <strlen>
   4faa4:	10800044 	addi	r2,r2,1
   4faa8:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4faac:	00000d06 	br	4fae4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   4fab0:	e0bfff17 	ldw	r2,-4(fp)
   4fab4:	10800217 	ldw	r2,8(r2)
   4fab8:	e0fffe17 	ldw	r3,-8(fp)
   4fabc:	180d883a 	mov	r6,r3
   4fac0:	e17ffd17 	ldw	r5,-12(fp)
   4fac4:	1009883a 	mov	r4,r2
   4fac8:	004fd980 	call	4fd98 <memcmp>
   4facc:	1000021e 	bne	r2,zero,4fad8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   4fad0:	e0bfff17 	ldw	r2,-4(fp)
   4fad4:	00000706 	br	4faf4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   4fad8:	e0bfff17 	ldw	r2,-4(fp)
   4fadc:	10800017 	ldw	r2,0(r2)
   4fae0:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   4fae4:	e0ffff17 	ldw	r3,-4(fp)
   4fae8:	e0bffc17 	ldw	r2,-16(fp)
   4faec:	18bff01e 	bne	r3,r2,4fab0 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   4faf0:	0005883a 	mov	r2,zero
}
   4faf4:	e037883a 	mov	sp,fp
   4faf8:	dfc00117 	ldw	ra,4(sp)
   4fafc:	df000017 	ldw	fp,0(sp)
   4fb00:	dec00204 	addi	sp,sp,8
   4fb04:	f800283a 	ret

0004fb08 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   4fb08:	defffb04 	addi	sp,sp,-20
   4fb0c:	dfc00415 	stw	ra,16(sp)
   4fb10:	df000315 	stw	fp,12(sp)
   4fb14:	df000304 	addi	fp,sp,12
   4fb18:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   4fb1c:	00800174 	movhi	r2,5
   4fb20:	10888017 	ldw	r2,8704(r2)
   4fb24:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4fb28:	00003106 	br	4fbf0 <alt_find_file+0xe8>
  {
    len = strlen(next->name);
   4fb2c:	e0bfff17 	ldw	r2,-4(fp)
   4fb30:	10800217 	ldw	r2,8(r2)
   4fb34:	1009883a 	mov	r4,r2
   4fb38:	00411140 	call	41114 <strlen>
   4fb3c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   4fb40:	e0bfff17 	ldw	r2,-4(fp)
   4fb44:	10c00217 	ldw	r3,8(r2)
   4fb48:	e0bffe17 	ldw	r2,-8(fp)
   4fb4c:	10bfffc4 	addi	r2,r2,-1
   4fb50:	1885883a 	add	r2,r3,r2
   4fb54:	10800003 	ldbu	r2,0(r2)
   4fb58:	10803fcc 	andi	r2,r2,255
   4fb5c:	1080201c 	xori	r2,r2,128
   4fb60:	10bfe004 	addi	r2,r2,-128
   4fb64:	10800bd8 	cmpnei	r2,r2,47
   4fb68:	1000031e 	bne	r2,zero,4fb78 <alt_find_file+0x70>
    {
      len -= 1;
   4fb6c:	e0bffe17 	ldw	r2,-8(fp)
   4fb70:	10bfffc4 	addi	r2,r2,-1
   4fb74:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4fb78:	e0bffe17 	ldw	r2,-8(fp)
   4fb7c:	e0fffd17 	ldw	r3,-12(fp)
   4fb80:	1885883a 	add	r2,r3,r2
   4fb84:	10800003 	ldbu	r2,0(r2)
   4fb88:	10803fcc 	andi	r2,r2,255
   4fb8c:	1080201c 	xori	r2,r2,128
   4fb90:	10bfe004 	addi	r2,r2,-128
   4fb94:	10800be0 	cmpeqi	r2,r2,47
   4fb98:	1000081e 	bne	r2,zero,4fbbc <alt_find_file+0xb4>
   4fb9c:	e0bffe17 	ldw	r2,-8(fp)
   4fba0:	e0fffd17 	ldw	r3,-12(fp)
   4fba4:	1885883a 	add	r2,r3,r2
   4fba8:	10800003 	ldbu	r2,0(r2)
   4fbac:	10803fcc 	andi	r2,r2,255
   4fbb0:	1080201c 	xori	r2,r2,128
   4fbb4:	10bfe004 	addi	r2,r2,-128
   4fbb8:	10000a1e 	bne	r2,zero,4fbe4 <alt_find_file+0xdc>
        !memcmp (next->name, name, len))
   4fbbc:	e0bfff17 	ldw	r2,-4(fp)
   4fbc0:	10800217 	ldw	r2,8(r2)
   4fbc4:	e0fffe17 	ldw	r3,-8(fp)
   4fbc8:	180d883a 	mov	r6,r3
   4fbcc:	e17ffd17 	ldw	r5,-12(fp)
   4fbd0:	1009883a 	mov	r4,r2
   4fbd4:	004fd980 	call	4fd98 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   4fbd8:	1000021e 	bne	r2,zero,4fbe4 <alt_find_file+0xdc>
    {
      /* match found */

      return next;
   4fbdc:	e0bfff17 	ldw	r2,-4(fp)
   4fbe0:	00000806 	br	4fc04 <alt_find_file+0xfc>
    }
    next = (alt_dev*) next->llist.next;
   4fbe4:	e0bfff17 	ldw	r2,-4(fp)
   4fbe8:	10800017 	ldw	r2,0(r2)
   4fbec:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   4fbf0:	e0ffff17 	ldw	r3,-4(fp)
   4fbf4:	00800174 	movhi	r2,5
   4fbf8:	10888004 	addi	r2,r2,8704
   4fbfc:	18bfcb1e 	bne	r3,r2,4fb2c <alt_find_file+0x24>
  }
  
  /* No match found */
  
  return NULL;     
   4fc00:	0005883a 	mov	r2,zero
}
   4fc04:	e037883a 	mov	sp,fp
   4fc08:	dfc00117 	ldw	ra,4(sp)
   4fc0c:	df000017 	ldw	fp,0(sp)
   4fc10:	dec00204 	addi	sp,sp,8
   4fc14:	f800283a 	ret

0004fc18 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   4fc18:	defffc04 	addi	sp,sp,-16
   4fc1c:	df000315 	stw	fp,12(sp)
   4fc20:	df000304 	addi	fp,sp,12
   4fc24:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   4fc28:	00bffa04 	movi	r2,-24
   4fc2c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4fc30:	e03fff15 	stw	zero,-4(fp)
   4fc34:	00001906 	br	4fc9c <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   4fc38:	e0bfff17 	ldw	r2,-4(fp)
   4fc3c:	10c00324 	muli	r3,r2,12
   4fc40:	00800174 	movhi	r2,5
   4fc44:	1885883a 	add	r2,r3,r2
   4fc48:	10840417 	ldw	r2,4112(r2)
   4fc4c:	1000101e 	bne	r2,zero,4fc90 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   4fc50:	e0bfff17 	ldw	r2,-4(fp)
   4fc54:	11000324 	muli	r4,r2,12
   4fc58:	e0fffd17 	ldw	r3,-12(fp)
   4fc5c:	00800174 	movhi	r2,5
   4fc60:	2085883a 	add	r2,r4,r2
   4fc64:	10c40415 	stw	r3,4112(r2)
      if (i > alt_max_fd)
   4fc68:	00800174 	movhi	r2,5
   4fc6c:	10c88417 	ldw	r3,8720(r2)
   4fc70:	e0bfff17 	ldw	r2,-4(fp)
   4fc74:	1880030e 	bge	r3,r2,4fc84 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   4fc78:	e0ffff17 	ldw	r3,-4(fp)
   4fc7c:	00800174 	movhi	r2,5
   4fc80:	10c88415 	stw	r3,8720(r2)
      }
      rc = i;
   4fc84:	e0bfff17 	ldw	r2,-4(fp)
   4fc88:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   4fc8c:	00000706 	br	4fcac <alt_get_fd+0x94>
  for (i = 0; i < ALT_MAX_FD; i++)
   4fc90:	e0bfff17 	ldw	r2,-4(fp)
   4fc94:	10800044 	addi	r2,r2,1
   4fc98:	e0bfff15 	stw	r2,-4(fp)
   4fc9c:	e0bfff17 	ldw	r2,-4(fp)
   4fca0:	10800810 	cmplti	r2,r2,32
   4fca4:	103fe41e 	bne	r2,zero,4fc38 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   4fca8:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   4fcac:	e0bffe17 	ldw	r2,-8(fp)
}
   4fcb0:	e037883a 	mov	sp,fp
   4fcb4:	df000017 	ldw	fp,0(sp)
   4fcb8:	dec00104 	addi	sp,sp,4
   4fcbc:	f800283a 	ret

0004fcc0 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   4fcc0:	defffb04 	addi	sp,sp,-20
   4fcc4:	df000415 	stw	fp,16(sp)
   4fcc8:	df000404 	addi	fp,sp,16
   4fccc:	e13ffd15 	stw	r4,-12(fp)
   4fcd0:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   4fcd4:	e0bffc17 	ldw	r2,-16(fp)
   4fcd8:	10840070 	cmpltui	r2,r2,4097
   4fcdc:	1000021e 	bne	r2,zero,4fce8 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   4fce0:	00840004 	movi	r2,4096
   4fce4:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
   4fce8:	e0fffd17 	ldw	r3,-12(fp)
   4fcec:	e0bffc17 	ldw	r2,-16(fp)
   4fcf0:	1885883a 	add	r2,r3,r2
   4fcf4:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   4fcf8:	e0bffd17 	ldw	r2,-12(fp)
   4fcfc:	e0bfff15 	stw	r2,-4(fp)
   4fd00:	00000506 	br	4fd18 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   4fd04:	e0bfff17 	ldw	r2,-4(fp)
   4fd08:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   4fd0c:	e0bfff17 	ldw	r2,-4(fp)
   4fd10:	10800804 	addi	r2,r2,32
   4fd14:	e0bfff15 	stw	r2,-4(fp)
   4fd18:	e0ffff17 	ldw	r3,-4(fp)
   4fd1c:	e0bffe17 	ldw	r2,-8(fp)
   4fd20:	18bff836 	bltu	r3,r2,4fd04 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   4fd24:	e0bffd17 	ldw	r2,-12(fp)
   4fd28:	108007cc 	andi	r2,r2,31
   4fd2c:	10000226 	beq	r2,zero,4fd38 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   4fd30:	e0bfff17 	ldw	r2,-4(fp)
   4fd34:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   4fd38:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   4fd3c:	0001883a 	nop
   4fd40:	e037883a 	mov	sp,fp
   4fd44:	df000017 	ldw	fp,0(sp)
   4fd48:	dec00104 	addi	sp,sp,4
   4fd4c:	f800283a 	ret

0004fd50 <atexit>:
   4fd50:	200b883a 	mov	r5,r4
   4fd54:	000f883a 	mov	r7,zero
   4fd58:	000d883a 	mov	r6,zero
   4fd5c:	0009883a 	mov	r4,zero
   4fd60:	004fe101 	jmpi	4fe10 <__register_exitproc>

0004fd64 <exit>:
   4fd64:	defffe04 	addi	sp,sp,-8
   4fd68:	000b883a 	mov	r5,zero
   4fd6c:	dc000015 	stw	r16,0(sp)
   4fd70:	dfc00115 	stw	ra,4(sp)
   4fd74:	2021883a 	mov	r16,r4
   4fd78:	004fea00 	call	4fea0 <__call_exitprocs>
   4fd7c:	00800174 	movhi	r2,5
   4fd80:	11087c17 	ldw	r4,8688(r2)
   4fd84:	20800f17 	ldw	r2,60(r4)
   4fd88:	10000126 	beq	r2,zero,4fd90 <exit+0x2c>
   4fd8c:	103ee83a 	callr	r2
   4fd90:	8009883a 	mov	r4,r16
   4fd94:	004d7f80 	call	4d7f8 <_exit>

0004fd98 <memcmp>:
   4fd98:	30800128 	cmpgeui	r2,r6,4
   4fd9c:	10000d26 	beq	r2,zero,4fdd4 <memcmp+0x3c>
   4fda0:	2144b03a 	or	r2,r4,r5
   4fda4:	108000cc 	andi	r2,r2,3
   4fda8:	10000726 	beq	r2,zero,4fdc8 <memcmp+0x30>
   4fdac:	30bfffc4 	addi	r2,r6,-1
   4fdb0:	00000a06 	br	4fddc <memcmp+0x44>
   4fdb4:	31bfff04 	addi	r6,r6,-4
   4fdb8:	30800128 	cmpgeui	r2,r6,4
   4fdbc:	21000104 	addi	r4,r4,4
   4fdc0:	29400104 	addi	r5,r5,4
   4fdc4:	10000326 	beq	r2,zero,4fdd4 <memcmp+0x3c>
   4fdc8:	20c00017 	ldw	r3,0(r4)
   4fdcc:	28800017 	ldw	r2,0(r5)
   4fdd0:	18bff826 	beq	r3,r2,4fdb4 <memcmp+0x1c>
   4fdd4:	30bfffc4 	addi	r2,r6,-1
   4fdd8:	30000b26 	beq	r6,zero,4fe08 <memcmp+0x70>
   4fddc:	11800044 	addi	r6,r2,1
   4fde0:	218d883a 	add	r6,r4,r6
   4fde4:	00000106 	br	4fdec <memcmp+0x54>
   4fde8:	21800726 	beq	r4,r6,4fe08 <memcmp+0x70>
   4fdec:	20800003 	ldbu	r2,0(r4)
   4fdf0:	28c00003 	ldbu	r3,0(r5)
   4fdf4:	21000044 	addi	r4,r4,1
   4fdf8:	29400044 	addi	r5,r5,1
   4fdfc:	10fffa26 	beq	r2,r3,4fde8 <memcmp+0x50>
   4fe00:	10c5c83a 	sub	r2,r2,r3
   4fe04:	f800283a 	ret
   4fe08:	0005883a 	mov	r2,zero
   4fe0c:	f800283a 	ret

0004fe10 <__register_exitproc>:
   4fe10:	00800174 	movhi	r2,5
   4fe14:	10c87c17 	ldw	r3,8688(r2)
   4fe18:	18805217 	ldw	r2,328(r3)
   4fe1c:	10001726 	beq	r2,zero,4fe7c <__register_exitproc+0x6c>
   4fe20:	10c00117 	ldw	r3,4(r2)
   4fe24:	1a000808 	cmpgei	r8,r3,32
   4fe28:	40001b1e 	bne	r8,zero,4fe98 <__register_exitproc+0x88>
   4fe2c:	20000b26 	beq	r4,zero,4fe5c <__register_exitproc+0x4c>
   4fe30:	181090ba 	slli	r8,r3,2
   4fe34:	02400044 	movi	r9,1
   4fe38:	48d2983a 	sll	r9,r9,r3
   4fe3c:	1211883a 	add	r8,r2,r8
   4fe40:	41802215 	stw	r6,136(r8)
   4fe44:	11806217 	ldw	r6,392(r2)
   4fe48:	21000098 	cmpnei	r4,r4,2
   4fe4c:	324cb03a 	or	r6,r6,r9
   4fe50:	11806215 	stw	r6,392(r2)
   4fe54:	41c04215 	stw	r7,264(r8)
   4fe58:	20000b26 	beq	r4,zero,4fe88 <__register_exitproc+0x78>
   4fe5c:	19000084 	addi	r4,r3,2
   4fe60:	200890ba 	slli	r4,r4,2
   4fe64:	18c00044 	addi	r3,r3,1
   4fe68:	10c00115 	stw	r3,4(r2)
   4fe6c:	1105883a 	add	r2,r2,r4
   4fe70:	11400015 	stw	r5,0(r2)
   4fe74:	0005883a 	mov	r2,zero
   4fe78:	f800283a 	ret
   4fe7c:	18805304 	addi	r2,r3,332
   4fe80:	18805215 	stw	r2,328(r3)
   4fe84:	003fe606 	br	4fe20 <__register_exitproc+0x10>
   4fe88:	11006317 	ldw	r4,396(r2)
   4fe8c:	2248b03a 	or	r4,r4,r9
   4fe90:	11006315 	stw	r4,396(r2)
   4fe94:	003ff106 	br	4fe5c <__register_exitproc+0x4c>
   4fe98:	00bfffc4 	movi	r2,-1
   4fe9c:	f800283a 	ret

0004fea0 <__call_exitprocs>:
   4fea0:	defff704 	addi	sp,sp,-36
   4fea4:	00800174 	movhi	r2,5
   4fea8:	dcc00315 	stw	r19,12(sp)
   4feac:	14c87c17 	ldw	r19,8688(r2)
   4feb0:	dc800215 	stw	r18,8(sp)
   4feb4:	dfc00815 	stw	ra,32(sp)
   4feb8:	9c805217 	ldw	r18,328(r19)
   4febc:	ddc00715 	stw	r23,28(sp)
   4fec0:	dd800615 	stw	r22,24(sp)
   4fec4:	dd400515 	stw	r21,20(sp)
   4fec8:	dd000415 	stw	r20,16(sp)
   4fecc:	dc400115 	stw	r17,4(sp)
   4fed0:	dc000015 	stw	r16,0(sp)
   4fed4:	90001026 	beq	r18,zero,4ff18 <__call_exitprocs+0x78>
   4fed8:	202b883a 	mov	r21,r4
   4fedc:	282d883a 	mov	r22,r5
   4fee0:	05000044 	movi	r20,1
   4fee4:	94000117 	ldw	r16,4(r18)
   4fee8:	847fffc4 	addi	r17,r16,-1
   4feec:	88000a16 	blt	r17,zero,4ff18 <__call_exitprocs+0x78>
   4fef0:	84000044 	addi	r16,r16,1
   4fef4:	802090ba 	slli	r16,r16,2
   4fef8:	9421883a 	add	r16,r18,r16
   4fefc:	b0001126 	beq	r22,zero,4ff44 <__call_exitprocs+0xa4>
   4ff00:	80804017 	ldw	r2,256(r16)
   4ff04:	15800f26 	beq	r2,r22,4ff44 <__call_exitprocs+0xa4>
   4ff08:	8c7fffc4 	addi	r17,r17,-1
   4ff0c:	88bfffd8 	cmpnei	r2,r17,-1
   4ff10:	843fff04 	addi	r16,r16,-4
   4ff14:	103ff91e 	bne	r2,zero,4fefc <__call_exitprocs+0x5c>
   4ff18:	dfc00817 	ldw	ra,32(sp)
   4ff1c:	ddc00717 	ldw	r23,28(sp)
   4ff20:	dd800617 	ldw	r22,24(sp)
   4ff24:	dd400517 	ldw	r21,20(sp)
   4ff28:	dd000417 	ldw	r20,16(sp)
   4ff2c:	dcc00317 	ldw	r19,12(sp)
   4ff30:	dc800217 	ldw	r18,8(sp)
   4ff34:	dc400117 	ldw	r17,4(sp)
   4ff38:	dc000017 	ldw	r16,0(sp)
   4ff3c:	dec00904 	addi	sp,sp,36
   4ff40:	f800283a 	ret
   4ff44:	90800117 	ldw	r2,4(r18)
   4ff48:	81800017 	ldw	r6,0(r16)
   4ff4c:	10bfffc4 	addi	r2,r2,-1
   4ff50:	14401726 	beq	r2,r17,4ffb0 <__call_exitprocs+0x110>
   4ff54:	80000015 	stw	zero,0(r16)
   4ff58:	303feb26 	beq	r6,zero,4ff08 <__call_exitprocs+0x68>
   4ff5c:	a446983a 	sll	r3,r20,r17
   4ff60:	90806217 	ldw	r2,392(r18)
   4ff64:	95c00117 	ldw	r23,4(r18)
   4ff68:	1884703a 	and	r2,r3,r2
   4ff6c:	1000081e 	bne	r2,zero,4ff90 <__call_exitprocs+0xf0>
   4ff70:	303ee83a 	callr	r6
   4ff74:	90c00117 	ldw	r3,4(r18)
   4ff78:	98805217 	ldw	r2,328(r19)
   4ff7c:	1dc0011e 	bne	r3,r23,4ff84 <__call_exitprocs+0xe4>
   4ff80:	14bfe126 	beq	r2,r18,4ff08 <__call_exitprocs+0x68>
   4ff84:	103fe426 	beq	r2,zero,4ff18 <__call_exitprocs+0x78>
   4ff88:	1025883a 	mov	r18,r2
   4ff8c:	003fd506 	br	4fee4 <__call_exitprocs+0x44>
   4ff90:	90806317 	ldw	r2,396(r18)
   4ff94:	81002017 	ldw	r4,128(r16)
   4ff98:	1886703a 	and	r3,r3,r2
   4ff9c:	1800061e 	bne	r3,zero,4ffb8 <__call_exitprocs+0x118>
   4ffa0:	200b883a 	mov	r5,r4
   4ffa4:	a809883a 	mov	r4,r21
   4ffa8:	303ee83a 	callr	r6
   4ffac:	003ff106 	br	4ff74 <__call_exitprocs+0xd4>
   4ffb0:	94400115 	stw	r17,4(r18)
   4ffb4:	003fe806 	br	4ff58 <__call_exitprocs+0xb8>
   4ffb8:	303ee83a 	callr	r6
   4ffbc:	003fed06 	br	4ff74 <__call_exitprocs+0xd4>
